/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assert, expect, it, test } from "vitest";
import { Glean } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Announcements Createannouncement", async () => {
  const testHttpClient = createTestHTTPClient("createannouncement");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.create({
    createAnnouncementRequest: {
      startTime: new Date("2024-06-17T07:14:55.338Z"),
      endTime: new Date("2024-11-30T17:06:07.804Z"),
      title: "<value>",
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [],
    },
  });
  expect(result).toBeDefined();
});

it.skip("Announcements Createdraftannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step createdraftannouncement.test referencing operation createdraftannouncement not found in document`]",
  );
});

test("Announcements Deleteannouncement", async () => {
  const testHttpClient = createTestHTTPClient("deleteannouncement");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.client.announcements.delete({
    deleteAnnouncementRequest: {
      id: 545907,
    },
  });
});

it.skip("Announcements Deletedraftannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step deletedraftannouncement.test referencing operation deletedraftannouncement not found in document`]",
  );
});

it.skip("Announcements Getannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getannouncement.test referencing operation getannouncement not found in document`]",
  );
});

it.skip("Announcements Getdraftannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getdraftannouncement.test referencing operation getdraftannouncement not found in document`]",
  );
});

it.skip("Announcements Listannouncements", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step listannouncements.test referencing operation listannouncements not found in document`]",
  );
});

it.skip("Announcements Previewannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step previewannouncement.test referencing operation previewannouncement not found in document`]",
  );
});

it.skip("Announcements Previewannouncementdraft", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step previewannouncementdraft.test referencing operation previewannouncementdraft not found in document`]",
  );
});

it.skip("Announcements Publishdraftannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step publishdraftannouncement.test referencing operation publishdraftannouncement not found in document`]",
  );
});

it.skip("Announcements Unpublishannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step unpublishannouncement.test referencing operation unpublishannouncement not found in document`]",
  );
});

test("Announcements Updateannouncement", async () => {
  const testHttpClient = createTestHTTPClient("updateannouncement");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.update({
    updateAnnouncementRequest: {
      startTime: new Date("2025-07-28T19:04:48.565Z"),
      endTime: new Date("2024-10-16T10:52:42.015Z"),
      title: "<value>",
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [
        {
          fieldName: "type",
          values: [
            {
              value: "Spreadsheet",
              relationType: "EQUALS",
            },
            {
              value: "Presentation",
              relationType: "EQUALS",
            },
          ],
        },
      ],
      id: 344620,
    },
  });
  expect(result).toBeDefined();
});

it.skip("Announcements Updatedraftannouncement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step updatedraftannouncement.test referencing operation updatedraftannouncement not found in document`]",
  );
});

it.skip("Announcements Create Announcement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step createAnnouncement.test referencing operation createAnnouncement not found in document`]",
  );
});

it.skip("Announcements Get Announcement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getAnnouncement.test referencing operation getAnnouncement not found in document`]",
  );
});

it.skip("Announcements Preview Announcement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step previewAnnouncement.test referencing operation previewAnnouncement not found in document`]",
  );
});

it.skip("Announcements Preview Announcement Draft", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step previewAnnouncementDraft.test referencing operation previewAnnouncementDraft not found in document`]",
  );
});
