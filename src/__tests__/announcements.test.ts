/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assert, expect, it, test } from "vitest";
import { Glean } from "../index.js";
import { RFCDate } from "../types/index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Announcements Createannouncement", async () => {
  const testHttpClient = createTestHTTPClient("createannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.create({
    createAnnouncementRequest: {
      startTime: new Date("2024-06-17T07:14:55.338Z"),
      endTime: new Date("2024-11-30T17:06:07.804Z"),
      title: "<value>",
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    body: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      structuredList: [],
    },
    audienceFilters: [
      {
        fieldName: "type",
        values: [
          {
            value: "Spreadsheet",
            relationType: "EQUALS",
          },
          {
            value: "Presentation",
            relationType: "EQUALS",
          },
        ],
      },
    ],
    draftId: 342,
    author: {
      name: "George Clooney",
      obfuscatedId: "abc123",
      relatedDocuments: [],
      metadata: {
        type: "FULL_TIME",
        title: "Actor",
        department: "Movies",
        email: "george@example.com",
        location: "Hollywood, CA",
        phone: "6505551234",
        photoUrl: "https://example.com/george.jpg",
        startDate: new RFCDate("2000-01-23"),
        datasourceProfile: [
          {
            datasource: "github",
            handle: "<value>",
          },
          {
            datasource: "github",
            handle: "<value>",
          },
        ],
        querySuggestions: {
          suggestions: [],
        },
        inviteInfo: {
          invites: [],
        },
        customFields: [],
        badges: [
          {
            key: "deployment_name_new_hire",
            displayName: "New hire",
            iconConfig: {
              color: "#343CED",
              key: "person_icon",
              iconType: "GLYPH",
              name: "user",
            },
          },
        ],
      },
    },
    updatedBy: {
      name: "George Clooney",
      obfuscatedId: "abc123",
    },
    sourceDocument: {
      metadata: {
        datasource: "datasource",
        objectType: "Feature Request",
        container: "container",
        parentId: "JIRA_EN-1337",
        mimeType: "mimeType",
        documentId: "documentId",
        createTime: new Date("2000-01-23T04:56:07.000Z"),
        updateTime: new Date("2000-01-23T04:56:07.000Z"),
        owner: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        mentionedPeople: [],
        components: [
          "Backend",
          "Networking",
        ],
        status: "[\"Done\"]",
        pins: [],
        assignedTo: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        collections: [],
        interactions: {
          reacts: [],
          shares: [],
        },
        verification: {
          state: "UNVERIFIED",
          metadata: {
            lastVerifier: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            reminders: [],
            lastReminder: {
              assignee: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              requestor: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              remindAt: 129663,
            },
            candidateVerifiers: [],
          },
        },
        customData: {
          "someCustomField": {},
        },
        contactPerson: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
      },
    },
  });
});

test("Announcements Createdraftannouncement", async () => {
  const testHttpClient = createTestHTTPClient("createdraftannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.createDraft({
    createDraftAnnouncementRequest: {
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [
        {
          fieldName: "type",
          values: [
            {
              value: "Spreadsheet",
              relationType: "EQUALS",
            },
            {
              value: "Presentation",
              relationType: "EQUALS",
            },
          ],
        },
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    body: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      structuredList: [],
    },
    audienceFilters: [
      {
        fieldName: "type",
        values: [
          {
            value: "Spreadsheet",
            relationType: "EQUALS",
          },
          {
            value: "Presentation",
            relationType: "EQUALS",
          },
        ],
      },
    ],
    draftId: 342,
    author: {
      name: "George Clooney",
      obfuscatedId: "abc123",
      relatedDocuments: [],
      metadata: {
        type: "FULL_TIME",
        title: "Actor",
        department: "Movies",
        email: "george@example.com",
        location: "Hollywood, CA",
        phone: "6505551234",
        photoUrl: "https://example.com/george.jpg",
        startDate: new RFCDate("2000-01-23"),
        datasourceProfile: [
          {
            datasource: "github",
            handle: "<value>",
          },
        ],
        querySuggestions: {
          suggestions: [],
        },
        inviteInfo: {
          invites: [],
        },
        customFields: [],
        badges: [
          {
            key: "deployment_name_new_hire",
            displayName: "New hire",
            iconConfig: {
              color: "#343CED",
              key: "person_icon",
              iconType: "GLYPH",
              name: "user",
            },
          },
        ],
      },
    },
    updatedBy: {
      name: "George Clooney",
      obfuscatedId: "abc123",
    },
    sourceDocument: {
      metadata: {
        datasource: "datasource",
        objectType: "Feature Request",
        container: "container",
        parentId: "JIRA_EN-1337",
        mimeType: "mimeType",
        documentId: "documentId",
        createTime: new Date("2000-01-23T04:56:07.000Z"),
        updateTime: new Date("2000-01-23T04:56:07.000Z"),
        owner: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        mentionedPeople: [],
        components: [
          "Backend",
          "Networking",
        ],
        status: "[\"Done\"]",
        pins: [],
        assignedTo: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        collections: [],
        interactions: {
          reacts: [],
          shares: [],
        },
        verification: {
          state: "UNVERIFIED",
          metadata: {
            lastVerifier: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            reminders: [],
            lastReminder: {
              assignee: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              requestor: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              remindAt: 129663,
            },
            candidateVerifiers: [],
          },
        },
        customData: {
          "someCustomField": {},
        },
        contactPerson: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
      },
    },
  });
});

test("Announcements Deleteannouncement", async () => {
  const testHttpClient = createTestHTTPClient("deleteannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.client.announcements.delete({
    deleteAnnouncementRequest: {
      id: 545907,
    },
  });
});

test("Announcements Deletedraftannouncement", async () => {
  const testHttpClient = createTestHTTPClient("deletedraftannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.client.announcements.deleteDraft({
    deleteAnnouncementRequest: {
      id: 545907,
    },
  });
});

test("Announcements Getannouncement", async () => {
  const testHttpClient = createTestHTTPClient("getannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.get({
    getAnnouncementRequest: {
      id: 700347,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    announcement: {
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [
        {
          fieldName: "type",
          values: [
            {
              value: "Spreadsheet",
              relationType: "EQUALS",
            },
            {
              value: "Presentation",
              relationType: "EQUALS",
            },
          ],
        },
      ],
      draftId: 342,
      author: {
        name: "George Clooney",
        obfuscatedId: "abc123",
        relatedDocuments: [],
        metadata: {
          type: "FULL_TIME",
          title: "Actor",
          department: "Movies",
          email: "george@example.com",
          location: "Hollywood, CA",
          phone: "6505551234",
          photoUrl: "https://example.com/george.jpg",
          startDate: new RFCDate("2000-01-23"),
          datasourceProfile: [
            {
              datasource: "github",
              handle: "<value>",
            },
            {
              datasource: "github",
              handle: "<value>",
            },
          ],
          querySuggestions: {
            suggestions: [],
          },
          inviteInfo: {
            invites: [],
          },
          customFields: [],
          badges: [
            {
              key: "deployment_name_new_hire",
              displayName: "New hire",
              iconConfig: {
                color: "#343CED",
                key: "person_icon",
                iconType: "GLYPH",
                name: "user",
              },
            },
          ],
        },
      },
      updatedBy: {
        name: "George Clooney",
        obfuscatedId: "abc123",
      },
      sourceDocument: {
        metadata: {
          datasource: "datasource",
          objectType: "Feature Request",
          container: "container",
          parentId: "JIRA_EN-1337",
          mimeType: "mimeType",
          documentId: "documentId",
          createTime: new Date("2000-01-23T04:56:07.000Z"),
          updateTime: new Date("2000-01-23T04:56:07.000Z"),
          owner: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          mentionedPeople: [],
          components: [
            "Backend",
            "Networking",
          ],
          status: "[\"Done\"]",
          pins: [],
          assignedTo: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          collections: [],
          interactions: {
            reacts: [],
            shares: [],
          },
          verification: {
            state: "UNVERIFIED",
            metadata: {
              lastVerifier: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              reminders: [],
              lastReminder: {
                assignee: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                requestor: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                remindAt: 129663,
              },
              candidateVerifiers: [],
            },
          },
          customData: {
            "someCustomField": {},
          },
          contactPerson: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        },
      },
    },
  });
});

test("Announcements Getdraftannouncement", async () => {
  const testHttpClient = createTestHTTPClient("getdraftannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.getDraft({
    getAnnouncementRequest: {
      id: 700347,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    announcement: {
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [
        {
          fieldName: "type",
          values: [
            {
              value: "Spreadsheet",
              relationType: "EQUALS",
            },
            {
              value: "Presentation",
              relationType: "EQUALS",
            },
          ],
        },
      ],
      draftId: 342,
      author: {
        name: "George Clooney",
        obfuscatedId: "abc123",
        relatedDocuments: [],
        metadata: {
          type: "FULL_TIME",
          title: "Actor",
          department: "Movies",
          email: "george@example.com",
          location: "Hollywood, CA",
          phone: "6505551234",
          photoUrl: "https://example.com/george.jpg",
          startDate: new RFCDate("2000-01-23"),
          datasourceProfile: [
            {
              datasource: "github",
              handle: "<value>",
            },
            {
              datasource: "github",
              handle: "<value>",
            },
          ],
          querySuggestions: {
            suggestions: [],
          },
          inviteInfo: {
            invites: [],
          },
          customFields: [],
          badges: [
            {
              key: "deployment_name_new_hire",
              displayName: "New hire",
              iconConfig: {
                color: "#343CED",
                key: "person_icon",
                iconType: "GLYPH",
                name: "user",
              },
            },
          ],
        },
      },
      updatedBy: {
        name: "George Clooney",
        obfuscatedId: "abc123",
      },
      sourceDocument: {
        metadata: {
          datasource: "datasource",
          objectType: "Feature Request",
          container: "container",
          parentId: "JIRA_EN-1337",
          mimeType: "mimeType",
          documentId: "documentId",
          createTime: new Date("2000-01-23T04:56:07.000Z"),
          updateTime: new Date("2000-01-23T04:56:07.000Z"),
          owner: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          mentionedPeople: [],
          components: [
            "Backend",
            "Networking",
          ],
          status: "[\"Done\"]",
          pins: [],
          assignedTo: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          collections: [],
          interactions: {
            reacts: [],
            shares: [],
          },
          verification: {
            state: "UNVERIFIED",
            metadata: {
              lastVerifier: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              reminders: [],
              lastReminder: {
                assignee: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                requestor: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                remindAt: 129663,
              },
              candidateVerifiers: [],
            },
          },
          customData: {
            "someCustomField": {},
          },
          contactPerson: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        },
      },
    },
  });
});

test("Announcements Listannouncements", async () => {
  const testHttpClient = createTestHTTPClient("listannouncements");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.list({
    listAnnouncementsRequest: {},
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    announcements: [
      {
        draftId: 342,
      },
    ],
  });
});

test("Announcements Previewannouncement", async () => {
  const testHttpClient = createTestHTTPClient("previewannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.preview({
    structuredTextMutableProperties: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    structuredText: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      structuredList: [],
    },
    combinedAnswerText: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
    },
  });
});

test("Announcements Previewannouncementdraft", async () => {
  const testHttpClient = createTestHTTPClient("previewannouncementdraft");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.previewDraft({
    previewUgcRequest: {
      draft: {
        announcement: {
          body: {
            text:
              "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
            structuredList: [],
          },
          audienceFilters: [
            {
              fieldName: "type",
              values: [
                {
                  value: "Spreadsheet",
                  relationType: "EQUALS",
                },
                {
                  value: "Presentation",
                  relationType: "EQUALS",
                },
              ],
            },
          ],
        },
        answer: {
          question: "Why is the sky blue?",
          bodyText:
            "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
          audienceFilters: [],
          addedRoles: [
            {
              person: {
                name: "George Clooney",
                obfuscatedId: "abc123",
                relatedDocuments: [],
                metadata: {
                  type: "FULL_TIME",
                  title: "Actor",
                  department: "Movies",
                  email: "george@example.com",
                  location: "Hollywood, CA",
                  managementChain: [],
                  phone: "6505551234",
                  photoUrl: "https://example.com/george.jpg",
                  reports: [],
                  startDate: new RFCDate("2000-01-23"),
                  datasourceProfile: [],
                  querySuggestions: {
                    suggestions: [],
                  },
                  inviteInfo: {
                    invites: [],
                  },
                  customFields: [],
                  badges: [],
                },
              },
              role: "EDITOR",
            },
            {
              role: "EDITOR",
            },
            {
              role: "EDITOR",
            },
          ],
          removedRoles: [
            {
              role: "EDITOR",
            },
            {
              role: "EDITOR",
            },
          ],
          roles: [
            {
              role: "ANSWER_MODERATOR",
            },
            {
              role: "ANSWER_MODERATOR",
            },
          ],
        },
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    announcement: {
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [
        {
          fieldName: "type",
          values: [
            {
              value: "Spreadsheet",
              relationType: "EQUALS",
            },
            {
              value: "Presentation",
              relationType: "EQUALS",
            },
          ],
        },
      ],
      draftId: 342,
      author: {
        name: "George Clooney",
        obfuscatedId: "abc123",
        relatedDocuments: [],
        metadata: {
          type: "FULL_TIME",
          title: "Actor",
          department: "Movies",
          email: "george@example.com",
          location: "Hollywood, CA",
          phone: "6505551234",
          photoUrl: "https://example.com/george.jpg",
          startDate: new RFCDate("2000-01-23"),
          datasourceProfile: [
            {
              datasource: "github",
              handle: "<value>",
            },
            {
              datasource: "github",
              handle: "<value>",
            },
          ],
          querySuggestions: {
            suggestions: [],
          },
          inviteInfo: {
            invites: [],
          },
          customFields: [],
          badges: [
            {
              key: "deployment_name_new_hire",
              displayName: "New hire",
              iconConfig: {
                color: "#343CED",
                key: "person_icon",
                iconType: "GLYPH",
                name: "user",
              },
            },
          ],
        },
      },
      updatedBy: {
        name: "George Clooney",
        obfuscatedId: "abc123",
      },
      sourceDocument: {
        metadata: {
          datasource: "datasource",
          objectType: "Feature Request",
          container: "container",
          parentId: "JIRA_EN-1337",
          mimeType: "mimeType",
          documentId: "documentId",
          createTime: new Date("2000-01-23T04:56:07.000Z"),
          updateTime: new Date("2000-01-23T04:56:07.000Z"),
          owner: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          mentionedPeople: [],
          components: [
            "Backend",
            "Networking",
          ],
          status: "[\"Done\"]",
          pins: [],
          assignedTo: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          collections: [],
          interactions: {
            reacts: [],
            shares: [],
          },
          verification: {
            state: "UNVERIFIED",
            metadata: {
              lastVerifier: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              reminders: [],
              lastReminder: {
                assignee: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                requestor: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                remindAt: 129663,
              },
              candidateVerifiers: [],
            },
          },
          customData: {
            "someCustomField": {},
          },
          contactPerson: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        },
      },
    },
    answer: {
      id: 3,
      docId: "ANSWERS_answer_3",
      question: "Why is the sky blue?",
      bodyText:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      audienceFilters: [],
      addedRoles: [],
      removedRoles: [],
      roles: [],
      combinedAnswerText: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      },
      likes: {
        likedBy: [],
        likedByUser: true,
        numLikes: 22508,
      },
      board: {
        name: "<value>",
        description: "over aha if unless fooey unbearably",
        audienceFilters: [],
        id: 342305,
        creator: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
      },
    },
  });
});

test("Announcements Publishdraftannouncement", async () => {
  const testHttpClient = createTestHTTPClient("publishdraftannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.client.announcements.publish({
    publishDraftAnnouncementRequest: {
      id: 900222,
    },
  });
});

test("Announcements Unpublishannouncement", async () => {
  const testHttpClient = createTestHTTPClient("unpublishannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.unpublish({
    unpublishAnnouncementRequest: {
      id: 195182,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    body: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      structuredList: [],
    },
    audienceFilters: [
      {
        fieldName: "type",
        values: [
          {
            value: "Spreadsheet",
            relationType: "EQUALS",
          },
          {
            value: "Presentation",
            relationType: "EQUALS",
          },
        ],
      },
    ],
    draftId: 342,
    author: {
      name: "George Clooney",
      obfuscatedId: "abc123",
      relatedDocuments: [],
      metadata: {
        type: "FULL_TIME",
        title: "Actor",
        department: "Movies",
        email: "george@example.com",
        location: "Hollywood, CA",
        phone: "6505551234",
        photoUrl: "https://example.com/george.jpg",
        startDate: new RFCDate("2000-01-23"),
        datasourceProfile: [
          {
            datasource: "github",
            handle: "<value>",
          },
          {
            datasource: "github",
            handle: "<value>",
          },
        ],
        querySuggestions: {
          suggestions: [],
        },
        inviteInfo: {
          invites: [],
        },
        customFields: [],
        badges: [
          {
            key: "deployment_name_new_hire",
            displayName: "New hire",
            iconConfig: {
              color: "#343CED",
              key: "person_icon",
              iconType: "GLYPH",
              name: "user",
            },
          },
        ],
      },
    },
    updatedBy: {
      name: "George Clooney",
      obfuscatedId: "abc123",
    },
    sourceDocument: {
      metadata: {
        datasource: "datasource",
        objectType: "Feature Request",
        container: "container",
        parentId: "JIRA_EN-1337",
        mimeType: "mimeType",
        documentId: "documentId",
        createTime: new Date("2000-01-23T04:56:07.000Z"),
        updateTime: new Date("2000-01-23T04:56:07.000Z"),
        owner: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        mentionedPeople: [],
        components: [
          "Backend",
          "Networking",
        ],
        status: "[\"Done\"]",
        pins: [],
        assignedTo: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        collections: [],
        interactions: {
          reacts: [],
          shares: [],
        },
        verification: {
          state: "UNVERIFIED",
          metadata: {
            lastVerifier: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            reminders: [],
            lastReminder: {
              assignee: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              requestor: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              remindAt: 129663,
            },
            candidateVerifiers: [],
          },
        },
        customData: {
          "someCustomField": {},
        },
        contactPerson: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
      },
    },
  });
});

test("Announcements Updateannouncement", async () => {
  const testHttpClient = createTestHTTPClient("updateannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.update({
    updateAnnouncementRequest: {
      startTime: new Date("2025-07-28T19:04:48.565Z"),
      endTime: new Date("2024-10-16T10:52:42.015Z"),
      title: "<value>",
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [
        {
          fieldName: "type",
          values: [
            {
              value: "Spreadsheet",
              relationType: "EQUALS",
            },
            {
              value: "Presentation",
              relationType: "EQUALS",
            },
          ],
        },
      ],
      id: 344620,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    body: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      structuredList: [],
    },
    audienceFilters: [
      {
        fieldName: "type",
        values: [
          {
            value: "Spreadsheet",
            relationType: "EQUALS",
          },
          {
            value: "Presentation",
            relationType: "EQUALS",
          },
        ],
      },
    ],
    draftId: 342,
    author: {
      name: "George Clooney",
      obfuscatedId: "abc123",
      relatedDocuments: [],
      metadata: {
        type: "FULL_TIME",
        title: "Actor",
        department: "Movies",
        email: "george@example.com",
        location: "Hollywood, CA",
        phone: "6505551234",
        photoUrl: "https://example.com/george.jpg",
        startDate: new RFCDate("2000-01-23"),
        datasourceProfile: [
          {
            datasource: "github",
            handle: "<value>",
          },
          {
            datasource: "github",
            handle: "<value>",
          },
        ],
        querySuggestions: {
          suggestions: [],
        },
        inviteInfo: {
          invites: [],
        },
        customFields: [],
        badges: [
          {
            key: "deployment_name_new_hire",
            displayName: "New hire",
            iconConfig: {
              color: "#343CED",
              key: "person_icon",
              iconType: "GLYPH",
              name: "user",
            },
          },
        ],
      },
    },
    updatedBy: {
      name: "George Clooney",
      obfuscatedId: "abc123",
    },
    sourceDocument: {
      metadata: {
        datasource: "datasource",
        objectType: "Feature Request",
        container: "container",
        parentId: "JIRA_EN-1337",
        mimeType: "mimeType",
        documentId: "documentId",
        createTime: new Date("2000-01-23T04:56:07.000Z"),
        updateTime: new Date("2000-01-23T04:56:07.000Z"),
        owner: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        mentionedPeople: [],
        components: [
          "Backend",
          "Networking",
        ],
        status: "[\"Done\"]",
        pins: [],
        assignedTo: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        collections: [],
        interactions: {
          reacts: [],
          shares: [],
        },
        verification: {
          state: "UNVERIFIED",
          metadata: {
            lastVerifier: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            reminders: [],
            lastReminder: {
              assignee: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              requestor: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              remindAt: 129663,
            },
            candidateVerifiers: [],
          },
        },
        customData: {
          "someCustomField": {},
        },
        contactPerson: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
      },
    },
  });
});

test("Announcements Updatedraftannouncement", async () => {
  const testHttpClient = createTestHTTPClient("updatedraftannouncement");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.announcements.updateDraft({
    updateDraftAnnouncementRequest: {
      body: {
        text:
          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
        structuredList: [],
      },
      audienceFilters: [
        {
          fieldName: "type",
          values: [
            {
              value: "Spreadsheet",
              relationType: "EQUALS",
            },
            {
              value: "Presentation",
              relationType: "EQUALS",
            },
          ],
        },
      ],
      draftId: 410741,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    body: {
      text:
        "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
      structuredList: [],
    },
    audienceFilters: [
      {
        fieldName: "type",
        values: [
          {
            value: "Spreadsheet",
            relationType: "EQUALS",
          },
          {
            value: "Presentation",
            relationType: "EQUALS",
          },
        ],
      },
    ],
    draftId: 342,
    author: {
      name: "George Clooney",
      obfuscatedId: "abc123",
      relatedDocuments: [],
      metadata: {
        type: "FULL_TIME",
        title: "Actor",
        department: "Movies",
        email: "george@example.com",
        location: "Hollywood, CA",
        phone: "6505551234",
        photoUrl: "https://example.com/george.jpg",
        startDate: new RFCDate("2000-01-23"),
        datasourceProfile: [
          {
            datasource: "github",
            handle: "<value>",
          },
        ],
        querySuggestions: {
          suggestions: [],
        },
        inviteInfo: {
          invites: [],
        },
        customFields: [],
        badges: [
          {
            key: "deployment_name_new_hire",
            displayName: "New hire",
            iconConfig: {
              color: "#343CED",
              key: "person_icon",
              iconType: "GLYPH",
              name: "user",
            },
          },
        ],
      },
    },
    updatedBy: {
      name: "George Clooney",
      obfuscatedId: "abc123",
    },
    sourceDocument: {
      metadata: {
        datasource: "datasource",
        objectType: "Feature Request",
        container: "container",
        parentId: "JIRA_EN-1337",
        mimeType: "mimeType",
        documentId: "documentId",
        createTime: new Date("2000-01-23T04:56:07.000Z"),
        updateTime: new Date("2000-01-23T04:56:07.000Z"),
        owner: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        mentionedPeople: [],
        components: [
          "Backend",
          "Networking",
        ],
        status: "[\"Done\"]",
        pins: [],
        assignedTo: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        collections: [],
        interactions: {
          reacts: [],
          shares: [],
        },
        verification: {
          state: "UNVERIFIED",
          metadata: {
            lastVerifier: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            reminders: [],
            lastReminder: {
              assignee: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              requestor: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              remindAt: 129663,
            },
            candidateVerifiers: [],
          },
        },
        customData: {
          "someCustomField": {},
        },
        contactPerson: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
      },
    },
  });
});

it.skip("Announcements Create Announcement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step createAnnouncement.test referencing operation createAnnouncement not found in document`]",
  );
});

it.skip("Announcements Get Announcement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getAnnouncement.test referencing operation getAnnouncement not found in document`]",
  );
});

it.skip("Announcements Preview Announcement", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step previewAnnouncement.test referencing operation previewAnnouncement not found in document`]",
  );
});

it.skip("Announcements Preview Announcement Draft", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step previewAnnouncementDraft.test referencing operation previewAnnouncementDraft not found in document`]",
  );
});
