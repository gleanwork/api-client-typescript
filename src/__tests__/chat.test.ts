/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Glean } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Chat Chat Default Example", async () => {
  const testHttpClient = createTestHTTPClient("chat-defaultExample");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.create({
    messages: [
      {
        fragments: [
          {
            text: "What are the company holidays this year?",
          },
        ],
      },
    ],
  });
  expect(result).toBeDefined();
});

test("Chat Chat Gpt Agent Example", async () => {
  const testHttpClient = createTestHTTPClient("chat-gptAgentExample");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.create({
    messages: [
      {
        fragments: [
          {
            text: "Who was the first person to land on the moon?",
          },
        ],
      },
    ],
    agentConfig: {
      agent: "GPT",
    },
  });
  expect(result).toBeDefined();
});

test("Chat Chat Streaming Example", async () => {
  const testHttpClient = createTestHTTPClient("chat-streamingExample");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.create({
    messages: [
      {
        citations: [
          {
            sourceDocument: {
              metadata: {
                datasource: "datasource",
                objectType: "Feature Request",
                container: "container",
                parentId: "JIRA_EN-1337",
                mimeType: "mimeType",
                documentId: "documentId",
                createTime: new Date("2000-01-23T04:56:07.000Z"),
                updateTime: new Date("2000-01-23T04:56:07.000Z"),
                author: {
                  name: "name",
                  obfuscatedId: "<id>",
                },
                components: [
                  "Backend",
                  "Networking",
                ],
                status: "[\"Done\"]",
                customData: {
                  "someCustomField": {},
                },
              },
            },
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            sourcePerson: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            referenceRanges: [
              {
                textRange: {
                  startIndex: 514434,
                  document: {},
                },
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {
                person: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                customer: {
                  id: "<id>",
                  company: {
                    name: "<value>",
                    location: "New York City",
                    industry: "Finances",
                    about:
                      "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                  },
                  poc: [],
                  notes: "CIO is interested in trying out the product.",
                },
                team: {
                  id: "<id>",
                  name: "<value>",
                  members: [],
                  customFields: [],
                  datasourceProfiles: [
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                  ],
                },
                customEntity: {
                  roles: [],
                },
                answer: {
                  id: 3,
                  docId: "ANSWERS_answer_3",
                  question: "Why is the sky blue?",
                  bodyText:
                    "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  addedRoles: [],
                  removedRoles: [],
                  combinedAnswerText: {
                    text:
                      "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                    structuredList: [],
                  },
                  likes: {
                    likedBy: [],
                    likedByUser: true,
                    numLikes: 571109,
                  },
                  updatedBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  verification: {
                    state: "VERIFIED",
                    metadata: {
                      lastVerifier: {
                        name: "George Clooney",
                        obfuscatedId: "abc123",
                      },
                      reminders: [],
                      lastReminder: {
                        assignee: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        requestor: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        remindAt: 520370,
                      },
                      candidateVerifiers: [],
                    },
                  },
                  board: {
                    name: "<value>",
                    description: "intent even frightened wherever bungalow",
                    audienceFilters: [
                      {
                        fieldName: "type",
                        values: [
                          {
                            value: "Spreadsheet",
                            relationType: "EQUALS",
                          },
                          {
                            value: "Presentation",
                            relationType: "EQUALS",
                          },
                        ],
                      },
                    ],
                    id: 212424,
                    creator: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                  },
                  collections: [],
                },
                extractedQnA: {
                  questionResult: {
                    title: "title",
                    url: "https://example.com/foo/bar",
                    nativeAppUrl: "slack://foo/bar",
                  },
                },
                meeting: {
                  attendees: {
                    people: [],
                  },
                },
                collection: {
                  name: "<value>",
                  description: "hm brightly crank gadzooks validity amidst",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 863354,
                },
                answerBoard: {
                  name: "<value>",
                  description:
                    "masquerade indeed bah whose youthfully giggle lest why mystify yippee",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 448001,
                },
                code: {
                  repoName: "scio",
                  fileName: "README.md",
                },
                shortcut: {
                  inputAlias: "<value>",
                  createdBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  destinationDocument: {},
                },
                querySuggestions: {
                  suggestions: [],
                },
                relatedDocuments: [],
                relatedQuestion: {
                  ranges: [],
                },
              },
              {},
              {},
            ],
            querySuggestion: {
              query: "app:github type:pull author:mortimer",
              label: "Mortimer's PRs",
              datasource: "github",
            },
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Beaulah.Gottlieb56",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Immanuel.Hand66",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Josue_Greenfelder",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Mikayla_Mann-Kulas9",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Serena_Kemmer",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
    ],
    timeoutMillis: 30000,
  });
  expect(result).toBeDefined();
});

test("Chat Chat Update Response", async () => {
  const testHttpClient = createTestHTTPClient("chat-updateResponse");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.create({
    messages: [
      {
        citations: [
          {
            sourceDocument: {
              metadata: {
                datasource: "datasource",
                objectType: "Feature Request",
                container: "container",
                parentId: "JIRA_EN-1337",
                mimeType: "mimeType",
                documentId: "documentId",
                createTime: new Date("2000-01-23T04:56:07.000Z"),
                updateTime: new Date("2000-01-23T04:56:07.000Z"),
                author: {
                  name: "name",
                  obfuscatedId: "<id>",
                },
                components: [
                  "Backend",
                  "Networking",
                ],
                status: "[\"Done\"]",
                customData: {
                  "someCustomField": {},
                },
              },
            },
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            sourcePerson: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            referenceRanges: [
              {
                textRange: {
                  startIndex: 513744,
                  document: {},
                },
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {
                person: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                customer: {
                  id: "<id>",
                  company: {
                    name: "<value>",
                    location: "New York City",
                    industry: "Finances",
                    about:
                      "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                  },
                  poc: [],
                  notes: "CIO is interested in trying out the product.",
                },
                team: {
                  id: "<id>",
                  name: "<value>",
                  members: [],
                  customFields: [],
                  datasourceProfiles: [
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                  ],
                },
                customEntity: {
                  roles: [],
                },
                answer: {
                  id: 3,
                  docId: "ANSWERS_answer_3",
                  question: "Why is the sky blue?",
                  bodyText:
                    "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  addedRoles: [],
                  removedRoles: [],
                  combinedAnswerText: {
                    text:
                      "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                    structuredList: [],
                  },
                  likes: {
                    likedBy: [],
                    likedByUser: true,
                    numLikes: 250211,
                  },
                  updatedBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  verification: {
                    state: "UNVERIFIED",
                    metadata: {
                      lastVerifier: {
                        name: "George Clooney",
                        obfuscatedId: "abc123",
                      },
                      reminders: [],
                      lastReminder: {
                        assignee: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        requestor: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        remindAt: 651424,
                      },
                      candidateVerifiers: [],
                    },
                  },
                  board: {
                    name: "<value>",
                    description:
                      "potentially oof institute drowse toward into near meh dock um",
                    audienceFilters: [
                      {
                        fieldName: "type",
                        values: [
                          {
                            value: "Spreadsheet",
                            relationType: "EQUALS",
                          },
                          {
                            value: "Presentation",
                            relationType: "EQUALS",
                          },
                        ],
                      },
                    ],
                    id: 800935,
                    creator: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                  },
                  collections: [],
                },
                extractedQnA: {
                  questionResult: {
                    title: "title",
                    url: "https://example.com/foo/bar",
                    nativeAppUrl: "slack://foo/bar",
                  },
                },
                meeting: {
                  attendees: {
                    people: [],
                  },
                },
                collection: {
                  name: "<value>",
                  description:
                    "pleased unto by past rigidly filthy gloomy confirm upbeat likewise",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 985541,
                },
                answerBoard: {
                  name: "<value>",
                  description:
                    "object amidst about spectate indeed fiercely fraudster",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 469995,
                },
                code: {
                  repoName: "scio",
                  fileName: "README.md",
                },
                shortcut: {
                  inputAlias: "<value>",
                  createdBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  destinationDocument: {},
                },
                querySuggestions: {
                  suggestions: [],
                },
                relatedDocuments: [],
                relatedQuestion: {
                  ranges: [],
                },
              },
            ],
            querySuggestion: {
              query: "app:github type:pull author:mortimer",
              label: "Mortimer's PRs",
              datasource: "github",
            },
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Mikayla_Kemmer45",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Larry_Gutkowski69",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Hester87",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Frederic.Botsford",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Cristal.Ullrich15",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Pat.Schiller",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
    ],
    timeoutMillis: 30000,
  });
  expect(result).toBeDefined();
});

test("Chat Chat Citation Response", async () => {
  const testHttpClient = createTestHTTPClient("chat-citationResponse");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.create({
    messages: [
      {
        citations: [
          {
            sourceDocument: {
              metadata: {
                datasource: "datasource",
                objectType: "Feature Request",
                container: "container",
                parentId: "JIRA_EN-1337",
                mimeType: "mimeType",
                documentId: "documentId",
                createTime: new Date("2000-01-23T04:56:07.000Z"),
                updateTime: new Date("2000-01-23T04:56:07.000Z"),
                author: {
                  name: "name",
                  obfuscatedId: "<id>",
                },
                components: [
                  "Backend",
                  "Networking",
                ],
                status: "[\"Done\"]",
                customData: {
                  "someCustomField": {},
                },
              },
            },
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            sourcePerson: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            referenceRanges: [
              {
                textRange: {
                  startIndex: 373700,
                  document: {},
                },
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {
                person: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                customer: {
                  id: "<id>",
                  company: {
                    name: "<value>",
                    location: "New York City",
                    industry: "Finances",
                    about:
                      "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                  },
                  poc: [],
                  notes: "CIO is interested in trying out the product.",
                },
                team: {
                  id: "<id>",
                  name: "<value>",
                  members: [],
                  customFields: [],
                  datasourceProfiles: [
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                  ],
                },
                customEntity: {
                  roles: [],
                },
                answer: {
                  id: 3,
                  docId: "ANSWERS_answer_3",
                  question: "Why is the sky blue?",
                  bodyText:
                    "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  addedRoles: [],
                  removedRoles: [],
                  combinedAnswerText: {
                    text:
                      "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                    structuredList: [],
                  },
                  likes: {
                    likedBy: [],
                    likedByUser: false,
                    numLikes: 346353,
                  },
                  updatedBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  verification: {
                    state: "VERIFIED",
                    metadata: {
                      lastVerifier: {
                        name: "George Clooney",
                        obfuscatedId: "abc123",
                      },
                      reminders: [],
                      lastReminder: {
                        assignee: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        requestor: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        remindAt: 912896,
                      },
                      candidateVerifiers: [],
                    },
                  },
                  board: {
                    name: "<value>",
                    description: "on brr forearm hmph within",
                    audienceFilters: [
                      {
                        fieldName: "type",
                        values: [
                          {
                            value: "Spreadsheet",
                            relationType: "EQUALS",
                          },
                          {
                            value: "Presentation",
                            relationType: "EQUALS",
                          },
                        ],
                      },
                    ],
                    id: 640403,
                    creator: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                  },
                  collections: [],
                },
                extractedQnA: {
                  questionResult: {
                    title: "title",
                    url: "https://example.com/foo/bar",
                    nativeAppUrl: "slack://foo/bar",
                  },
                },
                meeting: {
                  attendees: {
                    people: [],
                  },
                },
                collection: {
                  name: "<value>",
                  description: "overcharge carelessly indeed failing eek",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 797454,
                },
                answerBoard: {
                  name: "<value>",
                  description:
                    "whoa acceptable astonishing inasmuch sediment finally bend nor evil urgently",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 364410,
                },
                code: {
                  repoName: "scio",
                  fileName: "README.md",
                },
                shortcut: {
                  inputAlias: "<value>",
                  createdBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  destinationDocument: {},
                },
                querySuggestions: {
                  suggestions: [],
                },
                relatedDocuments: [],
                relatedQuestion: {
                  ranges: [],
                },
              },
              {},
              {},
            ],
            querySuggestion: {
              query: "app:github type:pull author:mortimer",
              label: "Mortimer's PRs",
              datasource: "github",
            },
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Ettie.Beier",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Delmer86",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
    ],
    timeoutMillis: 30000,
  });
  expect(result).toBeDefined();
});

test("Chat Deleteallchats", async () => {
  const testHttpClient = createTestHTTPClient("deleteallchats");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  await glean.client.chat.deleteAll();
});

test("Chat Deletechats", async () => {
  const testHttpClient = createTestHTTPClient("deletechats");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  await glean.client.chat.delete({
    ids: [
      "<value>",
      "<value>",
    ],
  });
});

test("Chat Getchat", async () => {
  const testHttpClient = createTestHTTPClient("getchat");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.retrieve({
    id: "<id>",
  });
  expect(result).toBeDefined();
});

test("Chat Listchats", async () => {
  const testHttpClient = createTestHTTPClient("listchats");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.list();
  expect(result).toBeDefined();
});

test("Chat Getchatapplication", async () => {
  const testHttpClient = createTestHTTPClient("getchatapplication");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.retrieveApplication({
    id: "<id>",
  });
  expect(result).toBeDefined();
});

test("Chat Uploadchatfiles", async () => {
  const testHttpClient = createTestHTTPClient("uploadchatfiles");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.uploadFiles({
    files: [],
  });
  expect(result).toBeDefined();
});

test("Chat Getchatfiles", async () => {
  const testHttpClient = createTestHTTPClient("getchatfiles");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.retrieveFiles({
    fileIds: [],
  });
  expect(result).toBeDefined();
});

test("Chat Deletechatfiles", async () => {
  const testHttpClient = createTestHTTPClient("deletechatfiles");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  await glean.client.chat.deleteFiles({
    fileIds: [
      "<value>",
    ],
  });
});

test("Chat Chat Stream Default Example", async () => {
  const testHttpClient = createTestHTTPClient("chatStream-defaultExample");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.createStream({
    messages: [
      {
        fragments: [
          {
            text: "What are the company holidays this year?",
          },
        ],
      },
    ],
  });
  expect(result).toBeDefined();
});

test("Chat Chat Stream Gpt Agent Example", async () => {
  const testHttpClient = createTestHTTPClient("chatStream-gptAgentExample");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.createStream({
    messages: [
      {
        fragments: [
          {
            text: "Who was the first person to land on the moon?",
          },
        ],
      },
    ],
    agentConfig: {
      agent: "GPT",
    },
  });
  expect(result).toBeDefined();
});

test("Chat Chat Stream Streaming Example", async () => {
  const testHttpClient = createTestHTTPClient("chatStream-streamingExample");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.createStream({
    messages: [],
    timeoutMillis: 30000,
  });
  expect(result).toBeDefined();
});

test("Chat Chat Stream Update Response", async () => {
  const testHttpClient = createTestHTTPClient("chatStream-updateResponse");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.createStream({
    messages: [
      {
        citations: [
          {
            sourceDocument: {
              metadata: {
                datasource: "datasource",
                objectType: "Feature Request",
                container: "container",
                parentId: "JIRA_EN-1337",
                mimeType: "mimeType",
                documentId: "documentId",
                createTime: new Date("2000-01-23T04:56:07.000Z"),
                updateTime: new Date("2000-01-23T04:56:07.000Z"),
                author: {
                  name: "name",
                  obfuscatedId: "<id>",
                },
                components: [
                  "Backend",
                  "Networking",
                ],
                status: "[\"Done\"]",
                customData: {
                  "someCustomField": {},
                },
              },
            },
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            sourcePerson: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            referenceRanges: [
              {
                textRange: {
                  startIndex: 485333,
                  document: {},
                },
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {
                person: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                customer: {
                  id: "<id>",
                  company: {
                    name: "<value>",
                    location: "New York City",
                    industry: "Finances",
                    about:
                      "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                  },
                  poc: [],
                  notes: "CIO is interested in trying out the product.",
                },
                team: {
                  id: "<id>",
                  name: "<value>",
                  members: [],
                  customFields: [],
                  datasourceProfiles: [
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                  ],
                },
                customEntity: {
                  roles: [],
                },
                answer: {
                  id: 3,
                  docId: "ANSWERS_answer_3",
                  question: "Why is the sky blue?",
                  bodyText:
                    "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  addedRoles: [],
                  removedRoles: [],
                  combinedAnswerText: {
                    text:
                      "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                    structuredList: [],
                  },
                  likes: {
                    likedBy: [],
                    likedByUser: false,
                    numLikes: 490380,
                  },
                  updatedBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  verification: {
                    state: "VERIFIED",
                    metadata: {
                      lastVerifier: {
                        name: "George Clooney",
                        obfuscatedId: "abc123",
                      },
                      reminders: [],
                      lastReminder: {
                        assignee: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        requestor: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        remindAt: 997948,
                      },
                      candidateVerifiers: [],
                    },
                  },
                  board: {
                    name: "<value>",
                    description:
                      "stage atop minion which best sturdy enormously afore circumference duh",
                    audienceFilters: [
                      {
                        fieldName: "type",
                        values: [
                          {
                            value: "Spreadsheet",
                            relationType: "EQUALS",
                          },
                          {
                            value: "Presentation",
                            relationType: "EQUALS",
                          },
                        ],
                      },
                    ],
                    id: 647529,
                    creator: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                  },
                  collections: [],
                },
                extractedQnA: {
                  questionResult: {
                    title: "title",
                    url: "https://example.com/foo/bar",
                    nativeAppUrl: "slack://foo/bar",
                  },
                },
                meeting: {
                  attendees: {
                    people: [],
                  },
                },
                collection: {
                  name: "<value>",
                  description: "veg welcome boss manage freely",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 79387,
                },
                answerBoard: {
                  name: "<value>",
                  description: "after er grouchy stained plus buck",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 668238,
                },
                code: {
                  repoName: "scio",
                  fileName: "README.md",
                },
                shortcut: {
                  inputAlias: "<value>",
                  createdBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  destinationDocument: {},
                },
                querySuggestions: {
                  suggestions: [],
                },
                relatedDocuments: [],
                relatedQuestion: {
                  ranges: [],
                },
              },
            ],
            querySuggestion: {
              query: "app:github type:pull author:mortimer",
              label: "Mortimer's PRs",
              datasource: "github",
            },
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Brianne.OReilly19",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Elinor_Champlin",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Chanel.Kshlerin",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Lauren53",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Brooklyn64",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
    ],
    timeoutMillis: 30000,
  });
  expect(result).toBeDefined();
});

test("Chat Chat Stream Citation Response", async () => {
  const testHttpClient = createTestHTTPClient("chatStream-citationResponse");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiToken: process.env["GLEAN_API_TOKEN"] ?? "value",
  });

  const result = await glean.client.chat.createStream({
    messages: [
      {
        citations: [
          {
            sourceDocument: {
              metadata: {
                datasource: "datasource",
                objectType: "Feature Request",
                container: "container",
                parentId: "JIRA_EN-1337",
                mimeType: "mimeType",
                documentId: "documentId",
                createTime: new Date("2000-01-23T04:56:07.000Z"),
                updateTime: new Date("2000-01-23T04:56:07.000Z"),
                author: {
                  name: "name",
                  obfuscatedId: "<id>",
                },
                components: [
                  "Backend",
                  "Networking",
                ],
                status: "[\"Done\"]",
                customData: {
                  "someCustomField": {},
                },
              },
            },
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            sourcePerson: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            referenceRanges: [
              {
                textRange: {
                  startIndex: 436071,
                  document: {},
                },
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {
                person: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                customer: {
                  id: "<id>",
                  company: {
                    name: "<value>",
                    location: "New York City",
                    industry: "Finances",
                    about:
                      "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                  },
                  poc: [],
                  notes: "CIO is interested in trying out the product.",
                },
                team: {
                  id: "<id>",
                  name: "<value>",
                  members: [],
                  customFields: [],
                  datasourceProfiles: [
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                    {
                      datasource: "github",
                      handle: "<value>",
                    },
                  ],
                },
                customEntity: {
                  roles: [],
                },
                answer: {
                  id: 3,
                  docId: "ANSWERS_answer_3",
                  question: "Why is the sky blue?",
                  bodyText:
                    "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  addedRoles: [],
                  removedRoles: [],
                  combinedAnswerText: {
                    text:
                      "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                    structuredList: [],
                  },
                  likes: {
                    likedBy: [],
                    likedByUser: true,
                    numLikes: 181994,
                  },
                  updatedBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  verification: {
                    state: "DEPRECATED",
                    metadata: {
                      lastVerifier: {
                        name: "George Clooney",
                        obfuscatedId: "abc123",
                      },
                      reminders: [],
                      lastReminder: {
                        assignee: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        requestor: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        remindAt: 424843,
                      },
                      candidateVerifiers: [],
                    },
                  },
                  board: {
                    name: "<value>",
                    description: "extent emotional white oil buck",
                    audienceFilters: [
                      {
                        fieldName: "type",
                        values: [
                          {
                            value: "Spreadsheet",
                            relationType: "EQUALS",
                          },
                          {
                            value: "Presentation",
                            relationType: "EQUALS",
                          },
                        ],
                      },
                    ],
                    id: 392138,
                    creator: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                  },
                  collections: [],
                },
                extractedQnA: {
                  questionResult: {
                    title: "title",
                    url: "https://example.com/foo/bar",
                    nativeAppUrl: "slack://foo/bar",
                  },
                },
                meeting: {
                  attendees: {
                    people: [],
                  },
                },
                collection: {
                  name: "<value>",
                  description: "matter lest spark oof unfurl jubilantly across",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 194535,
                },
                answerBoard: {
                  name: "<value>",
                  description:
                    "communicate prudent powerful considering quietly with tromp spring brr",
                  audienceFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "Spreadsheet",
                          relationType: "EQUALS",
                        },
                        {
                          value: "Presentation",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  id: 595008,
                },
                code: {
                  repoName: "scio",
                  fileName: "README.md",
                },
                shortcut: {
                  inputAlias: "<value>",
                  createdBy: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  destinationDocument: {},
                },
                querySuggestions: {
                  suggestions: [],
                },
                relatedDocuments: [],
                relatedQuestion: {
                  ranges: [],
                },
              },
            ],
            querySuggestion: {
              query: "app:github type:pull author:mortimer",
              label: "Mortimer's PRs",
              datasource: "github",
            },
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Blaise87",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "RETRIEVAL",
                name: "<value>",
                displayName: "Alfred_Wilderman",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Dylan_Schowalter48",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
      {
        citations: [
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
          {
            sourceFile: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            referenceRanges: [
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
              {
                snippets: [
                  {
                    snippet: "snippet",
                    mimeType: "mimeType",
                  },
                ],
              },
            ],
          },
        ],
        fragments: [
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Solon.Schmitt10",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
          {
            structuredResults: [
              {},
              {},
              {},
            ],
            file: {
              id: "FILE_1234",
              url: "www.google.com",
              name: "sample.pdf",
            },
            action: {
              metadata: {
                type: "ACTION",
                name: "<value>",
                displayName: "Nannie.McDermott",
                displayDescription: "<value>",
                objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
              },
            },
          },
        ],
      },
    ],
    timeoutMillis: 30000,
  });
  expect(result).toBeDefined();
});
