/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Glean } from "../index.js";
import { RFCDate } from "../types/index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Chats Getchat", async () => {
  const testHttpClient = createTestHTTPClient("getchat");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.chat.get({
    getChatRequest: {
      id: "<id>",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    chatResult: {
      chat: {
        id: "string",
        createTime: 0,
        createdBy: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        updateTime: 0,
        name: "string",
        applicationId: "string",
        applicationName: "string",
        icon: {
          color: "#343CED",
          key: "person_icon",
          iconType: "GLYPH",
          name: "user",
        },
        messages: [
          {
            agentConfig: {
              agent: "DEFAULT",
              mode: "DEFAULT",
            },
            author: "USER",
            citations: [
              {
                trackingToken: "string",
                sourceDocument: {
                  id: "string",
                  datasource: "string",
                  connectorType: "API_CRAWL",
                  docType: "string",
                  content: {
                    fullTextList: [
                      "<value>",
                    ],
                  },
                  title: "string",
                  url: "string",
                  metadata: {
                    datasource: "datasource",
                    objectType: "Feature Request",
                    container: "container",
                    parentId: "JIRA_EN-1337",
                    mimeType: "mimeType",
                    documentId: "documentId",
                    createTime: new Date("2000-01-23T04:56:07.000Z"),
                    updateTime: new Date("2000-01-23T04:56:07.000Z"),
                    author: {
                      name: "name",
                      obfuscatedId: "<id>",
                    },
                    components: [
                      "Backend",
                      "Networking",
                    ],
                    status: "[\"Done\"]",
                    customData: {
                      "someCustomField": {},
                    },
                  },
                  sections: [
                    {
                      title: "<value>",
                      url: "https://usable-extension.biz/",
                    },
                  ],
                },
                sourceFile: {
                  id: "FILE_1234",
                  url: "www.google.com",
                  name: "sample.pdf",
                  metadata: {
                    status: "PROCESSING",
                    uploadTime: 0,
                    processedSize: 0,
                    failureReason: "PARSE_FAILED",
                    mimeType: "string",
                  },
                },
                sourcePerson: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                referenceRanges: [
                  {
                    textRange: {
                      startIndex: 90915,
                      endIndex: 535485,
                      type: "LINK",
                      url: "https://superficial-babushka.net/",
                      document: {},
                    },
                    snippets: [
                      {
                        snippet: "<value>",
                        ranges: [],
                      },
                    ],
                  },
                ],
              },
            ],
            uploadedFileIds: [
              "string",
            ],
            fragments: [
              {
                structuredResults: [
                  {
                    person: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                    customer: {
                      id: "<id>",
                      domains: [],
                      company: {
                        name: "<value>",
                        location: "New York City",
                        industry: "Finances",
                        about:
                          "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                      },
                      documentCounts: {
                        "key": 747213,
                      },
                      poc: [],
                      mergedCustomers: [],
                      startDate: new RFCDate("2025-08-31"),
                      contractAnnualRevenue: 5401.83,
                      notes: "<value>",
                    },
                    team: {
                      id: "<id>",
                      name: "<value>",
                      description: "ouch courteous following wetly",
                      businessUnit: "<value>",
                      department: "<value>",
                      photoUrl: "https://unsteady-toothpick.name/",
                      bannerUrl: "https://regular-pantyhose.net",
                      externalLink: "https://competent-puppet.name/",
                      members: [],
                      memberCount: 540632,
                      emails: [],
                      datasourceProfiles: [],
                      datasource: "<value>",
                      createdFrom: "<value>",
                      lastUpdatedAt: new Date("2025-01-24T21:14:12.285Z"),
                      status: "QUEUED_FOR_CREATION",
                      canBeDeleted: true,
                      loggingId: "<id>",
                    },
                    customEntity: {
                      id: "<id>",
                      title: "<value>",
                      datasource: "<value>",
                      objectType: "<value>",
                      roles: [],
                    },
                    answer: {
                      id: 804111,
                      docId: "<id>",
                      question: "<value>",
                      questionVariations: [],
                      bodyText: "<value>",
                      boardId: 672311,
                      audienceFilters: [],
                      addedRoles: [],
                      removedRoles: [],
                      sourceDocumentSpec: {},
                      sourceType: "DOCUMENT",
                      combinedAnswerText: {
                        text:
                          "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                        structuredList: [],
                      },
                      likes: {
                        likedBy: [],
                        likedByUser: true,
                        numLikes: 22508,
                      },
                      createTime: new Date("2025-02-22T04:58:38.461Z"),
                      updateTime: new Date("2025-02-05T19:33:07.639Z"),
                      updatedBy: {
                        name: "<value>",
                        obfuscatedId: "<id>",
                        relatedDocuments: [],
                        metadata: {
                          title: "Actor",
                          department: "Movies",
                          email: "george@example.com",
                          location: "Hollywood, CA",
                          phone: "6505551234",
                          photoUrl: "https://example.com/george.jpg",
                          startDate: new RFCDate("2000-01-23"),
                        },
                      },
                      verification: {
                        state: "UNVERIFIED",
                        metadata: {
                          lastVerifier: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          reminders: [],
                          lastReminder: {
                            assignee: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                            requestor: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                            remindAt: 129663,
                          },
                          candidateVerifiers: [],
                        },
                      },
                      board: {
                        name: "<value>",
                        description: "over aha if unless fooey unbearably",
                        audienceFilters: [],
                        id: 342305,
                        creator: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                      },
                      collections: [],
                      documentCategory: "<value>",
                    },
                    extractedQnA: {
                      heading: "<value>",
                      question: "<value>",
                      questionResult: {
                        url: "https://needy-co-producer.net",
                        relatedResults: [],
                        allClusteredResults: [],
                        mustIncludeSuggestions: {
                          suggestions: [],
                        },
                        querySuggestion: {
                          query: "app:github type:pull author:mortimer",
                          label: "Mortimer's PRs",
                          datasource: "github",
                        },
                        pins: [],
                      },
                    },
                    meeting: {
                      id: "<id>",
                      title: "<value>",
                      description:
                        "considering frequent brr crystallize tightly onto furthermore boyfriend",
                      startTime: new Date("2025-11-28T06:04:49.964Z"),
                      endTime: new Date("2024-08-11T15:51:31.976Z"),
                      attendees: {
                        people: [],
                      },
                    },
                    app: {
                      datasource: "<value>",
                      docType: "<value>",
                      mimeType: "<value>",
                      iconUrl: "https://grizzled-graffiti.info",
                    },
                    collection: {
                      name: "<value>",
                      description: "for opposite question gray little plump",
                      audienceFilters: [],
                      icon: "<value>",
                      adminLocked: true,
                      parentId: 792696,
                      allowedDatasource: "<value>",
                      id: 111743,
                      createTime: new Date("2023-11-25T02:09:48.536Z"),
                      updateTime: new Date("2025-04-19T16:55:44.204Z"),
                      itemCount: 497740,
                      childCount: 371949,
                      items: [],
                      shortcuts: [],
                      children: [],
                    },
                    answerBoard: {
                      name: "<value>",
                      description: "innocently shudder cop-out miserably",
                      audienceFilters: [],
                      id: 495186,
                      createTime: new Date("2025-10-17T14:54:40.617Z"),
                      updateTime: new Date("2024-02-26T16:32:45.831Z"),
                      itemCount: 939903,
                    },
                    code: {
                      repoName: "scio",
                      fileName: "README.md",
                    },
                    shortcut: {
                      inputAlias: "<value>",
                      description:
                        "amidst kowtow onto gust careless kindly suddenly before",
                      destinationUrl: "https://prudent-maintainer.net/",
                      createdBy: "<value>",
                      createTime: 868672,
                      updatedBy: "<value>",
                      updateTime: 861394,
                      unlisted: false,
                      urlTemplate: "<value>",
                    },
                    querySuggestions: {},
                    relatedQuestion: {
                      question: "<value>",
                      answer: "<value>",
                    },
                    disambiguation: {
                      name: "<value>",
                      id: "<id>",
                      type: "PROJECT",
                    },
                    trackingToken: "string",
                    prominence: "HERO",
                    source: "EXPERT_DETECTION",
                  },
                ],
                trackingToken: "string",
                text: "string",
                file: {
                  id: "FILE_1234",
                  url: "www.google.com",
                  name: "sample.pdf",
                  metadata: {
                    status: "PROCESSING",
                    uploadTime: 0,
                    processedSize: 0,
                    failureReason: "PARSE_FAILED",
                    mimeType: "string",
                  },
                },
                action: {
                  metadata: {
                    type: "RETRIEVAL",
                    name: "string",
                    displayName: "string",
                    toolId: "string",
                    displayDescription: "string",
                    logoUrl: "string",
                    objectName: "[\"HR ticket\",\"Email\",\"Chat message\"]",
                    knowledgeType: "NEUTRAL_KNOWLEDGE",
                    createdBy: {
                      name: "<value>",
                      obfuscatedId: "<id>",
                    },
                    lastUpdatedBy: {
                      name: "<value>",
                      obfuscatedId: "<id>",
                    },
                    createdAt: new Date("2019-08-24T14:15:22Z"),
                    lastUpdatedAt: new Date("2019-08-24T14:15:22Z"),
                    writeActionType: "REDIRECT",
                    authType: "NONE",
                    auth: {
                      isOnPrem: true,
                      usesCentralAuth: true,
                      type: "DWD",
                      grantType: "CLIENT_CREDENTIALS",
                      status: "AWAITING_AUTH",
                      clientUrl: "https://political-blight.info/",
                      scopes: [],
                      audiences: [],
                      authorizationUrl: "https://prickly-celsius.name/",
                      lastAuthorizedAt: new Date("2025-06-21T06:59:07.414Z"),
                    },
                    permissions: {},
                    usageInstructions: "string",
                    isSetupFinished: true,
                  },
                  parameters: {
                    "property1": {
                      type: "STRING",
                      displayName: "Randy_Greenfelder",
                      value: "<value>",
                      isRequired: true,
                      description: "brr detain known oof trash psst",
                      possibleValues: [],
                    },
                    "property2": {
                      type: "INTEGER",
                      displayName: "Katelin_Ledner",
                      value: "<value>",
                      isRequired: false,
                      description: "narrowcast tray likewise nautical minus",
                      possibleValues: [],
                    },
                  },
                },
              },
            ],
            ts: "string",
            messageId: "string",
            messageTrackingToken: "string",
            messageType: "UPDATE",
            hasMoreFragments: true,
          },
        ],
      },
      trackingToken: "string",
    },
  });
});
