/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Glean } from "../index.js";
import { filesToStream } from "./files.js";
import { createTestHTTPClient } from "./testclient.js";

test("Images Images", async () => {
  const testHttpClient = createTestHTTPClient("images");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.images.get({});
  expect(result).toBeDefined();
});

test("Images Uploadimage", async () => {
  const testHttpClient = createTestHTTPClient("uploadimage");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.images.upload({
    requestBody: filesToStream(".speakeasy/testfiles/example.file"),
  });
  expect(result).toBeDefined();
});
