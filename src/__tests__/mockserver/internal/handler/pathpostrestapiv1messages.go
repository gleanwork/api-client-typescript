// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package handler

import (
	"fmt"
	"log"
	"mockserver/internal/handler/assert"
	"mockserver/internal/logging"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/types"
	"mockserver/internal/sdk/utils"
	"mockserver/internal/tracking"
	"net/http"
)

func pathPostRestAPIV1Messages(dir *logging.HTTPFileDirectory, rt *tracking.RequestTracker) http.HandlerFunc {
	return func(w http.ResponseWriter, req *http.Request) {
		test := req.Header.Get("x-speakeasy-test-name")
		instanceID := req.Header.Get("x-speakeasy-test-instance-id")

		count := rt.GetRequestCount(test, instanceID)

		switch fmt.Sprintf("%s[%d]", test, count) {
		case "messages[0]":
			dir.HandlerFunc("messages", testMessagesMessages0)(w, req)
		default:
			http.Error(w, fmt.Sprintf("Unknown test: %s[%d]", test, count), http.StatusBadRequest)
		}
	}
}

func testMessagesMessages0(w http.ResponseWriter, req *http.Request) {
	if err := assert.SecurityAuthorizationHeader(req, false, "Bearer"); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusUnauthorized)
		return
	}
	if err := assert.ContentType(req, "application/json", true); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	if err := assert.AcceptHeader(req, []string{"application/json"}); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	if err := assert.HeaderExists(req, "User-Agent"); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	respBody := &components.MessagesResponse{
		HasMore: false,
		SearchResponse: &components.SearchResponse{
			TrackingToken: types.String("trackingToken"),
			Results: []components.SearchResult{
				components.SearchResult{
					Title:        types.String("title"),
					URL:          "https://example.com/foo/bar",
					NativeAppURL: types.String("slack://foo/bar"),
					Snippets: []components.SearchResultSnippet{
						components.SearchResultSnippet{
							Snippet:  "snippet",
							MimeType: types.String("mimeType"),
						},
					},
				},
			},
			StructuredResults: []components.StructuredResult{
				components.StructuredResult{
					Document: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								RelatedDocuments: []components.RelatedDocuments{
									components.RelatedDocuments{
										QuerySuggestion: &components.QuerySuggestion{
											Query: "app:github type:pull author:mortimer",
											SearchProviderInfo: &components.SearchProviderInfo{
												Name:                  types.String("Google"),
												SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
											},
											Label:      types.String("Mortimer's PRs"),
											Datasource: types.String("github"),
											RequestOptions: &components.SearchRequestOptions{
												DatasourceFilter: types.String("JIRA"),
												DatasourcesFilter: []string{
													"JIRA",
												},
												QueryOverridesFacetFilters: types.Bool(true),
												FacetFilters: []components.FacetFilter{
													components.FacetFilter{
														FieldName: types.String("type"),
														Values: []components.FacetFilterValue{
															components.FacetFilterValue{
																Value:        types.String("Spreadsheet"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
															components.FacetFilterValue{
																Value:        types.String("Presentation"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
														},
													},
												},
												FacetFilterSets: []components.FacetFilterSet{
													components.FacetFilterSet{
														Filters: []components.FacetFilter{
															components.FacetFilter{
																FieldName: types.String("type"),
																Values: []components.FacetFilterValue{
																	components.FacetFilterValue{
																		Value:        types.String("Spreadsheet"),
																		RelationType: components.RelationTypeEquals.ToPointer(),
																	},
																	components.FacetFilterValue{
																		Value:        types.String("Presentation"),
																		RelationType: components.RelationTypeEquals.ToPointer(),
																	},
																},
															},
														},
													},
												},
												FacetBucketSize: 535485,
												AuthTokens: []components.AuthToken{
													components.AuthToken{
														AccessToken: "123abc",
														Datasource:  "gmail",
														Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
														TokenType:   types.String("Bearer"),
														AuthUser:    types.String("1"),
													},
												},
											},
											Ranges: []components.TextRange{
												components.TextRange{
													StartIndex: 153092,
												},
												components.TextRange{
													StartIndex: 824606,
												},
												components.TextRange{
													StartIndex: 56142,
												},
											},
											InputDetails: &components.SearchRequestInputDetails{
												HasCopyPaste: types.Bool(true),
											},
										},
									},
								},
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{
										Suggestions: []components.QuerySuggestion{
											components.QuerySuggestion{
												Query:      "app:github type:pull author:mortimer",
												Label:      types.String("Mortimer's PRs"),
												Datasource: types.String("github"),
											},
										},
									},
									InviteInfo: &components.InviteInfo{
										Invites: []components.ChannelInviteInfo{
											components.ChannelInviteInfo{},
											components.ChannelInviteInfo{},
											components.ChannelInviteInfo{},
										},
									},
									CustomFields: []components.CustomFieldData{
										components.CustomFieldData{
											Label:       "<value>",
											Values:      []components.CustomFieldValue{},
											Displayable: types.Bool(true),
										},
									},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							MentionedPeople: []components.Person{
								components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							Pins: []components.PinDocument{
								components.PinDocument{
									AudienceFilters: []components.FacetFilter{
										components.FacetFilter{
											FieldName: types.String("type"),
											Values: []components.FacetFilterValue{
												components.FacetFilterValue{
													Value:        types.String("Spreadsheet"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
												components.FacetFilterValue{
													Value:        types.String("Presentation"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
											},
										},
									},
									DocumentID: "<id>",
									Attribution: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
								components.PinDocument{
									AudienceFilters: []components.FacetFilter{
										components.FacetFilter{
											FieldName: types.String("type"),
											Values: []components.FacetFilterValue{
												components.FacetFilterValue{
													Value:        types.String("Spreadsheet"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
												components.FacetFilterValue{
													Value:        types.String("Presentation"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
											},
										},
									},
									DocumentID: "<id>",
									Attribution: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Collections: []components.Collection{
								components.Collection{
									Name:        "<value>",
									Description: "informal stingy euphonium about regular aw culminate",
									AddedRoles: []components.UserRoleSpecification{
										components.UserRoleSpecification{
											Person: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Role: components.UserRoleEditor,
										},
									},
									RemovedRoles: []components.UserRoleSpecification{
										components.UserRoleSpecification{
											Person: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Role: components.UserRoleOwner,
										},
										components.UserRoleSpecification{
											Person: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Role: components.UserRoleVerifier,
										},
										components.UserRoleSpecification{
											Person: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Role: components.UserRoleOwner,
										},
									},
									AudienceFilters: []components.FacetFilter{
										components.FacetFilter{
											FieldName: types.String("type"),
											Values: []components.FacetFilterValue{
												components.FacetFilterValue{
													Value:        types.String("Spreadsheet"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
												components.FacetFilterValue{
													Value:        types.String("Presentation"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
											},
										},
									},
									ID: 688273,
									Creator: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Items: []components.CollectionItem{
										components.CollectionItem{
											CollectionID: 26529,
											CreatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Shortcut: &components.Shortcut{
												InputAlias: "<value>",
												CreatedBy: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
												UpdatedBy: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
												Roles: []components.UserRoleSpecification{
													components.UserRoleSpecification{
														Person: &components.Person{
															Name:         "George Clooney",
															ObfuscatedID: "abc123",
															Metadata: &components.PersonMetadata{
																Type:       components.PersonMetadataTypeFullTime.ToPointer(),
																Title:      types.String("Actor"),
																Department: types.String("Movies"),
																Email:      types.String("george@example.com"),
																Location:   types.String("Hollywood, CA"),
																Phone:      types.String("6505551234"),
																PhotoURL:   types.String("https://example.com/george.jpg"),
																StartDate:  types.MustNewDateFromString("2000-01-23"),
																DatasourceProfile: []components.DatasourceProfile{
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																},
																QuerySuggestions: &components.QuerySuggestionList{},
																InviteInfo:       &components.InviteInfo{},
																Badges: []components.Badge{
																	components.Badge{
																		Key:         types.String("deployment_name_new_hire"),
																		DisplayName: types.String("New hire"),
																		IconConfig: &components.IconConfig{
																			Color:    types.String("#343CED"),
																			Key:      types.String("person_icon"),
																			IconType: components.IconTypeGlyph.ToPointer(),
																			Name:     types.String("user"),
																		},
																	},
																},
															},
														},
														Role: components.UserRoleViewer,
													},
												},
											},
											ItemType: components.CollectionItemItemTypeURL,
										},
										components.CollectionItem{
											CollectionID: 594987,
											CreatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Shortcut: &components.Shortcut{
												InputAlias: "<value>",
												CreatedBy: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
												UpdatedBy: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
											},
											ItemType: components.CollectionItemItemTypeURL,
										},
										components.CollectionItem{
											CollectionID: 56091,
											CreatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Shortcut: &components.Shortcut{
												InputAlias: "<value>",
												CreatedBy: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
												UpdatedBy: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
											},
											ItemType: components.CollectionItemItemTypeText,
										},
									},
								},
								components.Collection{
									Name:        "<value>",
									Description: "what gee yippee merrily provided serpentine bin favorable penalise",
									AudienceFilters: []components.FacetFilter{
										components.FacetFilter{
											FieldName: types.String("type"),
											Values: []components.FacetFilterValue{
												components.FacetFilterValue{
													Value:        types.String("Spreadsheet"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
												components.FacetFilterValue{
													Value:        types.String("Presentation"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
											},
										},
									},
									ID: 336445,
									Creator: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
								components.Collection{
									Name:        "<value>",
									Description: "eek step-mother once reflecting youthful adumbrate blah quintessential amidst",
									AudienceFilters: []components.FacetFilter{
										components.FacetFilter{
											FieldName: types.String("type"),
											Values: []components.FacetFilterValue{
												components.FacetFilterValue{
													Value:        types.String("Spreadsheet"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
												components.FacetFilterValue{
													Value:        types.String("Presentation"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
											},
										},
									},
									ID: 190100,
									Creator: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{
								Reacts: []components.Reaction{
									components.Reaction{
										Reactors: []components.Person{
											components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
											},
										},
									},
									components.Reaction{},
									components.Reaction{},
								},
								Shares: []components.Share{
									components.Share{
										NumDaysAgo: 297779,
										Sharer: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
									},
								},
							},
							Verification: &components.Verification{
								State: components.StateVerified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Reminders: []components.Reminder{
										components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 221056,
										},
										components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 46441,
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 86409,
									},
									CandidateVerifiers: []components.Person{
										components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
										},
									},
								},
							},
							Shortcuts: []components.Shortcut{
								components.Shortcut{
									InputAlias: "<value>",
									CreatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
								components.Shortcut{
									InputAlias: "<value>",
									CreatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
								components.Shortcut{
									InputAlias: "<value>",
									CreatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
					Person: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					Customer: &components.Customer{
						ID: "<id>",
						Company: components.Company{
							Name:     "<value>",
							Location: types.String("New York City"),
							Industry: types.String("Finances"),
							About:    types.String("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City"),
						},
						Poc: []components.Person{
							components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
							},
						},
						Notes: types.String("CIO is interested in trying out the product."),
					},
					Team: &components.Team{
						ID:   "<id>",
						Name: "<value>",
						Members: []components.PersonToTeamRelationship{
							components.PersonToTeamRelationship{
								Person: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Relationship: components.PersonToTeamRelationshipRelationshipMember.ToPointer(),
							},
							components.PersonToTeamRelationship{
								Person: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Relationship: components.PersonToTeamRelationshipRelationshipMember.ToPointer(),
							},
						},
						DatasourceProfiles: []components.DatasourceProfile{
							components.DatasourceProfile{
								Datasource: "github",
								Handle:     "<value>",
							},
							components.DatasourceProfile{
								Datasource: "github",
								Handle:     "<value>",
							},
						},
						Status:       components.TeamStatusProcessed.ToPointer(),
						CanBeDeleted: types.Bool(true),
					},
					CustomEntity: &components.CustomEntity{},
					Answer: &components.Answer{
						ID:       3,
						DocID:    types.String("ANSWERS_answer_3"),
						Question: types.String("Why is the sky blue?"),
						BodyText: types.String("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light."),
						AudienceFilters: []components.FacetFilter{
							components.FacetFilter{
								FieldName: types.String("type"),
								Values: []components.FacetFilterValue{
									components.FacetFilterValue{
										Value:        types.String("Spreadsheet"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
									components.FacetFilterValue{
										Value:        types.String("Presentation"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
								},
							},
						},
						CombinedAnswerText: &components.StructuredText{
							Text: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
							StructuredList: []components.StructuredTextItem{
								components.StructuredTextItem{
									Link: types.String("https://en.wikipedia.org/wiki/Diffuse_sky_radiation"),
									Document: &components.Document{
										Metadata: &components.DocumentMetadata{
											Datasource: types.String("datasource"),
											ObjectType: types.String("Feature Request"),
											Container:  types.String("container"),
											ParentID:   types.String("JIRA_EN-1337"),
											MimeType:   types.String("mimeType"),
											DocumentID: types.String("documentId"),
											CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
											UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
											Author: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Owner: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Components: []string{
												"Backend",
												"Networking",
											},
											Status: types.String("[\"Done\"]"),
											AssignedTo: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											UpdatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Interactions: &components.DocumentInteractions{},
											Verification: &components.Verification{
												State: components.StateUnverified,
												Metadata: &components.VerificationMetadata{
													LastVerifier: &components.Person{
														Name:         "George Clooney",
														ObfuscatedID: "abc123",
														Metadata: &components.PersonMetadata{
															Type:       components.PersonMetadataTypeFullTime.ToPointer(),
															Title:      types.String("Actor"),
															Department: types.String("Movies"),
															Email:      types.String("george@example.com"),
															Location:   types.String("Hollywood, CA"),
															Phone:      types.String("6505551234"),
															PhotoURL:   types.String("https://example.com/george.jpg"),
															StartDate:  types.MustNewDateFromString("2000-01-23"),
															DatasourceProfile: []components.DatasourceProfile{
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
															},
															QuerySuggestions: &components.QuerySuggestionList{},
															InviteInfo:       &components.InviteInfo{},
															Badges: []components.Badge{
																components.Badge{
																	Key:         types.String("deployment_name_new_hire"),
																	DisplayName: types.String("New hire"),
																	IconConfig: &components.IconConfig{
																		Color:    types.String("#343CED"),
																		Key:      types.String("person_icon"),
																		IconType: components.IconTypeGlyph.ToPointer(),
																		Name:     types.String("user"),
																	},
																},
															},
														},
													},
													LastReminder: &components.Reminder{
														Assignee: components.Person{
															Name:         "George Clooney",
															ObfuscatedID: "abc123",
															Metadata: &components.PersonMetadata{
																Type:       components.PersonMetadataTypeFullTime.ToPointer(),
																Title:      types.String("Actor"),
																Department: types.String("Movies"),
																Email:      types.String("george@example.com"),
																Location:   types.String("Hollywood, CA"),
																Phone:      types.String("6505551234"),
																PhotoURL:   types.String("https://example.com/george.jpg"),
																StartDate:  types.MustNewDateFromString("2000-01-23"),
																DatasourceProfile: []components.DatasourceProfile{
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																},
																QuerySuggestions: &components.QuerySuggestionList{},
																InviteInfo:       &components.InviteInfo{},
																Badges: []components.Badge{
																	components.Badge{
																		Key:         types.String("deployment_name_new_hire"),
																		DisplayName: types.String("New hire"),
																		IconConfig: &components.IconConfig{
																			Color:    types.String("#343CED"),
																			Key:      types.String("person_icon"),
																			IconType: components.IconTypeGlyph.ToPointer(),
																			Name:     types.String("user"),
																		},
																	},
																},
															},
														},
														Requestor: &components.Person{
															Name:         "George Clooney",
															ObfuscatedID: "abc123",
															Metadata: &components.PersonMetadata{
																Type:       components.PersonMetadataTypeFullTime.ToPointer(),
																Title:      types.String("Actor"),
																Department: types.String("Movies"),
																Email:      types.String("george@example.com"),
																Location:   types.String("Hollywood, CA"),
																Phone:      types.String("6505551234"),
																PhotoURL:   types.String("https://example.com/george.jpg"),
																StartDate:  types.MustNewDateFromString("2000-01-23"),
																DatasourceProfile: []components.DatasourceProfile{
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																},
																QuerySuggestions: &components.QuerySuggestionList{},
																InviteInfo:       &components.InviteInfo{},
																Badges: []components.Badge{
																	components.Badge{
																		Key:         types.String("deployment_name_new_hire"),
																		DisplayName: types.String("New hire"),
																		IconConfig: &components.IconConfig{
																			Color:    types.String("#343CED"),
																			Key:      types.String("person_icon"),
																			IconType: components.IconTypeGlyph.ToPointer(),
																			Name:     types.String("user"),
																		},
																	},
																},
															},
														},
														RemindAt: 184667,
													},
												},
											},
											CustomData: map[string]components.CustomDataValue{
												"someCustomField": components.CustomDataValue{},
											},
											ContactPerson: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
										},
									},
									Text: types.String("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue."),
								},
								components.StructuredTextItem{
									Link: types.String("https://en.wikipedia.org/wiki/Diffuse_sky_radiation"),
									Document: &components.Document{
										Metadata: &components.DocumentMetadata{
											Datasource: types.String("datasource"),
											ObjectType: types.String("Feature Request"),
											Container:  types.String("container"),
											ParentID:   types.String("JIRA_EN-1337"),
											MimeType:   types.String("mimeType"),
											DocumentID: types.String("documentId"),
											CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
											UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
											Author: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Owner: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Components: []string{
												"Backend",
												"Networking",
											},
											Status: types.String("[\"Done\"]"),
											AssignedTo: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											UpdatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Interactions: &components.DocumentInteractions{},
											Verification: &components.Verification{
												State: components.StateVerified,
												Metadata: &components.VerificationMetadata{
													LastVerifier: &components.Person{
														Name:         "George Clooney",
														ObfuscatedID: "abc123",
														Metadata: &components.PersonMetadata{
															Type:       components.PersonMetadataTypeFullTime.ToPointer(),
															Title:      types.String("Actor"),
															Department: types.String("Movies"),
															Email:      types.String("george@example.com"),
															Location:   types.String("Hollywood, CA"),
															Phone:      types.String("6505551234"),
															PhotoURL:   types.String("https://example.com/george.jpg"),
															StartDate:  types.MustNewDateFromString("2000-01-23"),
															DatasourceProfile: []components.DatasourceProfile{
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
															},
															QuerySuggestions: &components.QuerySuggestionList{},
															InviteInfo:       &components.InviteInfo{},
															Badges: []components.Badge{
																components.Badge{
																	Key:         types.String("deployment_name_new_hire"),
																	DisplayName: types.String("New hire"),
																	IconConfig: &components.IconConfig{
																		Color:    types.String("#343CED"),
																		Key:      types.String("person_icon"),
																		IconType: components.IconTypeGlyph.ToPointer(),
																		Name:     types.String("user"),
																	},
																},
															},
														},
													},
													LastReminder: &components.Reminder{
														Assignee: components.Person{
															Name:         "George Clooney",
															ObfuscatedID: "abc123",
															Metadata: &components.PersonMetadata{
																Type:       components.PersonMetadataTypeFullTime.ToPointer(),
																Title:      types.String("Actor"),
																Department: types.String("Movies"),
																Email:      types.String("george@example.com"),
																Location:   types.String("Hollywood, CA"),
																Phone:      types.String("6505551234"),
																PhotoURL:   types.String("https://example.com/george.jpg"),
																StartDate:  types.MustNewDateFromString("2000-01-23"),
																DatasourceProfile: []components.DatasourceProfile{
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																},
																QuerySuggestions: &components.QuerySuggestionList{},
																InviteInfo:       &components.InviteInfo{},
																Badges: []components.Badge{
																	components.Badge{
																		Key:         types.String("deployment_name_new_hire"),
																		DisplayName: types.String("New hire"),
																		IconConfig: &components.IconConfig{
																			Color:    types.String("#343CED"),
																			Key:      types.String("person_icon"),
																			IconType: components.IconTypeGlyph.ToPointer(),
																			Name:     types.String("user"),
																		},
																	},
																},
															},
														},
														Requestor: &components.Person{
															Name:         "George Clooney",
															ObfuscatedID: "abc123",
															Metadata: &components.PersonMetadata{
																Type:       components.PersonMetadataTypeFullTime.ToPointer(),
																Title:      types.String("Actor"),
																Department: types.String("Movies"),
																Email:      types.String("george@example.com"),
																Location:   types.String("Hollywood, CA"),
																Phone:      types.String("6505551234"),
																PhotoURL:   types.String("https://example.com/george.jpg"),
																StartDate:  types.MustNewDateFromString("2000-01-23"),
																DatasourceProfile: []components.DatasourceProfile{
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																	components.DatasourceProfile{
																		Datasource: "github",
																		Handle:     "<value>",
																	},
																},
																QuerySuggestions: &components.QuerySuggestionList{},
																InviteInfo:       &components.InviteInfo{},
																Badges: []components.Badge{
																	components.Badge{
																		Key:         types.String("deployment_name_new_hire"),
																		DisplayName: types.String("New hire"),
																		IconConfig: &components.IconConfig{
																			Color:    types.String("#343CED"),
																			Key:      types.String("person_icon"),
																			IconType: components.IconTypeGlyph.ToPointer(),
																			Name:     types.String("user"),
																		},
																	},
																},
															},
														},
														RemindAt: 868672,
													},
												},
											},
											CustomData: map[string]components.CustomDataValue{
												"someCustomField": components.CustomDataValue{},
											},
											ContactPerson: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
										},
									},
									Text: types.String("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue."),
								},
							},
						},
						Likes: &components.AnswerLikes{
							LikedBy: []components.AnswerLike{
								components.AnswerLike{
									User: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
								components.AnswerLike{
									User: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							LikedByUser: true,
							NumLikes:    970360,
						},
						Author: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Verification: &components.Verification{
							State: components.StateUnverified,
							Metadata: &components.VerificationMetadata{
								LastVerifier: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Document: &components.Document{
									Metadata: &components.DocumentMetadata{
										Datasource: types.String("datasource"),
										ObjectType: types.String("Feature Request"),
										Container:  types.String("container"),
										ParentID:   types.String("JIRA_EN-1337"),
										MimeType:   types.String("mimeType"),
										DocumentID: types.String("documentId"),
										CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
										UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
										Author: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Owner: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Components: []string{
											"Backend",
											"Networking",
										},
										Status: types.String("[\"Done\"]"),
										AssignedTo: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										UpdatedBy: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Interactions: &components.DocumentInteractions{},
										CustomData: map[string]components.CustomDataValue{
											"someCustomField": components.CustomDataValue{},
										},
										ContactPerson: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
									},
								},
								LastReminder: &components.Reminder{
									Assignee: components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Requestor: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									RemindAt: 521404,
								},
							},
						},
						Board: &components.AnswerBoard{
							Name:        "<value>",
							Description: "gah brr detain known oof trash psst magnificent brr",
							AudienceFilters: []components.FacetFilter{
								components.FacetFilter{
									FieldName: types.String("type"),
									Values: []components.FacetFilterValue{
										components.FacetFilterValue{
											Value:        types.String("Spreadsheet"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
										components.FacetFilterValue{
											Value:        types.String("Presentation"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
									},
								},
							},
							ID: 521617,
							Creator: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
						SourceDocument: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateVerified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 350712,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
					},
					ExtractedQnA: &components.ExtractedQnA{
						QuestionResult: &components.SearchResult{
							Document: &components.Document{
								Metadata: &components.DocumentMetadata{
									Datasource: types.String("datasource"),
									ObjectType: types.String("Feature Request"),
									Container:  types.String("container"),
									ParentID:   types.String("JIRA_EN-1337"),
									MimeType:   types.String("mimeType"),
									DocumentID: types.String("documentId"),
									CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									Author: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Owner: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Components: []string{
										"Backend",
										"Networking",
									},
									Status: types.String("[\"Done\"]"),
									AssignedTo: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Interactions: &components.DocumentInteractions{},
									Verification: &components.Verification{
										State: components.StateVerified,
										Metadata: &components.VerificationMetadata{
											LastVerifier: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											LastReminder: &components.Reminder{
												Assignee: components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
												Requestor: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
												RemindAt: 727786,
											},
										},
									},
									CustomData: map[string]components.CustomDataValue{
										"someCustomField": components.CustomDataValue{},
									},
									ContactPerson: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							Title:        types.String("title"),
							URL:          "https://example.com/foo/bar",
							NativeAppURL: types.String("slack://foo/bar"),
							RelatedResults: []components.RelatedDocuments{
								components.RelatedDocuments{
									QuerySuggestion: &components.QuerySuggestion{
										Query: "app:github type:pull author:mortimer",
										SearchProviderInfo: &components.SearchProviderInfo{
											Name:                  types.String("Google"),
											SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
										},
										Label:      types.String("Mortimer's PRs"),
										Datasource: types.String("github"),
										RequestOptions: &components.SearchRequestOptions{
											DatasourceFilter: types.String("JIRA"),
											DatasourcesFilter: []string{
												"JIRA",
											},
											QueryOverridesFacetFilters: types.Bool(true),
											FacetFilters: []components.FacetFilter{
												components.FacetFilter{
													FieldName: types.String("type"),
													Values: []components.FacetFilterValue{
														components.FacetFilterValue{
															Value:        types.String("Spreadsheet"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
														components.FacetFilterValue{
															Value:        types.String("Presentation"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
													},
												},
											},
											FacetFilterSets: []components.FacetFilterSet{
												components.FacetFilterSet{
													Filters: []components.FacetFilter{
														components.FacetFilter{
															FieldName: types.String("type"),
															Values: []components.FacetFilterValue{
																components.FacetFilterValue{
																	Value:        types.String("Spreadsheet"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
																components.FacetFilterValue{
																	Value:        types.String("Presentation"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
															},
														},
													},
												},
												components.FacetFilterSet{
													Filters: []components.FacetFilter{
														components.FacetFilter{
															FieldName: types.String("type"),
															Values: []components.FacetFilterValue{
																components.FacetFilterValue{
																	Value:        types.String("Spreadsheet"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
																components.FacetFilterValue{
																	Value:        types.String("Presentation"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
															},
														},
													},
												},
											},
											FacetBucketSize: 452067,
											AuthTokens: []components.AuthToken{
												components.AuthToken{
													AccessToken: "123abc",
													Datasource:  "gmail",
													Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
													TokenType:   types.String("Bearer"),
													AuthUser:    types.String("1"),
												},
											},
										},
										InputDetails: &components.SearchRequestInputDetails{
											HasCopyPaste: types.Bool(true),
										},
									},
								},
							},
							AllClusteredResults: []components.ClusterGroup{
								components.ClusterGroup{
									VisibleCountHint: 582887,
								},
							},
							MustIncludeSuggestions: &components.QuerySuggestionList{
								Person: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										InviteInfo: &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
							QuerySuggestion: &components.QuerySuggestion{
								Query: "app:github type:pull author:mortimer",
								SearchProviderInfo: &components.SearchProviderInfo{
									Name:                  types.String("Google"),
									SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
								},
								Label:      types.String("Mortimer's PRs"),
								Datasource: types.String("github"),
								RequestOptions: &components.SearchRequestOptions{
									DatasourceFilter: types.String("JIRA"),
									DatasourcesFilter: []string{
										"JIRA",
									},
									QueryOverridesFacetFilters: types.Bool(true),
									FacetFilters: []components.FacetFilter{
										components.FacetFilter{
											FieldName: types.String("type"),
											Values: []components.FacetFilterValue{
												components.FacetFilterValue{
													Value:        types.String("Spreadsheet"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
												components.FacetFilterValue{
													Value:        types.String("Presentation"),
													RelationType: components.RelationTypeEquals.ToPointer(),
												},
											},
										},
									},
									FacetFilterSets: []components.FacetFilterSet{
										components.FacetFilterSet{
											Filters: []components.FacetFilter{
												components.FacetFilter{
													FieldName: types.String("type"),
													Values: []components.FacetFilterValue{
														components.FacetFilterValue{
															Value:        types.String("Spreadsheet"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
														components.FacetFilterValue{
															Value:        types.String("Presentation"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
													},
												},
											},
										},
										components.FacetFilterSet{
											Filters: []components.FacetFilter{
												components.FacetFilter{
													FieldName: types.String("type"),
													Values: []components.FacetFilterValue{
														components.FacetFilterValue{
															Value:        types.String("Spreadsheet"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
														components.FacetFilterValue{
															Value:        types.String("Presentation"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
													},
												},
											},
										},
									},
									FacetBucketSize: 474391,
									AuthTokens: []components.AuthToken{
										components.AuthToken{
											AccessToken: "123abc",
											Datasource:  "gmail",
											Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
											TokenType:   types.String("Bearer"),
											AuthUser:    types.String("1"),
										},
									},
								},
								InputDetails: &components.SearchRequestInputDetails{
									HasCopyPaste: types.Bool(true),
								},
							},
						},
					},
					Meeting: &components.Meeting{
						Attendees: &components.CalendarAttendees{
							People: []components.CalendarAttendee{
								components.CalendarAttendee{
									Person: components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
								components.CalendarAttendee{
									Person: components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
						},
					},
					Collection: &components.Collection{
						Name:        "<value>",
						Description: "mmm parched justly gracefully enlightened exhausted",
						AudienceFilters: []components.FacetFilter{
							components.FacetFilter{
								FieldName: types.String("type"),
								Values: []components.FacetFilterValue{
									components.FacetFilterValue{
										Value:        types.String("Spreadsheet"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
									components.FacetFilterValue{
										Value:        types.String("Presentation"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
								},
							},
						},
						ID: 999457,
						Creator: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
					AnswerBoard: &components.AnswerBoard{
						Name:        "<value>",
						Description: "loftily nudge mutate",
						AudienceFilters: []components.FacetFilter{
							components.FacetFilter{
								FieldName: types.String("type"),
								Values: []components.FacetFilterValue{
									components.FacetFilterValue{
										Value:        types.String("Spreadsheet"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
									components.FacetFilterValue{
										Value:        types.String("Presentation"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
								},
							},
						},
						ID: 86668,
						Creator: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
					Code: &components.Code{
						RepoName: types.String("scio"),
						FileName: types.String("README.md"),
						Lines: []components.CodeLine{
							components.CodeLine{},
							components.CodeLine{},
						},
					},
					Shortcut: &components.Shortcut{
						InputAlias: "<value>",
						CreatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						DestinationDocument: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateUnverified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 682320,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
					},
					QuerySuggestions: &components.QuerySuggestionList{
						Person: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								InviteInfo: &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
					RelatedQuestion: &components.RelatedQuestion{},
				},
			},
			GeneratedQnaResult: &components.GeneratedQna{
				Ranges: []components.TextRange{
					components.TextRange{
						StartIndex: 644586,
						Document: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateUnverified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 620338,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
					},
					components.TextRange{
						StartIndex: 308767,
						Document: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateVerified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 863152,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
			GleanDataError: &components.GleanDataError{
				ErrorMessages: []components.ErrorMessage{
					components.ErrorMessage{
						Source:       types.String("gmail"),
						ErrorMessage: types.String("invalid token"),
					},
					components.ErrorMessage{
						Source:       types.String("slack"),
						ErrorMessage: types.String("expired token"),
					},
				},
			},
			RequestID:         types.String("5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100"),
			BackendTimeMillis: types.Int64(1100),
			Metadata: &components.SearchResponseMetadata{
				SearchedQueryRanges: []components.TextRange{
					components.TextRange{
						StartIndex: 338407,
						Document: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateDeprecated,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 686894,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
					},
					components.TextRange{
						StartIndex: 251471,
						Document: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateVerified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 772178,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
					},
				},
				QuerySuggestion: &components.QuerySuggestion{
					Query: "app:github type:pull author:mortimer",
					SearchProviderInfo: &components.SearchProviderInfo{
						Name:                  types.String("Google"),
						SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
					},
					Label:      types.String("Mortimer's PRs"),
					Datasource: types.String("github"),
					RequestOptions: &components.SearchRequestOptions{
						DatasourceFilter: types.String("JIRA"),
						DatasourcesFilter: []string{
							"JIRA",
						},
						QueryOverridesFacetFilters: types.Bool(true),
						FacetFilters: []components.FacetFilter{
							components.FacetFilter{
								FieldName: types.String("type"),
								Values: []components.FacetFilterValue{
									components.FacetFilterValue{
										Value:        types.String("Spreadsheet"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
									components.FacetFilterValue{
										Value:        types.String("Presentation"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
								},
							},
						},
						FacetFilterSets: []components.FacetFilterSet{
							components.FacetFilterSet{
								Filters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
							},
							components.FacetFilterSet{
								Filters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
							},
							components.FacetFilterSet{
								Filters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
							},
						},
						FacetBucketSize: 409635,
						AuthTokens: []components.AuthToken{
							components.AuthToken{
								AccessToken: "123abc",
								Datasource:  "gmail",
								Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
								TokenType:   types.String("Bearer"),
								AuthUser:    types.String("1"),
							},
						},
					},
					InputDetails: &components.SearchRequestInputDetails{
						HasCopyPaste: types.Bool(true),
					},
				},
				AdditionalQuerySuggestions: &components.QuerySuggestionList{
					Person: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							InviteInfo: &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
			},
			FacetResults: []components.FacetResult{
				components.FacetResult{
					SourceName:   types.String("container_name"),
					OperatorName: types.String("SelectMultiple"),
					Buckets: []components.FacetBucket{
						components.FacetBucket{
							Count:      types.Int64(1),
							Datasource: types.String("jira"),
							Percentage: types.Int64(5),
							Value: &components.FacetValue{
								StringValue:  types.String("engineering"),
								IntegerValue: types.Int64(5),
								DisplayLabel: types.String("engineering"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
						components.FacetBucket{
							Count:      types.Int64(1),
							Datasource: types.String("jira"),
							Percentage: types.Int64(5),
							Value: &components.FacetValue{
								StringValue:  types.String("engineering"),
								IntegerValue: types.Int64(5),
								DisplayLabel: types.String("engineering"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
					},
					HasMoreBuckets: types.Bool(false),
					GroupName:      types.String("Service Cloud"),
				},
				components.FacetResult{
					SourceName:   types.String("container_name"),
					OperatorName: types.String("SelectMultiple"),
					Buckets: []components.FacetBucket{
						components.FacetBucket{
							Count:      types.Int64(1),
							Datasource: types.String("jira"),
							Percentage: types.Int64(5),
							Value: &components.FacetValue{
								StringValue:  types.String("engineering"),
								IntegerValue: types.Int64(5),
								DisplayLabel: types.String("engineering"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
						components.FacetBucket{
							Count:      types.Int64(1),
							Datasource: types.String("jira"),
							Percentage: types.Int64(5),
							Value: &components.FacetValue{
								StringValue:  types.String("engineering"),
								IntegerValue: types.Int64(5),
								DisplayLabel: types.String("engineering"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
					},
					HasMoreBuckets: types.Bool(false),
					GroupName:      types.String("Service Cloud"),
				},
			},
			ResultsDescription: &components.ResultsDescription{
				IconConfig: &components.IconConfig{
					Color:    types.String("#343CED"),
					Key:      types.String("person_icon"),
					IconType: components.IconTypeGlyph.ToPointer(),
					Name:     types.String("user"),
				},
			},
			RewrittenFacetFilters: []components.FacetFilter{
				components.FacetFilter{
					FieldName: types.String("type"),
					Values: []components.FacetFilterValue{
						components.FacetFilterValue{
							Value:        types.String("Spreadsheet"),
							RelationType: components.RelationTypeEquals.ToPointer(),
						},
						components.FacetFilterValue{
							Value:        types.String("Presentation"),
							RelationType: components.RelationTypeEquals.ToPointer(),
						},
					},
				},
			},
			HasMoreResults: types.Bool(true),
		},
		RootMessage: &components.SearchResult{
			Document: &components.Document{
				Metadata: &components.DocumentMetadata{
					Datasource: types.String("datasource"),
					ObjectType: types.String("Feature Request"),
					Container:  types.String("container"),
					ParentID:   types.String("JIRA_EN-1337"),
					MimeType:   types.String("mimeType"),
					DocumentID: types.String("documentId"),
					CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
					UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
					Author: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					Owner: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					Components: []string{
						"Backend",
						"Networking",
					},
					Status: types.String("[\"Done\"]"),
					AssignedTo: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					Interactions: &components.DocumentInteractions{},
					Verification: &components.Verification{
						State: components.StateDeprecated,
						Metadata: &components.VerificationMetadata{
							LastVerifier: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							LastReminder: &components.Reminder{
								Assignee: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Requestor: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								RemindAt: 99727,
							},
						},
					},
					CustomData: map[string]components.CustomDataValue{
						"someCustomField": components.CustomDataValue{},
					},
					ContactPerson: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
			},
			Title:        types.String("title"),
			URL:          "https://example.com/foo/bar",
			NativeAppURL: types.String("slack://foo/bar"),
			MustIncludeSuggestions: &components.QuerySuggestionList{
				Person: &components.Person{
					Name:         "George Clooney",
					ObfuscatedID: "abc123",
					Metadata: &components.PersonMetadata{
						Type:       components.PersonMetadataTypeFullTime.ToPointer(),
						Title:      types.String("Actor"),
						Department: types.String("Movies"),
						Email:      types.String("george@example.com"),
						Location:   types.String("Hollywood, CA"),
						Phone:      types.String("6505551234"),
						PhotoURL:   types.String("https://example.com/george.jpg"),
						StartDate:  types.MustNewDateFromString("2000-01-23"),
						DatasourceProfile: []components.DatasourceProfile{
							components.DatasourceProfile{
								Datasource: "github",
								Handle:     "<value>",
							},
						},
						InviteInfo: &components.InviteInfo{},
						Badges: []components.Badge{
							components.Badge{
								Key:         types.String("deployment_name_new_hire"),
								DisplayName: types.String("New hire"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
					},
				},
			},
			QuerySuggestion: &components.QuerySuggestion{
				Query: "app:github type:pull author:mortimer",
				SearchProviderInfo: &components.SearchProviderInfo{
					Name:                  types.String("Google"),
					SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
				},
				Label:      types.String("Mortimer's PRs"),
				Datasource: types.String("github"),
				RequestOptions: &components.SearchRequestOptions{
					DatasourceFilter: types.String("JIRA"),
					DatasourcesFilter: []string{
						"JIRA",
					},
					QueryOverridesFacetFilters: types.Bool(true),
					FacetFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					FacetFilterSets: []components.FacetFilterSet{
						components.FacetFilterSet{
							Filters: []components.FacetFilter{
								components.FacetFilter{
									FieldName: types.String("type"),
									Values: []components.FacetFilterValue{
										components.FacetFilterValue{
											Value:        types.String("Spreadsheet"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
										components.FacetFilterValue{
											Value:        types.String("Presentation"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
									},
								},
							},
						},
						components.FacetFilterSet{
							Filters: []components.FacetFilter{
								components.FacetFilter{
									FieldName: types.String("type"),
									Values: []components.FacetFilterValue{
										components.FacetFilterValue{
											Value:        types.String("Spreadsheet"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
										components.FacetFilterValue{
											Value:        types.String("Presentation"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
									},
								},
							},
						},
						components.FacetFilterSet{
							Filters: []components.FacetFilter{
								components.FacetFilter{
									FieldName: types.String("type"),
									Values: []components.FacetFilterValue{
										components.FacetFilterValue{
											Value:        types.String("Spreadsheet"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
										components.FacetFilterValue{
											Value:        types.String("Presentation"),
											RelationType: components.RelationTypeEquals.ToPointer(),
										},
									},
								},
							},
						},
					},
					FacetBucketSize: 960400,
					AuthTokens: []components.AuthToken{
						components.AuthToken{
							AccessToken: "123abc",
							Datasource:  "gmail",
							Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
							TokenType:   types.String("Bearer"),
							AuthUser:    types.String("1"),
						},
					},
				},
				InputDetails: &components.SearchRequestInputDetails{
					HasCopyPaste: types.Bool(true),
				},
			},
		},
	}
	respBodyBytes, err := utils.MarshalJSON(respBody, "", true)

	if err != nil {
		http.Error(
			w,
			"Unable to encode response body as JSON: "+err.Error(),
			http.StatusInternalServerError,
		)
		return
	}
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(http.StatusOK)
	_, _ = w.Write(respBodyBytes)
}
