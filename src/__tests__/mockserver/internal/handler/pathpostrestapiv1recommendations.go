// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package handler

import (
	"fmt"
	"log"
	"mockserver/internal/handler/assert"
	"mockserver/internal/logging"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/types"
	"mockserver/internal/sdk/utils"
	"mockserver/internal/tracking"
	"net/http"
)

func pathPostRestAPIV1Recommendations(dir *logging.HTTPFileDirectory, rt *tracking.RequestTracker) http.HandlerFunc {
	return func(w http.ResponseWriter, req *http.Request) {
		test := req.Header.Get("x-speakeasy-test-name")
		instanceID := req.Header.Get("x-speakeasy-test-instance-id")

		count := rt.GetRequestCount(test, instanceID)

		switch fmt.Sprintf("%s[%d]", test, count) {
		case "recommendations[0]":
			dir.HandlerFunc("recommendations", testRecommendationsRecommendations0)(w, req)
		default:
			http.Error(w, fmt.Sprintf("Unknown test: %s[%d]", test, count), http.StatusBadRequest)
		}
	}
}

func testRecommendationsRecommendations0(w http.ResponseWriter, req *http.Request) {
	if err := assert.SecurityAuthorizationHeader(req, false, "Bearer"); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusUnauthorized)
		return
	}
	if err := assert.ContentType(req, "application/json", true); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	if err := assert.AcceptHeader(req, []string{"application/json"}); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	if err := assert.HeaderExists(req, "User-Agent"); err != nil {
		log.Printf("assertion error: %s\n", err)
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	respBody := &components.ResultsResponse{
		Results: []components.SearchResult{
			components.SearchResult{
				Title:        types.String("title"),
				URL:          "https://example.com/foo/bar",
				NativeAppURL: types.String("slack://foo/bar"),
				Snippets: []components.SearchResultSnippet{
					components.SearchResultSnippet{
						Snippet:  "snippet",
						MimeType: types.String("mimeType"),
					},
				},
			},
		},
		StructuredResults: []components.StructuredResult{
			components.StructuredResult{
				Document: &components.Document{
					Metadata: &components.DocumentMetadata{
						Datasource: types.String("datasource"),
						ObjectType: types.String("Feature Request"),
						Container:  types.String("container"),
						ParentID:   types.String("JIRA_EN-1337"),
						MimeType:   types.String("mimeType"),
						DocumentID: types.String("documentId"),
						CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
						UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
						Author: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							RelatedDocuments: []components.RelatedDocuments{
								components.RelatedDocuments{
									QuerySuggestion: &components.QuerySuggestion{
										Query: "app:github type:pull author:mortimer",
										SearchProviderInfo: &components.SearchProviderInfo{
											Name:                  types.String("Google"),
											SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
										},
										Label:      types.String("Mortimer's PRs"),
										Datasource: types.String("github"),
										RequestOptions: &components.SearchRequestOptions{
											DatasourceFilter: types.String("JIRA"),
											DatasourcesFilter: []string{
												"JIRA",
											},
											QueryOverridesFacetFilters: types.Bool(true),
											FacetFilters: []components.FacetFilter{
												components.FacetFilter{
													FieldName: types.String("type"),
													Values: []components.FacetFilterValue{
														components.FacetFilterValue{
															Value:        types.String("Spreadsheet"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
														components.FacetFilterValue{
															Value:        types.String("Presentation"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
													},
												},
											},
											FacetFilterSets: []components.FacetFilterSet{
												components.FacetFilterSet{
													Filters: []components.FacetFilter{
														components.FacetFilter{
															FieldName: types.String("type"),
															Values: []components.FacetFilterValue{
																components.FacetFilterValue{
																	Value:        types.String("Spreadsheet"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
																components.FacetFilterValue{
																	Value:        types.String("Presentation"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
															},
														},
													},
												},
												components.FacetFilterSet{
													Filters: []components.FacetFilter{
														components.FacetFilter{
															FieldName: types.String("type"),
															Values: []components.FacetFilterValue{
																components.FacetFilterValue{
																	Value:        types.String("Spreadsheet"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
																components.FacetFilterValue{
																	Value:        types.String("Presentation"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
															},
														},
													},
												},
											},
											FacetBucketSize: 699199,
											AuthTokens: []components.AuthToken{
												components.AuthToken{
													AccessToken: "123abc",
													Datasource:  "gmail",
													Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
													TokenType:   types.String("Bearer"),
													AuthUser:    types.String("1"),
												},
											},
										},
										Ranges: []components.TextRange{
											components.TextRange{
												StartIndex: 312814,
											},
										},
										InputDetails: &components.SearchRequestInputDetails{
											HasCopyPaste: types.Bool(true),
										},
									},
								},
								components.RelatedDocuments{
									QuerySuggestion: &components.QuerySuggestion{
										Query: "app:github type:pull author:mortimer",
										SearchProviderInfo: &components.SearchProviderInfo{
											Name:                  types.String("Google"),
											SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
										},
										Label:      types.String("Mortimer's PRs"),
										Datasource: types.String("github"),
										RequestOptions: &components.SearchRequestOptions{
											DatasourceFilter: types.String("JIRA"),
											DatasourcesFilter: []string{
												"JIRA",
											},
											QueryOverridesFacetFilters: types.Bool(true),
											FacetFilters: []components.FacetFilter{
												components.FacetFilter{
													FieldName: types.String("type"),
													Values: []components.FacetFilterValue{
														components.FacetFilterValue{
															Value:        types.String("Spreadsheet"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
														components.FacetFilterValue{
															Value:        types.String("Presentation"),
															RelationType: components.RelationTypeEquals.ToPointer(),
														},
													},
												},
											},
											FacetFilterSets: []components.FacetFilterSet{
												components.FacetFilterSet{
													Filters: []components.FacetFilter{
														components.FacetFilter{
															FieldName: types.String("type"),
															Values: []components.FacetFilterValue{
																components.FacetFilterValue{
																	Value:        types.String("Spreadsheet"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
																components.FacetFilterValue{
																	Value:        types.String("Presentation"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
															},
														},
													},
												},
												components.FacetFilterSet{
													Filters: []components.FacetFilter{
														components.FacetFilter{
															FieldName: types.String("type"),
															Values: []components.FacetFilterValue{
																components.FacetFilterValue{
																	Value:        types.String("Spreadsheet"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
																components.FacetFilterValue{
																	Value:        types.String("Presentation"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
															},
														},
													},
												},
												components.FacetFilterSet{
													Filters: []components.FacetFilter{
														components.FacetFilter{
															FieldName: types.String("type"),
															Values: []components.FacetFilterValue{
																components.FacetFilterValue{
																	Value:        types.String("Spreadsheet"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
																components.FacetFilterValue{
																	Value:        types.String("Presentation"),
																	RelationType: components.RelationTypeEquals.ToPointer(),
																},
															},
														},
													},
												},
											},
											FacetBucketSize: 518835,
											AuthTokens: []components.AuthToken{
												components.AuthToken{
													AccessToken: "123abc",
													Datasource:  "gmail",
													Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
													TokenType:   types.String("Bearer"),
													AuthUser:    types.String("1"),
												},
											},
										},
										InputDetails: &components.SearchRequestInputDetails{
											HasCopyPaste: types.Bool(true),
										},
									},
								},
							},
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{
									Suggestions: []components.QuerySuggestion{
										components.QuerySuggestion{
											Query:      "app:github type:pull author:mortimer",
											Label:      types.String("Mortimer's PRs"),
											Datasource: types.String("github"),
										},
									},
								},
								InviteInfo: &components.InviteInfo{
									Invites: []components.ChannelInviteInfo{
										components.ChannelInviteInfo{},
									},
								},
								CustomFields: []components.CustomFieldData{
									components.CustomFieldData{
										Label: "<value>",
										Values: []components.CustomFieldValue{
											components.CreateCustomFieldValueCustomFieldValueStr(
												components.CustomFieldValueStr{},
											),
										},
										Displayable: types.Bool(true),
									},
									components.CustomFieldData{
										Label:       "<value>",
										Values:      []components.CustomFieldValue{},
										Displayable: types.Bool(true),
									},
								},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Owner: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						MentionedPeople: []components.Person{
							components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
							},
						},
						Components: []string{
							"Backend",
							"Networking",
						},
						Status: types.String("[\"Done\"]"),
						Pins: []components.PinDocument{
							components.PinDocument{
								AudienceFilters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
								DocumentID: "<id>",
								Attribution: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
							components.PinDocument{
								AudienceFilters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
								DocumentID: "<id>",
								Attribution: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
						AssignedTo: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Collections: []components.Collection{
							components.Collection{
								Name:        "<value>",
								Description: "after even coliseum an gladly cruelly infinite likely manage procrastinate",
								AddedRoles: []components.UserRoleSpecification{
									components.UserRoleSpecification{
										Person: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Role: components.UserRoleEditor,
									},
									components.UserRoleSpecification{
										Person: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Role: components.UserRoleViewer,
									},
									components.UserRoleSpecification{
										Person: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Role: components.UserRoleOwner,
									},
								},
								RemovedRoles: []components.UserRoleSpecification{
									components.UserRoleSpecification{
										Person: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Role: components.UserRoleVerifier,
									},
									components.UserRoleSpecification{
										Person: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Role: components.UserRoleEditor,
									},
								},
								AudienceFilters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
								ID: 102105,
								Creator: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Items: []components.CollectionItem{
									components.CollectionItem{
										CollectionID: 261136,
										CreatedBy: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Shortcut: &components.Shortcut{
											InputAlias: "<value>",
											CreatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											UpdatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Roles: []components.UserRoleSpecification{
												components.UserRoleSpecification{
													Person: &components.Person{
														Name:         "George Clooney",
														ObfuscatedID: "abc123",
														Metadata: &components.PersonMetadata{
															Type:       components.PersonMetadataTypeFullTime.ToPointer(),
															Title:      types.String("Actor"),
															Department: types.String("Movies"),
															Email:      types.String("george@example.com"),
															Location:   types.String("Hollywood, CA"),
															Phone:      types.String("6505551234"),
															PhotoURL:   types.String("https://example.com/george.jpg"),
															StartDate:  types.MustNewDateFromString("2000-01-23"),
															DatasourceProfile: []components.DatasourceProfile{
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
															},
															QuerySuggestions: &components.QuerySuggestionList{},
															InviteInfo:       &components.InviteInfo{},
															Badges: []components.Badge{
																components.Badge{
																	Key:         types.String("deployment_name_new_hire"),
																	DisplayName: types.String("New hire"),
																	IconConfig: &components.IconConfig{
																		Color:    types.String("#343CED"),
																		Key:      types.String("person_icon"),
																		IconType: components.IconTypeGlyph.ToPointer(),
																		Name:     types.String("user"),
																	},
																},
															},
														},
													},
													Role: components.UserRoleEditor,
												},
												components.UserRoleSpecification{
													Person: &components.Person{
														Name:         "George Clooney",
														ObfuscatedID: "abc123",
														Metadata: &components.PersonMetadata{
															Type:       components.PersonMetadataTypeFullTime.ToPointer(),
															Title:      types.String("Actor"),
															Department: types.String("Movies"),
															Email:      types.String("george@example.com"),
															Location:   types.String("Hollywood, CA"),
															Phone:      types.String("6505551234"),
															PhotoURL:   types.String("https://example.com/george.jpg"),
															StartDate:  types.MustNewDateFromString("2000-01-23"),
															DatasourceProfile: []components.DatasourceProfile{
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
															},
															QuerySuggestions: &components.QuerySuggestionList{},
															InviteInfo:       &components.InviteInfo{},
															Badges: []components.Badge{
																components.Badge{
																	Key:         types.String("deployment_name_new_hire"),
																	DisplayName: types.String("New hire"),
																	IconConfig: &components.IconConfig{
																		Color:    types.String("#343CED"),
																		Key:      types.String("person_icon"),
																		IconType: components.IconTypeGlyph.ToPointer(),
																		Name:     types.String("user"),
																	},
																},
															},
														},
													},
													Role: components.UserRoleVerifier,
												},
											},
										},
										ItemType: components.CollectionItemItemTypeURL,
									},
									components.CollectionItem{
										CollectionID: 105923,
										CreatedBy: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Shortcut: &components.Shortcut{
											InputAlias: "<value>",
											CreatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											UpdatedBy: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
										},
										ItemType: components.CollectionItemItemTypeCollection,
									},
								},
							},
							components.Collection{
								Name:        "<value>",
								Description: "violin scarily wring mainstream",
								AudienceFilters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
								ID: 527001,
								Creator: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
						Interactions: &components.DocumentInteractions{
							Reacts: []components.Reaction{
								components.Reaction{
									Reactors: []components.Person{
										components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
										},
									},
								},
							},
							Shares: []components.Share{
								components.Share{
									NumDaysAgo: 893370,
									Sharer: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
						},
						Verification: &components.Verification{
							State: components.StateVerified,
							Metadata: &components.VerificationMetadata{
								LastVerifier: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Reminders: []components.Reminder{
									components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 406721,
									},
									components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 770482,
									},
									components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 395713,
									},
								},
								LastReminder: &components.Reminder{
									Assignee: components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Requestor: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									RemindAt: 785254,
								},
								CandidateVerifiers: []components.Person{
									components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
									},
								},
							},
						},
						Shortcuts: []components.Shortcut{
							components.Shortcut{
								InputAlias: "<value>",
								CreatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
						CustomData: map[string]components.CustomDataValue{
							"someCustomField": components.CustomDataValue{},
						},
						ContactPerson: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
				},
				Person: &components.Person{
					Name:         "George Clooney",
					ObfuscatedID: "abc123",
					Metadata: &components.PersonMetadata{
						Type:       components.PersonMetadataTypeFullTime.ToPointer(),
						Title:      types.String("Actor"),
						Department: types.String("Movies"),
						Email:      types.String("george@example.com"),
						Location:   types.String("Hollywood, CA"),
						Phone:      types.String("6505551234"),
						PhotoURL:   types.String("https://example.com/george.jpg"),
						StartDate:  types.MustNewDateFromString("2000-01-23"),
						DatasourceProfile: []components.DatasourceProfile{
							components.DatasourceProfile{
								Datasource: "github",
								Handle:     "<value>",
							},
						},
						QuerySuggestions: &components.QuerySuggestionList{},
						InviteInfo:       &components.InviteInfo{},
						Badges: []components.Badge{
							components.Badge{
								Key:         types.String("deployment_name_new_hire"),
								DisplayName: types.String("New hire"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
					},
				},
				Customer: &components.Customer{
					ID: "<id>",
					Company: components.Company{
						Name:     "<value>",
						Location: types.String("New York City"),
						Industry: types.String("Finances"),
						About:    types.String("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City"),
					},
					Poc: []components.Person{
						components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
						},
					},
					Notes: types.String("CIO is interested in trying out the product."),
				},
				Team: &components.Team{
					ID:   "<id>",
					Name: "<value>",
					Members: []components.PersonToTeamRelationship{
						components.PersonToTeamRelationship{
							Person: components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Relationship: components.PersonToTeamRelationshipRelationshipMember.ToPointer(),
						},
						components.PersonToTeamRelationship{
							Person: components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Relationship: components.PersonToTeamRelationshipRelationshipMember.ToPointer(),
						},
					},
					DatasourceProfiles: []components.DatasourceProfile{
						components.DatasourceProfile{
							Datasource: "github",
							Handle:     "<value>",
						},
					},
					Status:       components.TeamStatusProcessed.ToPointer(),
					CanBeDeleted: types.Bool(true),
				},
				CustomEntity: &components.CustomEntity{},
				Answer: &components.Answer{
					ID:       3,
					DocID:    types.String("ANSWERS_answer_3"),
					Question: types.String("Why is the sky blue?"),
					BodyText: types.String("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light."),
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					CombinedAnswerText: &components.StructuredText{
						Text: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
						StructuredList: []components.StructuredTextItem{
							components.StructuredTextItem{
								Link: types.String("https://en.wikipedia.org/wiki/Diffuse_sky_radiation"),
								Document: &components.Document{
									Metadata: &components.DocumentMetadata{
										Datasource: types.String("datasource"),
										ObjectType: types.String("Feature Request"),
										Container:  types.String("container"),
										ParentID:   types.String("JIRA_EN-1337"),
										MimeType:   types.String("mimeType"),
										DocumentID: types.String("documentId"),
										CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
										UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
										Author: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Owner: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Components: []string{
											"Backend",
											"Networking",
										},
										Status: types.String("[\"Done\"]"),
										AssignedTo: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										UpdatedBy: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Interactions: &components.DocumentInteractions{},
										Verification: &components.Verification{
											State: components.StateVerified,
											Metadata: &components.VerificationMetadata{
												LastVerifier: &components.Person{
													Name:         "George Clooney",
													ObfuscatedID: "abc123",
													Metadata: &components.PersonMetadata{
														Type:       components.PersonMetadataTypeFullTime.ToPointer(),
														Title:      types.String("Actor"),
														Department: types.String("Movies"),
														Email:      types.String("george@example.com"),
														Location:   types.String("Hollywood, CA"),
														Phone:      types.String("6505551234"),
														PhotoURL:   types.String("https://example.com/george.jpg"),
														StartDate:  types.MustNewDateFromString("2000-01-23"),
														DatasourceProfile: []components.DatasourceProfile{
															components.DatasourceProfile{
																Datasource: "github",
																Handle:     "<value>",
															},
														},
														QuerySuggestions: &components.QuerySuggestionList{},
														InviteInfo:       &components.InviteInfo{},
														Badges: []components.Badge{
															components.Badge{
																Key:         types.String("deployment_name_new_hire"),
																DisplayName: types.String("New hire"),
																IconConfig: &components.IconConfig{
																	Color:    types.String("#343CED"),
																	Key:      types.String("person_icon"),
																	IconType: components.IconTypeGlyph.ToPointer(),
																	Name:     types.String("user"),
																},
															},
														},
													},
												},
												LastReminder: &components.Reminder{
													Assignee: components.Person{
														Name:         "George Clooney",
														ObfuscatedID: "abc123",
														Metadata: &components.PersonMetadata{
															Type:       components.PersonMetadataTypeFullTime.ToPointer(),
															Title:      types.String("Actor"),
															Department: types.String("Movies"),
															Email:      types.String("george@example.com"),
															Location:   types.String("Hollywood, CA"),
															Phone:      types.String("6505551234"),
															PhotoURL:   types.String("https://example.com/george.jpg"),
															StartDate:  types.MustNewDateFromString("2000-01-23"),
															DatasourceProfile: []components.DatasourceProfile{
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
															},
															QuerySuggestions: &components.QuerySuggestionList{},
															InviteInfo:       &components.InviteInfo{},
															Badges: []components.Badge{
																components.Badge{
																	Key:         types.String("deployment_name_new_hire"),
																	DisplayName: types.String("New hire"),
																	IconConfig: &components.IconConfig{
																		Color:    types.String("#343CED"),
																		Key:      types.String("person_icon"),
																		IconType: components.IconTypeGlyph.ToPointer(),
																		Name:     types.String("user"),
																	},
																},
															},
														},
													},
													Requestor: &components.Person{
														Name:         "George Clooney",
														ObfuscatedID: "abc123",
														Metadata: &components.PersonMetadata{
															Type:       components.PersonMetadataTypeFullTime.ToPointer(),
															Title:      types.String("Actor"),
															Department: types.String("Movies"),
															Email:      types.String("george@example.com"),
															Location:   types.String("Hollywood, CA"),
															Phone:      types.String("6505551234"),
															PhotoURL:   types.String("https://example.com/george.jpg"),
															StartDate:  types.MustNewDateFromString("2000-01-23"),
															DatasourceProfile: []components.DatasourceProfile{
																components.DatasourceProfile{
																	Datasource: "github",
																	Handle:     "<value>",
																},
															},
															QuerySuggestions: &components.QuerySuggestionList{},
															InviteInfo:       &components.InviteInfo{},
															Badges: []components.Badge{
																components.Badge{
																	Key:         types.String("deployment_name_new_hire"),
																	DisplayName: types.String("New hire"),
																	IconConfig: &components.IconConfig{
																		Color:    types.String("#343CED"),
																		Key:      types.String("person_icon"),
																		IconType: components.IconTypeGlyph.ToPointer(),
																		Name:     types.String("user"),
																	},
																},
															},
														},
													},
													RemindAt: 16789,
												},
											},
										},
										CustomData: map[string]components.CustomDataValue{
											"someCustomField": components.CustomDataValue{},
										},
										ContactPerson: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
									},
								},
								Text: types.String("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue."),
							},
						},
					},
					Likes: &components.AnswerLikes{
						LikedBy:     []components.AnswerLike{},
						LikedByUser: false,
						NumLikes:    610516,
					},
					Author: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					Verification: &components.Verification{
						State: components.StateVerified,
						Metadata: &components.VerificationMetadata{
							LastVerifier: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Document: &components.Document{
								Metadata: &components.DocumentMetadata{
									Datasource: types.String("datasource"),
									ObjectType: types.String("Feature Request"),
									Container:  types.String("container"),
									ParentID:   types.String("JIRA_EN-1337"),
									MimeType:   types.String("mimeType"),
									DocumentID: types.String("documentId"),
									CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									Author: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Owner: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Components: []string{
										"Backend",
										"Networking",
									},
									Status: types.String("[\"Done\"]"),
									AssignedTo: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Interactions: &components.DocumentInteractions{},
									CustomData: map[string]components.CustomDataValue{
										"someCustomField": components.CustomDataValue{},
									},
									ContactPerson: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							LastReminder: &components.Reminder{
								Assignee: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Requestor: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								RemindAt: 400283,
							},
						},
					},
					Board: &components.AnswerBoard{
						Name:        "<value>",
						Description: "pulverize bourgeoisie that carefree underneath ew doubtfully when",
						AudienceFilters: []components.FacetFilter{
							components.FacetFilter{
								FieldName: types.String("type"),
								Values: []components.FacetFilterValue{
									components.FacetFilterValue{
										Value:        types.String("Spreadsheet"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
									components.FacetFilterValue{
										Value:        types.String("Presentation"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
								},
							},
						},
						ID: 743163,
						Creator: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
					SourceDocument: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateUnverified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 987002,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				ExtractedQnA: &components.ExtractedQnA{
					QuestionResult: &components.SearchResult{
						Document: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateVerified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 704718,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
						Title:        types.String("title"),
						URL:          "https://example.com/foo/bar",
						NativeAppURL: types.String("slack://foo/bar"),
						RelatedResults: []components.RelatedDocuments{
							components.RelatedDocuments{
								QuerySuggestion: &components.QuerySuggestion{
									Query: "app:github type:pull author:mortimer",
									SearchProviderInfo: &components.SearchProviderInfo{
										Name:                  types.String("Google"),
										SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
									},
									Label:      types.String("Mortimer's PRs"),
									Datasource: types.String("github"),
									RequestOptions: &components.SearchRequestOptions{
										DatasourceFilter: types.String("JIRA"),
										DatasourcesFilter: []string{
											"JIRA",
										},
										QueryOverridesFacetFilters: types.Bool(true),
										FacetFilters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
										FacetFilterSets: []components.FacetFilterSet{
											components.FacetFilterSet{
												Filters: []components.FacetFilter{
													components.FacetFilter{
														FieldName: types.String("type"),
														Values: []components.FacetFilterValue{
															components.FacetFilterValue{
																Value:        types.String("Spreadsheet"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
															components.FacetFilterValue{
																Value:        types.String("Presentation"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
														},
													},
												},
											},
											components.FacetFilterSet{
												Filters: []components.FacetFilter{
													components.FacetFilter{
														FieldName: types.String("type"),
														Values: []components.FacetFilterValue{
															components.FacetFilterValue{
																Value:        types.String("Spreadsheet"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
															components.FacetFilterValue{
																Value:        types.String("Presentation"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
														},
													},
												},
											},
											components.FacetFilterSet{
												Filters: []components.FacetFilter{
													components.FacetFilter{
														FieldName: types.String("type"),
														Values: []components.FacetFilterValue{
															components.FacetFilterValue{
																Value:        types.String("Spreadsheet"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
															components.FacetFilterValue{
																Value:        types.String("Presentation"),
																RelationType: components.RelationTypeEquals.ToPointer(),
															},
														},
													},
												},
											},
										},
										FacetBucketSize: 222595,
										AuthTokens: []components.AuthToken{
											components.AuthToken{
												AccessToken: "123abc",
												Datasource:  "gmail",
												Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
												TokenType:   types.String("Bearer"),
												AuthUser:    types.String("1"),
											},
										},
									},
									InputDetails: &components.SearchRequestInputDetails{
										HasCopyPaste: types.Bool(true),
									},
								},
							},
						},
						AllClusteredResults: []components.ClusterGroup{
							components.ClusterGroup{
								VisibleCountHint: 275290,
							},
							components.ClusterGroup{
								VisibleCountHint: 651995,
							},
							components.ClusterGroup{
								VisibleCountHint: 24005,
							},
						},
						MustIncludeSuggestions: &components.QuerySuggestionList{
							Person: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									InviteInfo: &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
						QuerySuggestion: &components.QuerySuggestion{
							Query: "app:github type:pull author:mortimer",
							SearchProviderInfo: &components.SearchProviderInfo{
								Name:                  types.String("Google"),
								SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
							},
							Label:      types.String("Mortimer's PRs"),
							Datasource: types.String("github"),
							RequestOptions: &components.SearchRequestOptions{
								DatasourceFilter: types.String("JIRA"),
								DatasourcesFilter: []string{
									"JIRA",
								},
								QueryOverridesFacetFilters: types.Bool(true),
								FacetFilters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
								FacetFilterSets: []components.FacetFilterSet{
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
								},
								FacetBucketSize: 246581,
								AuthTokens: []components.AuthToken{
									components.AuthToken{
										AccessToken: "123abc",
										Datasource:  "gmail",
										Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
										TokenType:   types.String("Bearer"),
										AuthUser:    types.String("1"),
									},
								},
							},
							InputDetails: &components.SearchRequestInputDetails{
								HasCopyPaste: types.Bool(true),
							},
						},
					},
				},
				Meeting: &components.Meeting{
					Attendees: &components.CalendarAttendees{
						People: []components.CalendarAttendee{
							components.CalendarAttendee{
								Person: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
							components.CalendarAttendee{
								Person: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
					},
				},
				Collection: &components.Collection{
					Name:        "<value>",
					Description: "determined minor porter outrank how",
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					ID: 974943,
					Creator: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				AnswerBoard: &components.AnswerBoard{
					Name:        "<value>",
					Description: "justly jaggedly rout fooey divert vainly dividend",
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					ID: 964880,
					Creator: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				Code: &components.Code{
					RepoName: types.String("scio"),
					FileName: types.String("README.md"),
					Lines: []components.CodeLine{
						components.CodeLine{},
					},
				},
				Shortcut: &components.Shortcut{
					InputAlias: "<value>",
					CreatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					DestinationDocument: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateVerified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 98110,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				QuerySuggestions: &components.QuerySuggestionList{
					Person: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							InviteInfo: &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				RelatedQuestion: &components.RelatedQuestion{},
			},
			components.StructuredResult{
				Document: &components.Document{
					Metadata: &components.DocumentMetadata{
						Datasource: types.String("datasource"),
						ObjectType: types.String("Feature Request"),
						Container:  types.String("container"),
						ParentID:   types.String("JIRA_EN-1337"),
						MimeType:   types.String("mimeType"),
						DocumentID: types.String("documentId"),
						CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
						UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
						Author: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Owner: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Components: []string{
							"Backend",
							"Networking",
						},
						Status: types.String("[\"Done\"]"),
						AssignedTo: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Interactions: &components.DocumentInteractions{},
						Verification: &components.Verification{
							State: components.StateUnverified,
							Metadata: &components.VerificationMetadata{
								LastVerifier: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								LastReminder: &components.Reminder{
									Assignee: components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Requestor: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									RemindAt: 984284,
								},
							},
						},
						CustomData: map[string]components.CustomDataValue{
							"someCustomField": components.CustomDataValue{},
						},
						ContactPerson: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
				},
				Person: &components.Person{
					Name:         "George Clooney",
					ObfuscatedID: "abc123",
					Metadata: &components.PersonMetadata{
						Type:       components.PersonMetadataTypeFullTime.ToPointer(),
						Title:      types.String("Actor"),
						Department: types.String("Movies"),
						Email:      types.String("george@example.com"),
						Location:   types.String("Hollywood, CA"),
						Phone:      types.String("6505551234"),
						PhotoURL:   types.String("https://example.com/george.jpg"),
						StartDate:  types.MustNewDateFromString("2000-01-23"),
						DatasourceProfile: []components.DatasourceProfile{
							components.DatasourceProfile{
								Datasource: "github",
								Handle:     "<value>",
							},
						},
						QuerySuggestions: &components.QuerySuggestionList{},
						InviteInfo:       &components.InviteInfo{},
						Badges: []components.Badge{
							components.Badge{
								Key:         types.String("deployment_name_new_hire"),
								DisplayName: types.String("New hire"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
					},
				},
				Customer: &components.Customer{
					ID: "<id>",
					Company: components.Company{
						Name:     "<value>",
						Location: types.String("New York City"),
						Industry: types.String("Finances"),
						About:    types.String("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City"),
					},
					Notes: types.String("CIO is interested in trying out the product."),
				},
				Team: &components.Team{
					ID:   "<id>",
					Name: "<value>",
					DatasourceProfiles: []components.DatasourceProfile{
						components.DatasourceProfile{
							Datasource: "github",
							Handle:     "<value>",
						},
						components.DatasourceProfile{
							Datasource: "github",
							Handle:     "<value>",
						},
						components.DatasourceProfile{
							Datasource: "github",
							Handle:     "<value>",
						},
					},
					Status:       components.TeamStatusProcessed.ToPointer(),
					CanBeDeleted: types.Bool(true),
				},
				CustomEntity: &components.CustomEntity{},
				Answer: &components.Answer{
					ID:       3,
					DocID:    types.String("ANSWERS_answer_3"),
					Question: types.String("Why is the sky blue?"),
					BodyText: types.String("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light."),
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					CombinedAnswerText: &components.StructuredText{
						Text: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
					},
					Likes: &components.AnswerLikes{
						LikedBy:     []components.AnswerLike{},
						LikedByUser: false,
						NumLikes:    466270,
					},
					Author: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					Verification: &components.Verification{
						State: components.StateVerified,
						Metadata: &components.VerificationMetadata{
							LastVerifier: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Document: &components.Document{
								Metadata: &components.DocumentMetadata{
									Datasource: types.String("datasource"),
									ObjectType: types.String("Feature Request"),
									Container:  types.String("container"),
									ParentID:   types.String("JIRA_EN-1337"),
									MimeType:   types.String("mimeType"),
									DocumentID: types.String("documentId"),
									CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									Author: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Owner: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Components: []string{
										"Backend",
										"Networking",
									},
									Status: types.String("[\"Done\"]"),
									AssignedTo: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Interactions: &components.DocumentInteractions{},
									CustomData: map[string]components.CustomDataValue{
										"someCustomField": components.CustomDataValue{},
									},
									ContactPerson: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							LastReminder: &components.Reminder{
								Assignee: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Requestor: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								RemindAt: 300125,
							},
						},
					},
					Board: &components.AnswerBoard{
						Name:        "<value>",
						Description: "as zowie even",
						AudienceFilters: []components.FacetFilter{
							components.FacetFilter{
								FieldName: types.String("type"),
								Values: []components.FacetFilterValue{
									components.FacetFilterValue{
										Value:        types.String("Spreadsheet"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
									components.FacetFilterValue{
										Value:        types.String("Presentation"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
								},
							},
						},
						ID: 371221,
						Creator: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
					SourceDocument: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateUnverified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 198653,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				ExtractedQnA: &components.ExtractedQnA{
					QuestionResult: &components.SearchResult{
						Document: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateVerified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 172916,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
						Title:        types.String("title"),
						URL:          "https://example.com/foo/bar",
						NativeAppURL: types.String("slack://foo/bar"),
						MustIncludeSuggestions: &components.QuerySuggestionList{
							Person: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									InviteInfo: &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
						QuerySuggestion: &components.QuerySuggestion{
							Query: "app:github type:pull author:mortimer",
							SearchProviderInfo: &components.SearchProviderInfo{
								Name:                  types.String("Google"),
								SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
							},
							Label:      types.String("Mortimer's PRs"),
							Datasource: types.String("github"),
							RequestOptions: &components.SearchRequestOptions{
								DatasourceFilter: types.String("JIRA"),
								DatasourcesFilter: []string{
									"JIRA",
								},
								QueryOverridesFacetFilters: types.Bool(true),
								FacetFilters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
								FacetFilterSets: []components.FacetFilterSet{
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
								},
								FacetBucketSize: 304794,
								AuthTokens: []components.AuthToken{
									components.AuthToken{
										AccessToken: "123abc",
										Datasource:  "gmail",
										Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
										TokenType:   types.String("Bearer"),
										AuthUser:    types.String("1"),
									},
								},
							},
							InputDetails: &components.SearchRequestInputDetails{
								HasCopyPaste: types.Bool(true),
							},
						},
					},
				},
				Meeting: &components.Meeting{
					Attendees: &components.CalendarAttendees{},
				},
				Collection: &components.Collection{
					Name:        "<value>",
					Description: "impartial along sans egg seldom ramp license",
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					ID: 269821,
					Creator: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				AnswerBoard: &components.AnswerBoard{
					Name:        "<value>",
					Description: "as athwart phew linear tenderly",
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					ID: 98893,
					Creator: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				Code: &components.Code{
					RepoName: types.String("scio"),
					FileName: types.String("README.md"),
				},
				Shortcut: &components.Shortcut{
					InputAlias: "<value>",
					CreatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					DestinationDocument: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateVerified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 324965,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				QuerySuggestions: &components.QuerySuggestionList{
					Person: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							InviteInfo: &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				RelatedQuestion: &components.RelatedQuestion{},
			},
			components.StructuredResult{
				Document: &components.Document{
					Metadata: &components.DocumentMetadata{
						Datasource: types.String("datasource"),
						ObjectType: types.String("Feature Request"),
						Container:  types.String("container"),
						ParentID:   types.String("JIRA_EN-1337"),
						MimeType:   types.String("mimeType"),
						DocumentID: types.String("documentId"),
						CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
						UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
						Author: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Owner: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Components: []string{
							"Backend",
							"Networking",
						},
						Status: types.String("[\"Done\"]"),
						AssignedTo: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						Interactions: &components.DocumentInteractions{},
						Verification: &components.Verification{
							State: components.StateUnverified,
							Metadata: &components.VerificationMetadata{
								LastVerifier: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								LastReminder: &components.Reminder{
									Assignee: components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Requestor: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									RemindAt: 515410,
								},
							},
						},
						CustomData: map[string]components.CustomDataValue{
							"someCustomField": components.CustomDataValue{},
						},
						ContactPerson: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
				},
				Person: &components.Person{
					Name:         "George Clooney",
					ObfuscatedID: "abc123",
					Metadata: &components.PersonMetadata{
						Type:       components.PersonMetadataTypeFullTime.ToPointer(),
						Title:      types.String("Actor"),
						Department: types.String("Movies"),
						Email:      types.String("george@example.com"),
						Location:   types.String("Hollywood, CA"),
						Phone:      types.String("6505551234"),
						PhotoURL:   types.String("https://example.com/george.jpg"),
						StartDate:  types.MustNewDateFromString("2000-01-23"),
						DatasourceProfile: []components.DatasourceProfile{
							components.DatasourceProfile{
								Datasource: "github",
								Handle:     "<value>",
							},
						},
						QuerySuggestions: &components.QuerySuggestionList{},
						InviteInfo:       &components.InviteInfo{},
						Badges: []components.Badge{
							components.Badge{
								Key:         types.String("deployment_name_new_hire"),
								DisplayName: types.String("New hire"),
								IconConfig: &components.IconConfig{
									Color:    types.String("#343CED"),
									Key:      types.String("person_icon"),
									IconType: components.IconTypeGlyph.ToPointer(),
									Name:     types.String("user"),
								},
							},
						},
					},
				},
				Customer: &components.Customer{
					ID: "<id>",
					Company: components.Company{
						Name:     "<value>",
						Location: types.String("New York City"),
						Industry: types.String("Finances"),
						About:    types.String("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City"),
					},
					Notes: types.String("CIO is interested in trying out the product."),
				},
				Team: &components.Team{
					ID:   "<id>",
					Name: "<value>",
					DatasourceProfiles: []components.DatasourceProfile{
						components.DatasourceProfile{
							Datasource: "github",
							Handle:     "<value>",
						},
						components.DatasourceProfile{
							Datasource: "github",
							Handle:     "<value>",
						},
					},
					Status:       components.TeamStatusProcessed.ToPointer(),
					CanBeDeleted: types.Bool(true),
				},
				CustomEntity: &components.CustomEntity{},
				Answer: &components.Answer{
					ID:       3,
					DocID:    types.String("ANSWERS_answer_3"),
					Question: types.String("Why is the sky blue?"),
					BodyText: types.String("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light."),
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					CombinedAnswerText: &components.StructuredText{
						Text: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
					},
					Likes: &components.AnswerLikes{
						LikedBy:     []components.AnswerLike{},
						LikedByUser: false,
						NumLikes:    282198,
					},
					Author: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					Verification: &components.Verification{
						State: components.StateDeprecated,
						Metadata: &components.VerificationMetadata{
							LastVerifier: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Document: &components.Document{
								Metadata: &components.DocumentMetadata{
									Datasource: types.String("datasource"),
									ObjectType: types.String("Feature Request"),
									Container:  types.String("container"),
									ParentID:   types.String("JIRA_EN-1337"),
									MimeType:   types.String("mimeType"),
									DocumentID: types.String("documentId"),
									CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
									Author: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Owner: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Components: []string{
										"Backend",
										"Networking",
									},
									Status: types.String("[\"Done\"]"),
									AssignedTo: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									UpdatedBy: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									Interactions: &components.DocumentInteractions{},
									CustomData: map[string]components.CustomDataValue{
										"someCustomField": components.CustomDataValue{},
									},
									ContactPerson: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
								},
							},
							LastReminder: &components.Reminder{
								Assignee: components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Requestor: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								RemindAt: 432314,
							},
						},
					},
					Board: &components.AnswerBoard{
						Name:        "<value>",
						Description: "complicated cumbersome traffic decent finally dimly fooey",
						AudienceFilters: []components.FacetFilter{
							components.FacetFilter{
								FieldName: types.String("type"),
								Values: []components.FacetFilterValue{
									components.FacetFilterValue{
										Value:        types.String("Spreadsheet"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
									components.FacetFilterValue{
										Value:        types.String("Presentation"),
										RelationType: components.RelationTypeEquals.ToPointer(),
									},
								},
							},
						},
						ID: 733118,
						Creator: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
						UpdatedBy: &components.Person{
							Name:         "George Clooney",
							ObfuscatedID: "abc123",
							Metadata: &components.PersonMetadata{
								Type:       components.PersonMetadataTypeFullTime.ToPointer(),
								Title:      types.String("Actor"),
								Department: types.String("Movies"),
								Email:      types.String("george@example.com"),
								Location:   types.String("Hollywood, CA"),
								Phone:      types.String("6505551234"),
								PhotoURL:   types.String("https://example.com/george.jpg"),
								StartDate:  types.MustNewDateFromString("2000-01-23"),
								DatasourceProfile: []components.DatasourceProfile{
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
									components.DatasourceProfile{
										Datasource: "github",
										Handle:     "<value>",
									},
								},
								QuerySuggestions: &components.QuerySuggestionList{},
								InviteInfo:       &components.InviteInfo{},
								Badges: []components.Badge{
									components.Badge{
										Key:         types.String("deployment_name_new_hire"),
										DisplayName: types.String("New hire"),
										IconConfig: &components.IconConfig{
											Color:    types.String("#343CED"),
											Key:      types.String("person_icon"),
											IconType: components.IconTypeGlyph.ToPointer(),
											Name:     types.String("user"),
										},
									},
								},
							},
						},
					},
					SourceDocument: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateVerified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 271733,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				ExtractedQnA: &components.ExtractedQnA{
					QuestionResult: &components.SearchResult{
						Document: &components.Document{
							Metadata: &components.DocumentMetadata{
								Datasource: types.String("datasource"),
								ObjectType: types.String("Feature Request"),
								Container:  types.String("container"),
								ParentID:   types.String("JIRA_EN-1337"),
								MimeType:   types.String("mimeType"),
								DocumentID: types.String("documentId"),
								CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
								Author: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Owner: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Components: []string{
									"Backend",
									"Networking",
								},
								Status: types.String("[\"Done\"]"),
								AssignedTo: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								UpdatedBy: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
								Interactions: &components.DocumentInteractions{},
								Verification: &components.Verification{
									State: components.StateVerified,
									Metadata: &components.VerificationMetadata{
										LastVerifier: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										LastReminder: &components.Reminder{
											Assignee: components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											Requestor: &components.Person{
												Name:         "George Clooney",
												ObfuscatedID: "abc123",
												Metadata: &components.PersonMetadata{
													Type:       components.PersonMetadataTypeFullTime.ToPointer(),
													Title:      types.String("Actor"),
													Department: types.String("Movies"),
													Email:      types.String("george@example.com"),
													Location:   types.String("Hollywood, CA"),
													Phone:      types.String("6505551234"),
													PhotoURL:   types.String("https://example.com/george.jpg"),
													StartDate:  types.MustNewDateFromString("2000-01-23"),
													DatasourceProfile: []components.DatasourceProfile{
														components.DatasourceProfile{
															Datasource: "github",
															Handle:     "<value>",
														},
													},
													QuerySuggestions: &components.QuerySuggestionList{},
													InviteInfo:       &components.InviteInfo{},
													Badges: []components.Badge{
														components.Badge{
															Key:         types.String("deployment_name_new_hire"),
															DisplayName: types.String("New hire"),
															IconConfig: &components.IconConfig{
																Color:    types.String("#343CED"),
																Key:      types.String("person_icon"),
																IconType: components.IconTypeGlyph.ToPointer(),
																Name:     types.String("user"),
															},
														},
													},
												},
											},
											RemindAt: 568981,
										},
									},
								},
								CustomData: map[string]components.CustomDataValue{
									"someCustomField": components.CustomDataValue{},
								},
								ContactPerson: &components.Person{
									Name:         "George Clooney",
									ObfuscatedID: "abc123",
									Metadata: &components.PersonMetadata{
										Type:       components.PersonMetadataTypeFullTime.ToPointer(),
										Title:      types.String("Actor"),
										Department: types.String("Movies"),
										Email:      types.String("george@example.com"),
										Location:   types.String("Hollywood, CA"),
										Phone:      types.String("6505551234"),
										PhotoURL:   types.String("https://example.com/george.jpg"),
										StartDate:  types.MustNewDateFromString("2000-01-23"),
										DatasourceProfile: []components.DatasourceProfile{
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
											components.DatasourceProfile{
												Datasource: "github",
												Handle:     "<value>",
											},
										},
										QuerySuggestions: &components.QuerySuggestionList{},
										InviteInfo:       &components.InviteInfo{},
										Badges: []components.Badge{
											components.Badge{
												Key:         types.String("deployment_name_new_hire"),
												DisplayName: types.String("New hire"),
												IconConfig: &components.IconConfig{
													Color:    types.String("#343CED"),
													Key:      types.String("person_icon"),
													IconType: components.IconTypeGlyph.ToPointer(),
													Name:     types.String("user"),
												},
											},
										},
									},
								},
							},
						},
						Title:        types.String("title"),
						URL:          "https://example.com/foo/bar",
						NativeAppURL: types.String("slack://foo/bar"),
						MustIncludeSuggestions: &components.QuerySuggestionList{
							Person: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									InviteInfo: &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
						QuerySuggestion: &components.QuerySuggestion{
							Query: "app:github type:pull author:mortimer",
							SearchProviderInfo: &components.SearchProviderInfo{
								Name:                  types.String("Google"),
								SearchLinkURLTemplate: types.String("https://www.google.com/search?q={query}&hl=en"),
							},
							Label:      types.String("Mortimer's PRs"),
							Datasource: types.String("github"),
							RequestOptions: &components.SearchRequestOptions{
								DatasourceFilter: types.String("JIRA"),
								DatasourcesFilter: []string{
									"JIRA",
								},
								QueryOverridesFacetFilters: types.Bool(true),
								FacetFilters: []components.FacetFilter{
									components.FacetFilter{
										FieldName: types.String("type"),
										Values: []components.FacetFilterValue{
											components.FacetFilterValue{
												Value:        types.String("Spreadsheet"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
											components.FacetFilterValue{
												Value:        types.String("Presentation"),
												RelationType: components.RelationTypeEquals.ToPointer(),
											},
										},
									},
								},
								FacetFilterSets: []components.FacetFilterSet{
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
									components.FacetFilterSet{
										Filters: []components.FacetFilter{
											components.FacetFilter{
												FieldName: types.String("type"),
												Values: []components.FacetFilterValue{
													components.FacetFilterValue{
														Value:        types.String("Spreadsheet"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
													components.FacetFilterValue{
														Value:        types.String("Presentation"),
														RelationType: components.RelationTypeEquals.ToPointer(),
													},
												},
											},
										},
									},
								},
								FacetBucketSize: 121438,
								AuthTokens: []components.AuthToken{
									components.AuthToken{
										AccessToken: "123abc",
										Datasource:  "gmail",
										Scope:       types.String("email profile https://www.googleapis.com/auth/gmail.readonly"),
										TokenType:   types.String("Bearer"),
										AuthUser:    types.String("1"),
									},
								},
							},
							InputDetails: &components.SearchRequestInputDetails{
								HasCopyPaste: types.Bool(true),
							},
						},
					},
				},
				Meeting: &components.Meeting{
					Attendees: &components.CalendarAttendees{},
				},
				Collection: &components.Collection{
					Name:        "<value>",
					Description: "ascertain taxicab amongst truthfully unless brr with alongside plus",
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					ID: 842312,
					Creator: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				AnswerBoard: &components.AnswerBoard{
					Name:        "<value>",
					Description: "rotten ew handy highly pfft",
					AudienceFilters: []components.FacetFilter{
						components.FacetFilter{
							FieldName: types.String("type"),
							Values: []components.FacetFilterValue{
								components.FacetFilterValue{
									Value:        types.String("Spreadsheet"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
								components.FacetFilterValue{
									Value:        types.String("Presentation"),
									RelationType: components.RelationTypeEquals.ToPointer(),
								},
							},
						},
					},
					ID: 937182,
					Creator: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				Code: &components.Code{
					RepoName: types.String("scio"),
					FileName: types.String("README.md"),
				},
				Shortcut: &components.Shortcut{
					InputAlias: "<value>",
					CreatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					UpdatedBy: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							QuerySuggestions: &components.QuerySuggestionList{},
							InviteInfo:       &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
					DestinationDocument: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateUnverified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 300798,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				QuerySuggestions: &components.QuerySuggestionList{
					Person: &components.Person{
						Name:         "George Clooney",
						ObfuscatedID: "abc123",
						Metadata: &components.PersonMetadata{
							Type:       components.PersonMetadataTypeFullTime.ToPointer(),
							Title:      types.String("Actor"),
							Department: types.String("Movies"),
							Email:      types.String("george@example.com"),
							Location:   types.String("Hollywood, CA"),
							Phone:      types.String("6505551234"),
							PhotoURL:   types.String("https://example.com/george.jpg"),
							StartDate:  types.MustNewDateFromString("2000-01-23"),
							DatasourceProfile: []components.DatasourceProfile{
								components.DatasourceProfile{
									Datasource: "github",
									Handle:     "<value>",
								},
							},
							InviteInfo: &components.InviteInfo{},
							Badges: []components.Badge{
								components.Badge{
									Key:         types.String("deployment_name_new_hire"),
									DisplayName: types.String("New hire"),
									IconConfig: &components.IconConfig{
										Color:    types.String("#343CED"),
										Key:      types.String("person_icon"),
										IconType: components.IconTypeGlyph.ToPointer(),
										Name:     types.String("user"),
									},
								},
							},
						},
					},
				},
				RelatedQuestion: &components.RelatedQuestion{},
			},
		},
		GeneratedQnaResult: &components.GeneratedQna{
			Ranges: []components.TextRange{
				components.TextRange{
					StartIndex: 475135,
					Document: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateDeprecated,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 932133,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				components.TextRange{
					StartIndex: 134908,
					Document: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateVerified,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 821918,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
				components.TextRange{
					StartIndex: 667484,
					Document: &components.Document{
						Metadata: &components.DocumentMetadata{
							Datasource: types.String("datasource"),
							ObjectType: types.String("Feature Request"),
							Container:  types.String("container"),
							ParentID:   types.String("JIRA_EN-1337"),
							MimeType:   types.String("mimeType"),
							DocumentID: types.String("documentId"),
							CreateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							UpdateTime: types.MustNewTimeFromString("2000-01-23T04:56:07.000Z"),
							Author: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Owner: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Components: []string{
								"Backend",
								"Networking",
							},
							Status: types.String("[\"Done\"]"),
							AssignedTo: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							UpdatedBy: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
							Interactions: &components.DocumentInteractions{},
							Verification: &components.Verification{
								State: components.StateDeprecated,
								Metadata: &components.VerificationMetadata{
									LastVerifier: &components.Person{
										Name:         "George Clooney",
										ObfuscatedID: "abc123",
										Metadata: &components.PersonMetadata{
											Type:       components.PersonMetadataTypeFullTime.ToPointer(),
											Title:      types.String("Actor"),
											Department: types.String("Movies"),
											Email:      types.String("george@example.com"),
											Location:   types.String("Hollywood, CA"),
											Phone:      types.String("6505551234"),
											PhotoURL:   types.String("https://example.com/george.jpg"),
											StartDate:  types.MustNewDateFromString("2000-01-23"),
											DatasourceProfile: []components.DatasourceProfile{
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
												components.DatasourceProfile{
													Datasource: "github",
													Handle:     "<value>",
												},
											},
											QuerySuggestions: &components.QuerySuggestionList{},
											InviteInfo:       &components.InviteInfo{},
											Badges: []components.Badge{
												components.Badge{
													Key:         types.String("deployment_name_new_hire"),
													DisplayName: types.String("New hire"),
													IconConfig: &components.IconConfig{
														Color:    types.String("#343CED"),
														Key:      types.String("person_icon"),
														IconType: components.IconTypeGlyph.ToPointer(),
														Name:     types.String("user"),
													},
												},
											},
										},
									},
									LastReminder: &components.Reminder{
										Assignee: components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										Requestor: &components.Person{
											Name:         "George Clooney",
											ObfuscatedID: "abc123",
											Metadata: &components.PersonMetadata{
												Type:       components.PersonMetadataTypeFullTime.ToPointer(),
												Title:      types.String("Actor"),
												Department: types.String("Movies"),
												Email:      types.String("george@example.com"),
												Location:   types.String("Hollywood, CA"),
												Phone:      types.String("6505551234"),
												PhotoURL:   types.String("https://example.com/george.jpg"),
												StartDate:  types.MustNewDateFromString("2000-01-23"),
												DatasourceProfile: []components.DatasourceProfile{
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
													components.DatasourceProfile{
														Datasource: "github",
														Handle:     "<value>",
													},
												},
												QuerySuggestions: &components.QuerySuggestionList{},
												InviteInfo:       &components.InviteInfo{},
												Badges: []components.Badge{
													components.Badge{
														Key:         types.String("deployment_name_new_hire"),
														DisplayName: types.String("New hire"),
														IconConfig: &components.IconConfig{
															Color:    types.String("#343CED"),
															Key:      types.String("person_icon"),
															IconType: components.IconTypeGlyph.ToPointer(),
															Name:     types.String("user"),
														},
													},
												},
											},
										},
										RemindAt: 827395,
									},
								},
							},
							CustomData: map[string]components.CustomDataValue{
								"someCustomField": components.CustomDataValue{},
							},
							ContactPerson: &components.Person{
								Name:         "George Clooney",
								ObfuscatedID: "abc123",
								Metadata: &components.PersonMetadata{
									Type:       components.PersonMetadataTypeFullTime.ToPointer(),
									Title:      types.String("Actor"),
									Department: types.String("Movies"),
									Email:      types.String("george@example.com"),
									Location:   types.String("Hollywood, CA"),
									Phone:      types.String("6505551234"),
									PhotoURL:   types.String("https://example.com/george.jpg"),
									StartDate:  types.MustNewDateFromString("2000-01-23"),
									DatasourceProfile: []components.DatasourceProfile{
										components.DatasourceProfile{
											Datasource: "github",
											Handle:     "<value>",
										},
									},
									QuerySuggestions: &components.QuerySuggestionList{},
									InviteInfo:       &components.InviteInfo{},
									Badges: []components.Badge{
										components.Badge{
											Key:         types.String("deployment_name_new_hire"),
											DisplayName: types.String("New hire"),
											IconConfig: &components.IconConfig{
												Color:    types.String("#343CED"),
												Key:      types.String("person_icon"),
												IconType: components.IconTypeGlyph.ToPointer(),
												Name:     types.String("user"),
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		BackendTimeMillis: types.Int64(1100),
	}
	respBodyBytes, err := utils.MarshalJSON(respBody, "", true)

	if err != nil {
		http.Error(
			w,
			"Unable to encode response body as JSON: "+err.Error(),
			http.StatusInternalServerError,
		)
		return
	}
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(http.StatusOK)
	_, _ = w.Write(respBodyBytes)
}
