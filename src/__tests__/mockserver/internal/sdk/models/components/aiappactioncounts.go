// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
)

// AiAppActionCounts - Map from action to frequency.
type AiAppActionCounts struct {
	// Total number of Slackbot responses, both proactive and reactive.
	TotalSlackbotResponses *int64 `json:"totalSlackbotResponses,omitempty"`
	// Total number of Slackbot responses shared publicly (upvoted).
	TotalSlackbotResponsesShared *int64 `json:"totalSlackbotResponsesShared,omitempty"`
	// Total number of Slackbot responses rejected as not helpful (downvoted).
	TotalSlackbotResponsesNotHelpful *int64 `json:"totalSlackbotResponsesNotHelpful,omitempty"`
	// Total number of Chat messages sent in requested period.
	TotalChatMessages *int64 `json:"totalChatMessages,omitempty"`
	// Total number of Chat messages which received upvotes by the user.
	TotalUpvotes *int64 `json:"totalUpvotes,omitempty"`
	// Total number of Chat messages which received downvotes by the user.
	TotalDownvotes       *int64           `json:"totalDownvotes,omitempty"`
	AdditionalProperties map[string]int64 `additionalProperties:"true" json:"-"`
}

func (a AiAppActionCounts) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AiAppActionCounts) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AiAppActionCounts) GetTotalSlackbotResponses() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalSlackbotResponses
}

func (o *AiAppActionCounts) GetTotalSlackbotResponsesShared() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalSlackbotResponsesShared
}

func (o *AiAppActionCounts) GetTotalSlackbotResponsesNotHelpful() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalSlackbotResponsesNotHelpful
}

func (o *AiAppActionCounts) GetTotalChatMessages() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalChatMessages
}

func (o *AiAppActionCounts) GetTotalUpvotes() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalUpvotes
}

func (o *AiAppActionCounts) GetTotalDownvotes() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalDownvotes
}

func (o *AiAppActionCounts) GetAdditionalProperties() map[string]int64 {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}
