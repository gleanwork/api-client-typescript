// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type AiAppsInsightsResponse struct {
	// Unix timestamp of the last activity processed to make the response (in seconds since epoch UTC).
	LastLogTimestamp *int64                `json:"lastLogTimestamp,omitempty"`
	AiAppInsights    []UserActivityInsight `json:"aiAppInsights,omitempty"`
	// Total number of active users on the Ai App in the requested period.
	TotalActiveUsers *int64 `json:"totalActiveUsers,omitempty"`
	// Map from action to frequency.
	ActionCounts *AiAppActionCounts `json:"actionCounts,omitempty"`
	// list of departments applicable for users tab.
	Departments []string `json:"departments,omitempty"`
}

func (o *AiAppsInsightsResponse) GetLastLogTimestamp() *int64 {
	if o == nil {
		return nil
	}
	return o.LastLogTimestamp
}

func (o *AiAppsInsightsResponse) GetAiAppInsights() []UserActivityInsight {
	if o == nil {
		return nil
	}
	return o.AiAppInsights
}

func (o *AiAppsInsightsResponse) GetTotalActiveUsers() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalActiveUsers
}

func (o *AiAppsInsightsResponse) GetActionCounts() *AiAppActionCounts {
	if o == nil {
		return nil
	}
	return o.ActionCounts
}

func (o *AiAppsInsightsResponse) GetDepartments() []string {
	if o == nil {
		return nil
	}
	return o.Departments
}
