// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type AnnouncementErrorErrorType string

const (
	AnnouncementErrorErrorTypeInvalidID AnnouncementErrorErrorType = "INVALID_ID"
)

func (e AnnouncementErrorErrorType) ToPointer() *AnnouncementErrorErrorType {
	return &e
}
func (e *AnnouncementErrorErrorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVALID_ID":
		*e = AnnouncementErrorErrorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnnouncementErrorErrorType: %v", v)
	}
}

type AnnouncementError struct {
	ErrorType *AnnouncementErrorErrorType `json:"errorType,omitempty"`
}

func (o *AnnouncementError) GetErrorType() *AnnouncementErrorErrorType {
	if o == nil {
		return nil
	}
	return o.ErrorType
}
