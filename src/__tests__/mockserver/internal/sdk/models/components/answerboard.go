// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type AnswerBoard struct {
	// The unique name of the Collection.
	Name string `json:"name"`
	// A brief summary of the Collection's contents.
	Description string `json:"description"`
	// A list of added user roles for the Collection.
	AddedRoles []UserRoleSpecification `json:"addedRoles,omitempty"`
	// A list of removed user roles for the Collection.
	RemovedRoles []UserRoleSpecification `json:"removedRoles,omitempty"`
	// Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
	AudienceFilters []FacetFilter      `json:"audienceFilters,omitempty"`
	Permissions     *ObjectPermissions `json:"permissions,omitempty"`
	// The unique ID of the Answer Board.
	ID         int64      `json:"id"`
	CreateTime *time.Time `json:"createTime,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	Creator    *Person    `json:"creator,omitempty"`
	UpdatedBy  *Person    `json:"updatedBy,omitempty"`
	// The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
	ItemCount *int64 `json:"itemCount,omitempty"`
	// A list of user roles for the Answer Board.
	Roles []UserRoleSpecification `json:"roles,omitempty"`
}

func (a AnswerBoard) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AnswerBoard) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AnswerBoard) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AnswerBoard) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *AnswerBoard) GetAddedRoles() []UserRoleSpecification {
	if o == nil {
		return nil
	}
	return o.AddedRoles
}

func (o *AnswerBoard) GetRemovedRoles() []UserRoleSpecification {
	if o == nil {
		return nil
	}
	return o.RemovedRoles
}

func (o *AnswerBoard) GetAudienceFilters() []FacetFilter {
	if o == nil {
		return nil
	}
	return o.AudienceFilters
}

func (o *AnswerBoard) GetPermissions() *ObjectPermissions {
	if o == nil {
		return nil
	}
	return o.Permissions
}

func (o *AnswerBoard) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *AnswerBoard) GetCreateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreateTime
}

func (o *AnswerBoard) GetUpdateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdateTime
}

func (o *AnswerBoard) GetCreator() *Person {
	if o == nil {
		return nil
	}
	return o.Creator
}

func (o *AnswerBoard) GetUpdatedBy() *Person {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *AnswerBoard) GetItemCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ItemCount
}

func (o *AnswerBoard) GetRoles() []UserRoleSpecification {
	if o == nil {
		return nil
	}
	return o.Roles
}
