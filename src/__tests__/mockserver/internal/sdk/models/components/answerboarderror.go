// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type AnswerBoardErrorErrorCode string

const (
	AnswerBoardErrorErrorCodeNameExists    AnswerBoardErrorErrorCode = "NAME_EXISTS"
	AnswerBoardErrorErrorCodeNotFound      AnswerBoardErrorErrorCode = "NOT_FOUND"
	AnswerBoardErrorErrorCodeNoPermissions AnswerBoardErrorErrorCode = "NO_PERMISSIONS"
)

func (e AnswerBoardErrorErrorCode) ToPointer() *AnswerBoardErrorErrorCode {
	return &e
}
func (e *AnswerBoardErrorErrorCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NAME_EXISTS":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "NO_PERMISSIONS":
		*e = AnswerBoardErrorErrorCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnswerBoardErrorErrorCode: %v", v)
	}
}

type AnswerBoardError struct {
	ErrorCode AnswerBoardErrorErrorCode `json:"errorCode"`
}

func (o *AnswerBoardError) GetErrorCode() AnswerBoardErrorErrorCode {
	if o == nil {
		return AnswerBoardErrorErrorCode("")
	}
	return o.ErrorCode
}
