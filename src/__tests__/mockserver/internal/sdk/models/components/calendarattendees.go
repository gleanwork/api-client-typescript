// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type CalendarAttendees struct {
	// Full details of some of the attendees of this event
	People []CalendarAttendee `json:"people,omitempty"`
	// Whether the total count of the people returned is at the retrieval limit.
	IsLimit *bool `json:"isLimit,omitempty"`
	// Total number of attendees in this event.
	Total *int64 `json:"total,omitempty"`
	// Total number of attendees who have accepted this event.
	NumAccepted *int64 `json:"numAccepted,omitempty"`
	// Total number of attendees who have declined this event.
	NumDeclined *int64 `json:"numDeclined,omitempty"`
	// Total number of attendees who have not responded to this event.
	NumNoResponse *int64 `json:"numNoResponse,omitempty"`
	// Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
	NumTentative *int64 `json:"numTentative,omitempty"`
}

func (o *CalendarAttendees) GetPeople() []CalendarAttendee {
	if o == nil {
		return nil
	}
	return o.People
}

func (o *CalendarAttendees) GetIsLimit() *bool {
	if o == nil {
		return nil
	}
	return o.IsLimit
}

func (o *CalendarAttendees) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *CalendarAttendees) GetNumAccepted() *int64 {
	if o == nil {
		return nil
	}
	return o.NumAccepted
}

func (o *CalendarAttendees) GetNumDeclined() *int64 {
	if o == nil {
		return nil
	}
	return o.NumDeclined
}

func (o *CalendarAttendees) GetNumNoResponse() *int64 {
	if o == nil {
		return nil
	}
	return o.NumNoResponse
}

func (o *CalendarAttendees) GetNumTentative() *int64 {
	if o == nil {
		return nil
	}
	return o.NumTentative
}
