// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// ChannelInviteInfo - Information regarding the invite status of a person for a particular channel.
type ChannelInviteInfo struct {
	Channel *CommunicationChannel `json:"channel,omitempty"`
	// Bit that tracks if this invite was automatically sent or user-sent
	IsAutoInvite *bool   `json:"isAutoInvite,omitempty"`
	Inviter      *Person `json:"inviter,omitempty"`
	// The time this person was invited in ISO format (ISO 8601).
	InviteTime *time.Time `json:"inviteTime,omitempty"`
	// The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
	ReminderTime *time.Time `json:"reminderTime,omitempty"`
}

func (c ChannelInviteInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChannelInviteInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ChannelInviteInfo) GetChannel() *CommunicationChannel {
	if o == nil {
		return nil
	}
	return o.Channel
}

func (o *ChannelInviteInfo) GetIsAutoInvite() *bool {
	if o == nil {
		return nil
	}
	return o.IsAutoInvite
}

func (o *ChannelInviteInfo) GetInviter() *Person {
	if o == nil {
		return nil
	}
	return o.Inviter
}

func (o *ChannelInviteInfo) GetInviteTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.InviteTime
}

func (o *ChannelInviteInfo) GetReminderTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.ReminderTime
}
