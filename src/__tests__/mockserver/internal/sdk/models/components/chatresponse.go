// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// ChatResponse - A single response from the /chat backend.
type ChatResponse struct {
	Messages []ChatMessage `json:"messages,omitempty"`
	// The id of the associated Chat the messages belong to, if one exists.
	ChatID *string `json:"chatId,omitempty"`
	// Follow-up prompts for the user to potentially use
	FollowUpPrompts []string `json:"followUpPrompts,omitempty"`
	// Time in milliseconds the backend took to respond to the request.
	BackendTimeMillis *int64 `json:"backendTimeMillis,omitempty"`
	// A token that is used to track the session.
	ChatSessionTrackingToken *string `json:"chatSessionTrackingToken,omitempty"`
}

func (o *ChatResponse) GetMessages() []ChatMessage {
	if o == nil {
		return nil
	}
	return o.Messages
}

func (o *ChatResponse) GetChatID() *string {
	if o == nil {
		return nil
	}
	return o.ChatID
}

func (o *ChatResponse) GetFollowUpPrompts() []string {
	if o == nil {
		return nil
	}
	return o.FollowUpPrompts
}

func (o *ChatResponse) GetBackendTimeMillis() *int64 {
	if o == nil {
		return nil
	}
	return o.BackendTimeMillis
}

func (o *ChatResponse) GetChatSessionTrackingToken() *string {
	if o == nil {
		return nil
	}
	return o.ChatSessionTrackingToken
}
