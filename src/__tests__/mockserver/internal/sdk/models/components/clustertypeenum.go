// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ClusterTypeEnum - The reason for inclusion of clusteredResults.
type ClusterTypeEnum string

const (
	ClusterTypeEnumSimilar     ClusterTypeEnum = "SIMILAR"
	ClusterTypeEnumFreshness   ClusterTypeEnum = "FRESHNESS"
	ClusterTypeEnumTitle       ClusterTypeEnum = "TITLE"
	ClusterTypeEnumContent     ClusterTypeEnum = "CONTENT"
	ClusterTypeEnumNone        ClusterTypeEnum = "NONE"
	ClusterTypeEnumThreadReply ClusterTypeEnum = "THREAD_REPLY"
	ClusterTypeEnumThreadRoot  ClusterTypeEnum = "THREAD_ROOT"
	ClusterTypeEnumPrefix      ClusterTypeEnum = "PREFIX"
	ClusterTypeEnumSuffix      ClusterTypeEnum = "SUFFIX"
)

func (e ClusterTypeEnum) ToPointer() *ClusterTypeEnum {
	return &e
}
func (e *ClusterTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIMILAR":
		fallthrough
	case "FRESHNESS":
		fallthrough
	case "TITLE":
		fallthrough
	case "CONTENT":
		fallthrough
	case "NONE":
		fallthrough
	case "THREAD_REPLY":
		fallthrough
	case "THREAD_ROOT":
		fallthrough
	case "PREFIX":
		fallthrough
	case "SUFFIX":
		*e = ClusterTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterTypeEnum: %v", v)
	}
}
