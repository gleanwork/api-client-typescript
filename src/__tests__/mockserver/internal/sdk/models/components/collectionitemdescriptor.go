// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CollectionItemDescriptorItemType string

const (
	CollectionItemDescriptorItemTypeDocument CollectionItemDescriptorItemType = "DOCUMENT"
	CollectionItemDescriptorItemTypeText     CollectionItemDescriptorItemType = "TEXT"
	CollectionItemDescriptorItemTypeURL      CollectionItemDescriptorItemType = "URL"
)

func (e CollectionItemDescriptorItemType) ToPointer() *CollectionItemDescriptorItemType {
	return &e
}
func (e *CollectionItemDescriptorItemType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOCUMENT":
		fallthrough
	case "TEXT":
		fallthrough
	case "URL":
		*e = CollectionItemDescriptorItemType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CollectionItemDescriptorItemType: %v", v)
	}
}

type CollectionItemDescriptor struct {
	// The optional name of the Collection item.
	Name *string `json:"name,omitempty"`
	// A helpful description of why this CollectionItem is in the Collection that it's in.
	Description *string `json:"description,omitempty"`
	// The emoji icon for this CollectionItem. Only used for Text type items.
	Icon *string `json:"icon,omitempty"`
	// The URL of the item being added.
	URL *string `json:"url,omitempty"`
	// The Glean Document ID of the item being added if it's an indexed document.
	DocumentID *string `json:"documentId,omitempty"`
	// The (optional) ItemId of the next CollectionItem in sequence. If omitted, will be added to the end of the Collection
	NewNextItemID *string                           `json:"newNextItemId,omitempty"`
	ItemType      *CollectionItemDescriptorItemType `json:"itemType,omitempty"`
}

func (o *CollectionItemDescriptor) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CollectionItemDescriptor) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CollectionItemDescriptor) GetIcon() *string {
	if o == nil {
		return nil
	}
	return o.Icon
}

func (o *CollectionItemDescriptor) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *CollectionItemDescriptor) GetDocumentID() *string {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *CollectionItemDescriptor) GetNewNextItemID() *string {
	if o == nil {
		return nil
	}
	return o.NewNextItemID
}

func (o *CollectionItemDescriptor) GetItemType() *CollectionItemDescriptorItemType {
	if o == nil {
		return nil
	}
	return o.ItemType
}
