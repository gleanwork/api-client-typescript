// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CommentDefinition - Describes a comment on a document
type CommentDefinition struct {
	// The document specific id for the comment. This field is case insensitive and should not be more than 200 characters in length.
	ID string `json:"id"`
	// Describes how a user is referenced in a document. The user can be referenced by email or by a datasource specific id.
	Author *UserReferenceDefinition `json:"author,omitempty"`
	// Describes text content or base64 encoded binary content
	Content *ContentDefinition `json:"content,omitempty"`
	// The creation time, in epoch seconds.
	CreatedAt *int64 `json:"createdAt,omitempty"`
	// The last updated time, in epoch seconds.
	UpdatedAt *int64 `json:"updatedAt,omitempty"`
	// Describes how a user is referenced in a document. The user can be referenced by email or by a datasource specific id.
	UpdatedBy *UserReferenceDefinition `json:"updatedBy,omitempty"`
}

func (o *CommentDefinition) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CommentDefinition) GetAuthor() *UserReferenceDefinition {
	if o == nil {
		return nil
	}
	return o.Author
}

func (o *CommentDefinition) GetContent() *ContentDefinition {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *CommentDefinition) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CommentDefinition) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *CommentDefinition) GetUpdatedBy() *UserReferenceDefinition {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}
