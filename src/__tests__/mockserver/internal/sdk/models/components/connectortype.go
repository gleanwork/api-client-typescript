// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ConnectorType - The source from which document content was pulled, e.g. an API crawl or browser history
type ConnectorType string

const (
	ConnectorTypeAPICrawl        ConnectorType = "API_CRAWL"
	ConnectorTypeBrowserCrawl    ConnectorType = "BROWSER_CRAWL"
	ConnectorTypeBrowserHistory  ConnectorType = "BROWSER_HISTORY"
	ConnectorTypeBuiltin         ConnectorType = "BUILTIN"
	ConnectorTypeFederatedSearch ConnectorType = "FEDERATED_SEARCH"
	ConnectorTypePushAPI         ConnectorType = "PUSH_API"
	ConnectorTypeWebCrawl        ConnectorType = "WEB_CRAWL"
	ConnectorTypeNativeHistory   ConnectorType = "NATIVE_HISTORY"
)

func (e ConnectorType) ToPointer() *ConnectorType {
	return &e
}
func (e *ConnectorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "API_CRAWL":
		fallthrough
	case "BROWSER_CRAWL":
		fallthrough
	case "BROWSER_HISTORY":
		fallthrough
	case "BUILTIN":
		fallthrough
	case "FEDERATED_SEARCH":
		fallthrough
	case "PUSH_API":
		fallthrough
	case "WEB_CRAWL":
		fallthrough
	case "NATIVE_HISTORY":
		*e = ConnectorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectorType: %v", v)
	}
}
