// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type DeleteQueryHistoryErrorErrorType string

const (
	DeleteQueryHistoryErrorErrorTypeDeletionFailed DeleteQueryHistoryErrorErrorType = "DELETION_FAILED"
)

func (e DeleteQueryHistoryErrorErrorType) ToPointer() *DeleteQueryHistoryErrorErrorType {
	return &e
}
func (e *DeleteQueryHistoryErrorErrorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DELETION_FAILED":
		*e = DeleteQueryHistoryErrorErrorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteQueryHistoryErrorErrorType: %v", v)
	}
}

type DeleteQueryHistoryError struct {
	ErrorType *DeleteQueryHistoryErrorErrorType `json:"errorType,omitempty"`
}

func (o *DeleteQueryHistoryError) GetErrorType() *DeleteQueryHistoryErrorErrorType {
	if o == nil {
		return nil
	}
	return o.ErrorType
}
