// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// DisplayableListConfigFormat - defines how to render this particular displayable list card
type DisplayableListConfigFormat string

const (
	DisplayableListConfigFormatList DisplayableListConfigFormat = "LIST"
)

func (e DisplayableListConfigFormat) ToPointer() *DisplayableListConfigFormat {
	return &e
}
func (e *DisplayableListConfigFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LIST":
		*e = DisplayableListConfigFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisplayableListConfigFormat: %v", v)
	}
}

// DisplayableListConfig - UI specific configurations for a displayable list
type DisplayableListConfig struct {
	// defines how to render this particular displayable list card
	Format *DisplayableListConfigFormat `json:"format,omitempty"`
	// Primary title for the list.
	Title *string `json:"title,omitempty"`
	// Whether the list should be shown to the user
	Enabled *bool `json:"enabled,omitempty"`
	// Filters which restrict who should should see displayable list
	AudienceFilters []FacetFilter `json:"audienceFilters,omitempty"`
	// UI configurations for each item of the list
	ItemUIConfig *DisplayableListItemUIConfig `json:"itemUIConfig,omitempty"`
}

func (o *DisplayableListConfig) GetFormat() *DisplayableListConfigFormat {
	if o == nil {
		return nil
	}
	return o.Format
}

func (o *DisplayableListConfig) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *DisplayableListConfig) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *DisplayableListConfig) GetAudienceFilters() []FacetFilter {
	if o == nil {
		return nil
	}
	return o.AudienceFilters
}

func (o *DisplayableListConfig) GetItemUIConfig() *DisplayableListItemUIConfig {
	if o == nil {
		return nil
	}
	return o.ItemUIConfig
}
