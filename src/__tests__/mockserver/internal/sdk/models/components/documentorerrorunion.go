// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type DocumentOrError struct {
	// The text for error, reason.
	Error *string `json:"error,omitempty"`
}

func (o *DocumentOrError) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

type DocumentOrErrorUnionType string

const (
	DocumentOrErrorUnionTypeDocument        DocumentOrErrorUnionType = "Document"
	DocumentOrErrorUnionTypeDocumentOrError DocumentOrErrorUnionType = "DocumentOrError"
)

type DocumentOrErrorUnion struct {
	Document        *Document
	DocumentOrError *DocumentOrError

	Type DocumentOrErrorUnionType
}

func CreateDocumentOrErrorUnionDocument(document Document) DocumentOrErrorUnion {
	typ := DocumentOrErrorUnionTypeDocument

	return DocumentOrErrorUnion{
		Document: &document,
		Type:     typ,
	}
}

func CreateDocumentOrErrorUnionDocumentOrError(documentOrError DocumentOrError) DocumentOrErrorUnion {
	typ := DocumentOrErrorUnionTypeDocumentOrError

	return DocumentOrErrorUnion{
		DocumentOrError: &documentOrError,
		Type:            typ,
	}
}

func (u *DocumentOrErrorUnion) UnmarshalJSON(data []byte) error {

	var documentOrError DocumentOrError = DocumentOrError{}
	if err := utils.UnmarshalJSON(data, &documentOrError, "", true, true); err == nil {
		u.DocumentOrError = &documentOrError
		u.Type = DocumentOrErrorUnionTypeDocumentOrError
		return nil
	}

	var document Document = Document{}
	if err := utils.UnmarshalJSON(data, &document, "", true, true); err == nil {
		u.Document = &document
		u.Type = DocumentOrErrorUnionTypeDocument
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for DocumentOrErrorUnion", string(data))
}

func (u DocumentOrErrorUnion) MarshalJSON() ([]byte, error) {
	if u.Document != nil {
		return utils.MarshalJSON(u.Document, "", true)
	}

	if u.DocumentOrError != nil {
		return utils.MarshalJSON(u.DocumentOrError, "", true)
	}

	return nil, errors.New("could not marshal union type DocumentOrErrorUnion: all fields are null")
}
