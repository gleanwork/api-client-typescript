// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// DocumentPermissionsDefinition - describes the access control details of the document
type DocumentPermissionsDefinition struct {
	// List of users who can view the document
	AllowedUsers []UserReferenceDefinition `json:"allowedUsers,omitempty"`
	// List of groups that can view the document
	AllowedGroups []string `json:"allowedGroups,omitempty"`
	// List of allowed group intersections. This describes a permissions constraint of the form ((GroupA AND GroupB AND GroupC) OR (GroupX AND GroupY) OR ...
	AllowedGroupIntersections []PermissionsGroupIntersectionDefinition `json:"allowedGroupIntersections,omitempty"`
	// If true, then any Glean user can view the document
	AllowAnonymousAccess *bool `json:"allowAnonymousAccess,omitempty"`
	// If true, then any user who has an account in the datasource can view the document.
	AllowAllDatasourceUsersAccess *bool `json:"allowAllDatasourceUsersAccess,omitempty"`
}

func (o *DocumentPermissionsDefinition) GetAllowedUsers() []UserReferenceDefinition {
	if o == nil {
		return nil
	}
	return o.AllowedUsers
}

func (o *DocumentPermissionsDefinition) GetAllowedGroups() []string {
	if o == nil {
		return nil
	}
	return o.AllowedGroups
}

func (o *DocumentPermissionsDefinition) GetAllowedGroupIntersections() []PermissionsGroupIntersectionDefinition {
	if o == nil {
		return nil
	}
	return o.AllowedGroupIntersections
}

func (o *DocumentPermissionsDefinition) GetAllowAnonymousAccess() *bool {
	if o == nil {
		return nil
	}
	return o.AllowAnonymousAccess
}

func (o *DocumentPermissionsDefinition) GetAllowAllDatasourceUsersAccess() *bool {
	if o == nil {
		return nil
	}
	return o.AllowAllDatasourceUsersAccess
}
