// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// EventStrategyName - The name of method used to surface relevant data for a given calendar event.
type EventStrategyName string

const (
	EventStrategyNameCustomerCard      EventStrategyName = "customerCard"
	EventStrategyNameNews              EventStrategyName = "news"
	EventStrategyNameCall              EventStrategyName = "call"
	EventStrategyNameEmail             EventStrategyName = "email"
	EventStrategyNameMeetingNotes      EventStrategyName = "meetingNotes"
	EventStrategyNameLinkedIn          EventStrategyName = "linkedIn"
	EventStrategyNameRelevantDocuments EventStrategyName = "relevantDocuments"
	EventStrategyNameChatFollowUps     EventStrategyName = "chatFollowUps"
	EventStrategyNameConversations     EventStrategyName = "conversations"
)

func (e EventStrategyName) ToPointer() *EventStrategyName {
	return &e
}
func (e *EventStrategyName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "customerCard":
		fallthrough
	case "news":
		fallthrough
	case "call":
		fallthrough
	case "email":
		fallthrough
	case "meetingNotes":
		fallthrough
	case "linkedIn":
		fallthrough
	case "relevantDocuments":
		fallthrough
	case "chatFollowUps":
		fallthrough
	case "conversations":
		*e = EventStrategyName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventStrategyName: %v", v)
	}
}
