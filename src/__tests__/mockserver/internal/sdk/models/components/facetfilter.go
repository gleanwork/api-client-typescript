// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type FacetFilter struct {
	FieldName *string `json:"fieldName,omitempty"`
	// Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
	Values []FacetFilterValue `json:"values,omitempty"`
	// Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
	GroupName *string `json:"groupName,omitempty"`
}

func (o *FacetFilter) GetFieldName() *string {
	if o == nil {
		return nil
	}
	return o.FieldName
}

func (o *FacetFilter) GetValues() []FacetFilterValue {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *FacetFilter) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}
