// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type FacetResult struct {
	// The source of this facet (e.g. container_name, type, last_updated_at).
	SourceName *string `json:"sourceName,omitempty"`
	// How to display this facet. Currently supportes 'SelectSingle' and 'SelectMultiple'.
	OperatorName *string `json:"operatorName,omitempty"`
	// A list of unique buckets that exist within this result set.
	Buckets []FacetBucket `json:"buckets,omitempty"`
	// Returns true if more buckets exist than those returned. Additional buckets can be retrieve by requesting again with a higher facetBucketSize.
	HasMoreBuckets *bool `json:"hasMoreBuckets,omitempty"`
	// For most facets this will be the empty string, meaning the facet is high-level and applies to all documents for the datasource. When non-empty, this is used to group facets together (i.e. group facets for each doctype for a certain datasource)
	GroupName *string `json:"groupName,omitempty"`
}

func (o *FacetResult) GetSourceName() *string {
	if o == nil {
		return nil
	}
	return o.SourceName
}

func (o *FacetResult) GetOperatorName() *string {
	if o == nil {
		return nil
	}
	return o.OperatorName
}

func (o *FacetResult) GetBuckets() []FacetBucket {
	if o == nil {
		return nil
	}
	return o.Buckets
}

func (o *FacetResult) GetHasMoreBuckets() *bool {
	if o == nil {
		return nil
	}
	return o.HasMoreBuckets
}

func (o *FacetResult) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}
