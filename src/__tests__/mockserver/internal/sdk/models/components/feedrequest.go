// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type FeedRequestCategory string

const (
	FeedRequestCategoryDocumentSuggestion           FeedRequestCategory = "DOCUMENT_SUGGESTION"
	FeedRequestCategoryDocumentSuggestionScenario   FeedRequestCategory = "DOCUMENT_SUGGESTION_SCENARIO"
	FeedRequestCategoryTrendingDocument             FeedRequestCategory = "TRENDING_DOCUMENT"
	FeedRequestCategoryVerificationReminder         FeedRequestCategory = "VERIFICATION_REMINDER"
	FeedRequestCategoryEvent                        FeedRequestCategory = "EVENT"
	FeedRequestCategoryAnnouncement                 FeedRequestCategory = "ANNOUNCEMENT"
	FeedRequestCategoryMention                      FeedRequestCategory = "MENTION"
	FeedRequestCategoryDatasourceAffinity           FeedRequestCategory = "DATASOURCE_AFFINITY"
	FeedRequestCategoryRecent                       FeedRequestCategory = "RECENT"
	FeedRequestCategoryCompanyResource              FeedRequestCategory = "COMPANY_RESOURCE"
	FeedRequestCategoryExperimental                 FeedRequestCategory = "EXPERIMENTAL"
	FeedRequestCategoryPeopleCelebrations           FeedRequestCategory = "PEOPLE_CELEBRATIONS"
	FeedRequestCategoryDisplayableList              FeedRequestCategory = "DISPLAYABLE_LIST"
	FeedRequestCategorySocialLink                   FeedRequestCategory = "SOCIAL_LINK"
	FeedRequestCategoryExternalTasks                FeedRequestCategory = "EXTERNAL_TASKS"
	FeedRequestCategoryZeroStateChatSuggestion      FeedRequestCategory = "ZERO_STATE_CHAT_SUGGESTION"
	FeedRequestCategoryZeroStateChatToolSuggestion  FeedRequestCategory = "ZERO_STATE_CHAT_TOOL_SUGGESTION"
	FeedRequestCategoryZeroStateWorkflowCreatedByMe FeedRequestCategory = "ZERO_STATE_WORKFLOW_CREATED_BY_ME"
	FeedRequestCategoryZeroStateWorkflowFavorites   FeedRequestCategory = "ZERO_STATE_WORKFLOW_FAVORITES"
	FeedRequestCategoryZeroStateWorkflowPopular     FeedRequestCategory = "ZERO_STATE_WORKFLOW_POPULAR"
	FeedRequestCategoryZeroStateWorkflowSuggestion  FeedRequestCategory = "ZERO_STATE_WORKFLOW_SUGGESTION"
)

func (e FeedRequestCategory) ToPointer() *FeedRequestCategory {
	return &e
}
func (e *FeedRequestCategory) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOCUMENT_SUGGESTION":
		fallthrough
	case "DOCUMENT_SUGGESTION_SCENARIO":
		fallthrough
	case "TRENDING_DOCUMENT":
		fallthrough
	case "VERIFICATION_REMINDER":
		fallthrough
	case "EVENT":
		fallthrough
	case "ANNOUNCEMENT":
		fallthrough
	case "MENTION":
		fallthrough
	case "DATASOURCE_AFFINITY":
		fallthrough
	case "RECENT":
		fallthrough
	case "COMPANY_RESOURCE":
		fallthrough
	case "EXPERIMENTAL":
		fallthrough
	case "PEOPLE_CELEBRATIONS":
		fallthrough
	case "DISPLAYABLE_LIST":
		fallthrough
	case "SOCIAL_LINK":
		fallthrough
	case "EXTERNAL_TASKS":
		fallthrough
	case "ZERO_STATE_CHAT_SUGGESTION":
		fallthrough
	case "ZERO_STATE_CHAT_TOOL_SUGGESTION":
		fallthrough
	case "ZERO_STATE_WORKFLOW_CREATED_BY_ME":
		fallthrough
	case "ZERO_STATE_WORKFLOW_FAVORITES":
		fallthrough
	case "ZERO_STATE_WORKFLOW_POPULAR":
		fallthrough
	case "ZERO_STATE_WORKFLOW_SUGGESTION":
		*e = FeedRequestCategory(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeedRequestCategory: %v", v)
	}
}

type FeedRequest struct {
	// Categories of content requested. An allowlist gives flexibility to request content separately or together.
	Categories     []FeedRequestCategory `json:"categories,omitempty"`
	RequestOptions *FeedRequestOptions   `json:"requestOptions,omitempty"`
	// Timeout in milliseconds for the request. A `408` error will be returned if handling the request takes longer.
	TimeoutMillis *int64       `json:"timeoutMillis,omitempty"`
	SessionInfo   *SessionInfo `json:"sessionInfo,omitempty"`
}

func (o *FeedRequest) GetCategories() []FeedRequestCategory {
	if o == nil {
		return nil
	}
	return o.Categories
}

func (o *FeedRequest) GetRequestOptions() *FeedRequestOptions {
	if o == nil {
		return nil
	}
	return o.RequestOptions
}

func (o *FeedRequest) GetTimeoutMillis() *int64 {
	if o == nil {
		return nil
	}
	return o.TimeoutMillis
}

func (o *FeedRequest) GetSessionInfo() *SessionInfo {
	if o == nil {
		return nil
	}
	return o.SessionInfo
}
