// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type CategoryToResultSize struct {
	ResultSize *int64 `json:"resultSize,omitempty"`
}

func (o *CategoryToResultSize) GetResultSize() *int64 {
	if o == nil {
		return nil
	}
	return o.ResultSize
}

type FeedRequestOptions struct {
	// Number of results asked in response. If a result is a collection, counts as one.
	ResultSize int64 `json:"resultSize"`
	// The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
	TimezoneOffset *int64 `json:"timezoneOffset,omitempty"`
	// Mapping from category to number of results asked for the category.
	CategoryToResultSize map[string]CategoryToResultSize `json:"categoryToResultSize,omitempty"`
	// Datasources for which content should be included. Empty is for all.
	DatasourceFilter               []string                        `json:"datasourceFilter,omitempty"`
	ChatZeroStateSuggestionOptions *ChatZeroStateSuggestionOptions `json:"chatZeroStateSuggestionOptions,omitempty"`
}

func (o *FeedRequestOptions) GetResultSize() int64 {
	if o == nil {
		return 0
	}
	return o.ResultSize
}

func (o *FeedRequestOptions) GetTimezoneOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.TimezoneOffset
}

func (o *FeedRequestOptions) GetCategoryToResultSize() map[string]CategoryToResultSize {
	if o == nil {
		return nil
	}
	return o.CategoryToResultSize
}

func (o *FeedRequestOptions) GetDatasourceFilter() []string {
	if o == nil {
		return nil
	}
	return o.DatasourceFilter
}

func (o *FeedRequestOptions) GetChatZeroStateSuggestionOptions() *ChatZeroStateSuggestionOptions {
	if o == nil {
		return nil
	}
	return o.ChatZeroStateSuggestionOptions
}
