// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type FeedResponse struct {
	// List of experiment ids for the corresponding request.
	ExperimentIds []int64 `json:"experimentIds,omitempty"`
	// An opaque token that represents this particular feed response.
	TrackingToken *string `json:"trackingToken,omitempty"`
	// Server unix timestamp (in seconds since epoch UTC).
	ServerTimestamp int64        `json:"serverTimestamp"`
	Results         []FeedResult `json:"results,omitempty"`
	// Map from category to the list of facets that can be used to filter the entry's content.
	FacetResults map[string][]FacetResult `json:"facetResults,omitempty"`
	// The time window (in hours) used for generating user mentions.
	MentionsTimeWindowInHours *int64 `json:"mentionsTimeWindowInHours,omitempty"`
}

func (o *FeedResponse) GetExperimentIds() []int64 {
	if o == nil {
		return nil
	}
	return o.ExperimentIds
}

func (o *FeedResponse) GetTrackingToken() *string {
	if o == nil {
		return nil
	}
	return o.TrackingToken
}

func (o *FeedResponse) GetServerTimestamp() int64 {
	if o == nil {
		return 0
	}
	return o.ServerTimestamp
}

func (o *FeedResponse) GetResults() []FeedResult {
	if o == nil {
		return nil
	}
	return o.Results
}

func (o *FeedResponse) GetFacetResults() map[string][]FacetResult {
	if o == nil {
		return nil
	}
	return o.FacetResults
}

func (o *FeedResponse) GetMentionsTimeWindowInHours() *int64 {
	if o == nil {
		return nil
	}
	return o.MentionsTimeWindowInHours
}
