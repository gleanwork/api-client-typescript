// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// FeedResultCategory - Category of the result, one of the requested categories in incoming request.
type FeedResultCategory string

const (
	FeedResultCategoryDocumentSuggestion           FeedResultCategory = "DOCUMENT_SUGGESTION"
	FeedResultCategoryDocumentSuggestionScenario   FeedResultCategory = "DOCUMENT_SUGGESTION_SCENARIO"
	FeedResultCategoryTrendingDocument             FeedResultCategory = "TRENDING_DOCUMENT"
	FeedResultCategoryUseCase                      FeedResultCategory = "USE_CASE"
	FeedResultCategoryVerificationReminder         FeedResultCategory = "VERIFICATION_REMINDER"
	FeedResultCategoryEvent                        FeedResultCategory = "EVENT"
	FeedResultCategoryAnnouncement                 FeedResultCategory = "ANNOUNCEMENT"
	FeedResultCategoryMention                      FeedResultCategory = "MENTION"
	FeedResultCategoryDatasourceAffinity           FeedResultCategory = "DATASOURCE_AFFINITY"
	FeedResultCategoryRecent                       FeedResultCategory = "RECENT"
	FeedResultCategoryCompanyResource              FeedResultCategory = "COMPANY_RESOURCE"
	FeedResultCategoryExperimental                 FeedResultCategory = "EXPERIMENTAL"
	FeedResultCategoryPeopleCelebrations           FeedResultCategory = "PEOPLE_CELEBRATIONS"
	FeedResultCategorySocialLink                   FeedResultCategory = "SOCIAL_LINK"
	FeedResultCategoryExternalTasks                FeedResultCategory = "EXTERNAL_TASKS"
	FeedResultCategoryDisplayableList              FeedResultCategory = "DISPLAYABLE_LIST"
	FeedResultCategoryZeroStateChatSuggestion      FeedResultCategory = "ZERO_STATE_CHAT_SUGGESTION"
	FeedResultCategoryZeroStateChatToolSuggestion  FeedResultCategory = "ZERO_STATE_CHAT_TOOL_SUGGESTION"
	FeedResultCategoryZeroStateWorkflowCreatedByMe FeedResultCategory = "ZERO_STATE_WORKFLOW_CREATED_BY_ME"
	FeedResultCategoryZeroStateWorkflowFavorites   FeedResultCategory = "ZERO_STATE_WORKFLOW_FAVORITES"
	FeedResultCategoryZeroStateWorkflowPopular     FeedResultCategory = "ZERO_STATE_WORKFLOW_POPULAR"
	FeedResultCategoryZeroStateWorkflowSuggestion  FeedResultCategory = "ZERO_STATE_WORKFLOW_SUGGESTION"
)

func (e FeedResultCategory) ToPointer() *FeedResultCategory {
	return &e
}
func (e *FeedResultCategory) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOCUMENT_SUGGESTION":
		fallthrough
	case "DOCUMENT_SUGGESTION_SCENARIO":
		fallthrough
	case "TRENDING_DOCUMENT":
		fallthrough
	case "USE_CASE":
		fallthrough
	case "VERIFICATION_REMINDER":
		fallthrough
	case "EVENT":
		fallthrough
	case "ANNOUNCEMENT":
		fallthrough
	case "MENTION":
		fallthrough
	case "DATASOURCE_AFFINITY":
		fallthrough
	case "RECENT":
		fallthrough
	case "COMPANY_RESOURCE":
		fallthrough
	case "EXPERIMENTAL":
		fallthrough
	case "PEOPLE_CELEBRATIONS":
		fallthrough
	case "SOCIAL_LINK":
		fallthrough
	case "EXTERNAL_TASKS":
		fallthrough
	case "DISPLAYABLE_LIST":
		fallthrough
	case "ZERO_STATE_CHAT_SUGGESTION":
		fallthrough
	case "ZERO_STATE_CHAT_TOOL_SUGGESTION":
		fallthrough
	case "ZERO_STATE_WORKFLOW_CREATED_BY_ME":
		fallthrough
	case "ZERO_STATE_WORKFLOW_FAVORITES":
		fallthrough
	case "ZERO_STATE_WORKFLOW_POPULAR":
		fallthrough
	case "ZERO_STATE_WORKFLOW_SUGGESTION":
		*e = FeedResultCategory(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeedResultCategory: %v", v)
	}
}

type FeedResult struct {
	// Category of the result, one of the requested categories in incoming request.
	Category     FeedResultCategory `json:"category"`
	PrimaryEntry FeedEntry          `json:"primaryEntry"`
	// Secondary entries for the result e.g. suggested docs for the calendar, carousel.
	SecondaryEntries []FeedEntry `json:"secondaryEntries,omitempty"`
	// Rank of the result. Rank is suggested by server. Client side rank may differ.
	Rank *int64 `json:"rank,omitempty"`
}

func (o *FeedResult) GetCategory() FeedResultCategory {
	if o == nil {
		return FeedResultCategory("")
	}
	return o.Category
}

func (o *FeedResult) GetPrimaryEntry() FeedEntry {
	if o == nil {
		return FeedEntry{}
	}
	return o.PrimaryEntry
}

func (o *FeedResult) GetSecondaryEntries() []FeedEntry {
	if o == nil {
		return nil
	}
	return o.SecondaryEntries
}

func (o *FeedResult) GetRank() *int64 {
	if o == nil {
		return nil
	}
	return o.Rank
}
