// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type GetDocumentsByFacetsRequest struct {
	// Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
	DatasourcesFilter []string `json:"datasourcesFilter,omitempty"`
	// A list of facet filter sets that will be OR'ed together. An AND is assumed between different filters in each set.
	FilterSets []FacetFilterSet `json:"filterSets"`
	// Pagination cursor. A previously received opaque token representing the position in the overall results at which to start.
	Cursor *string `json:"cursor,omitempty"`
}

func (o *GetDocumentsByFacetsRequest) GetDatasourcesFilter() []string {
	if o == nil {
		return nil
	}
	return o.DatasourcesFilter
}

func (o *GetDocumentsByFacetsRequest) GetFilterSets() []FacetFilterSet {
	if o == nil {
		return []FacetFilterSet{}
	}
	return o.FilterSets
}

func (o *GetDocumentsByFacetsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}
