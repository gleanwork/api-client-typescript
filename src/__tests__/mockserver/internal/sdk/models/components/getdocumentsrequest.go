// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type GetDocumentsRequestIncludeField string

const (
	GetDocumentsRequestIncludeFieldLastViewedAt    GetDocumentsRequestIncludeField = "LAST_VIEWED_AT"
	GetDocumentsRequestIncludeFieldVisitorsCount   GetDocumentsRequestIncludeField = "VISITORS_COUNT"
	GetDocumentsRequestIncludeFieldRecentShares    GetDocumentsRequestIncludeField = "RECENT_SHARES"
	GetDocumentsRequestIncludeFieldDocumentContent GetDocumentsRequestIncludeField = "DOCUMENT_CONTENT"
)

func (e GetDocumentsRequestIncludeField) ToPointer() *GetDocumentsRequestIncludeField {
	return &e
}
func (e *GetDocumentsRequestIncludeField) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LAST_VIEWED_AT":
		fallthrough
	case "VISITORS_COUNT":
		fallthrough
	case "RECENT_SHARES":
		fallthrough
	case "DOCUMENT_CONTENT":
		*e = GetDocumentsRequestIncludeField(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDocumentsRequestIncludeField: %v", v)
	}
}

type GetDocumentsRequest struct {
	// The specification for the documents to be retrieved.
	DocumentSpecs []DocumentSpecUnion `json:"documentSpecs"`
	// List of Document fields to return (that aren't returned by default)
	IncludeFields []GetDocumentsRequestIncludeField `json:"includeFields,omitempty"`
}

func (o *GetDocumentsRequest) GetDocumentSpecs() []DocumentSpecUnion {
	if o == nil {
		return []DocumentSpecUnion{}
	}
	return o.DocumentSpecs
}

func (o *GetDocumentsRequest) GetIncludeFields() []GetDocumentsRequestIncludeField {
	if o == nil {
		return nil
	}
	return o.IncludeFields
}
