// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type GetShortcutRequest struct {
	// The alias for the shortcut, including any arguments for variable shortcuts.
	Alias string `json:"alias"`
}

func (o *GetShortcutRequest) GetAlias() string {
	if o == nil {
		return ""
	}
	return o.Alias
}

type GetShortcutRequestUnionType string

const (
	GetShortcutRequestUnionTypeUserGeneratedContentID GetShortcutRequestUnionType = "UserGeneratedContentId"
	GetShortcutRequestUnionTypeGetShortcutRequest     GetShortcutRequestUnionType = "GetShortcutRequest"
)

type GetShortcutRequestUnion struct {
	UserGeneratedContentID *UserGeneratedContentID
	GetShortcutRequest     *GetShortcutRequest

	Type GetShortcutRequestUnionType
}

func CreateGetShortcutRequestUnionUserGeneratedContentID(userGeneratedContentID UserGeneratedContentID) GetShortcutRequestUnion {
	typ := GetShortcutRequestUnionTypeUserGeneratedContentID

	return GetShortcutRequestUnion{
		UserGeneratedContentID: &userGeneratedContentID,
		Type:                   typ,
	}
}

func CreateGetShortcutRequestUnionGetShortcutRequest(getShortcutRequest GetShortcutRequest) GetShortcutRequestUnion {
	typ := GetShortcutRequestUnionTypeGetShortcutRequest

	return GetShortcutRequestUnion{
		GetShortcutRequest: &getShortcutRequest,
		Type:               typ,
	}
}

func (u *GetShortcutRequestUnion) UnmarshalJSON(data []byte) error {

	var userGeneratedContentID UserGeneratedContentID = UserGeneratedContentID{}
	if err := utils.UnmarshalJSON(data, &userGeneratedContentID, "", true, true); err == nil {
		u.UserGeneratedContentID = &userGeneratedContentID
		u.Type = GetShortcutRequestUnionTypeUserGeneratedContentID
		return nil
	}

	var getShortcutRequest GetShortcutRequest = GetShortcutRequest{}
	if err := utils.UnmarshalJSON(data, &getShortcutRequest, "", true, true); err == nil {
		u.GetShortcutRequest = &getShortcutRequest
		u.Type = GetShortcutRequestUnionTypeGetShortcutRequest
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetShortcutRequestUnion", string(data))
}

func (u GetShortcutRequestUnion) MarshalJSON() ([]byte, error) {
	if u.UserGeneratedContentID != nil {
		return utils.MarshalJSON(u.UserGeneratedContentID, "", true)
	}

	if u.GetShortcutRequest != nil {
		return utils.MarshalJSON(u.GetShortcutRequest, "", true)
	}

	return nil, errors.New("could not marshal union type GetShortcutRequestUnion: all fields are null")
}
