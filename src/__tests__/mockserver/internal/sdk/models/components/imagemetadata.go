// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ImageMetadata struct {
	// The type of the image that determines how to interprets metadata and where the image will be stored
	Type ImageType `json:"type"`
	// ID, if a specific entity/type is requested. The id may have different meaning for each type. For USER, it is user id For UGC, it is the id of the content For ICON, the doctype. For DOCUMENT_IMAGE, it is the id of the image.
	ID *string `json:"id,omitempty"`
	// A specific datasource for which an image is requested for. The ds may have different meaning for each type and can also be empty for some. For USER, it is empty or datasource the icon is asked for. For UGC, it is the UGC datasource. For ICON, it is datasource instance the icon is asked for.
	Ds *string `json:"ds,omitempty"`
	// Content id to differentitate multiple images that can have the same type and datasource e.g. thumnail or image from content of UGC. It can also be empty.
	Cid *string `json:"cid,omitempty"`
	// Doc Id of the document for document images.
	Docid *string `json:"docid,omitempty"`
	// Extension the image is saved with. The extension data is deduced from content type for image uploads.
	Ext *string `json:"ext,omitempty"`
}

func (o *ImageMetadata) GetType() ImageType {
	if o == nil {
		return ImageType("")
	}
	return o.Type
}

func (o *ImageMetadata) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ImageMetadata) GetDs() *string {
	if o == nil {
		return nil
	}
	return o.Ds
}

func (o *ImageMetadata) GetCid() *string {
	if o == nil {
		return nil
	}
	return o.Cid
}

func (o *ImageMetadata) GetDocid() *string {
	if o == nil {
		return nil
	}
	return o.Docid
}

func (o *ImageMetadata) GetExt() *string {
	if o == nil {
		return nil
	}
	return o.Ext
}
