// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ImageType - The type of the image that determines how to interprets metadata and where the image will be stored
type ImageType string

const (
	ImageTypeBackground    ImageType = "BACKGROUND"
	ImageTypeFeedback      ImageType = "FEEDBACK"
	ImageTypeHeader        ImageType = "HEADER"
	ImageTypeIcon          ImageType = "ICON"
	ImageTypeLogo          ImageType = "LOGO"
	ImageTypeUgc           ImageType = "UGC"
	ImageTypeUser          ImageType = "USER"
	ImageTypeDocumentImage ImageType = "DOCUMENT_IMAGE"
)

func (e ImageType) ToPointer() *ImageType {
	return &e
}
func (e *ImageType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BACKGROUND":
		fallthrough
	case "FEEDBACK":
		fallthrough
	case "HEADER":
		fallthrough
	case "ICON":
		fallthrough
	case "LOGO":
		fallthrough
	case "UGC":
		fallthrough
	case "USER":
		fallthrough
	case "DOCUMENT_IMAGE":
		*e = ImageType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImageType: %v", v)
	}
}
