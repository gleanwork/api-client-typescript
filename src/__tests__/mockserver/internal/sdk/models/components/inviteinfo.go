// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// InviteInfo - Information regarding the invite status of a person.
type InviteInfo struct {
	// The time this person signed up in ISO format (ISO 8601).
	SignUpTime *time.Time `json:"signUpTime,omitempty"`
	// Latest invites received by the user for each channel
	Invites []ChannelInviteInfo `json:"invites,omitempty"`
	Inviter *Person             `json:"inviter,omitempty"`
	// The time this person was invited in ISO format (ISO 8601).
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	InviteTime *time.Time `json:"inviteTime,omitempty"`
	// The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	ReminderTime *time.Time `json:"reminderTime,omitempty"`
}

func (i InviteInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *InviteInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *InviteInfo) GetSignUpTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.SignUpTime
}

func (o *InviteInfo) GetInvites() []ChannelInviteInfo {
	if o == nil {
		return nil
	}
	return o.Invites
}

func (o *InviteInfo) GetInviter() *Person {
	if o == nil {
		return nil
	}
	return o.Inviter
}

func (o *InviteInfo) GetInviteTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.InviteTime
}

func (o *InviteInfo) GetReminderTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.ReminderTime
}
