// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type OperatorType string

const (
	OperatorTypeText   OperatorType = "TEXT"
	OperatorTypeDouble OperatorType = "DOUBLE"
	OperatorTypeDate   OperatorType = "DATE"
	OperatorTypeUser   OperatorType = "USER"
)

func (e OperatorType) ToPointer() *OperatorType {
	return &e
}
func (e *OperatorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEXT":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "DATE":
		fallthrough
	case "USER":
		*e = OperatorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OperatorType: %v", v)
	}
}

type OperatorMetadata struct {
	Name string `json:"name"`
	// Whether this operator is supported by default or something that was created within a workplace app (e.g. custom jira field).
	IsCustom     *bool           `json:"isCustom,omitempty"`
	OperatorType *OperatorType   `json:"operatorType,omitempty"`
	HelpText     *string         `json:"helpText,omitempty"`
	Scopes       []OperatorScope `json:"scopes,omitempty"`
	// Raw/canonical value of the operator. Only applies when result is an operator value.
	Value *string `json:"value,omitempty"`
	// Human readable value of the operator that can be shown to the user. Only applies when result is an operator value.
	DisplayValue *string `json:"displayValue,omitempty"`
}

func (o *OperatorMetadata) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *OperatorMetadata) GetIsCustom() *bool {
	if o == nil {
		return nil
	}
	return o.IsCustom
}

func (o *OperatorMetadata) GetOperatorType() *OperatorType {
	if o == nil {
		return nil
	}
	return o.OperatorType
}

func (o *OperatorMetadata) GetHelpText() *string {
	if o == nil {
		return nil
	}
	return o.HelpText
}

func (o *OperatorMetadata) GetScopes() []OperatorScope {
	if o == nil {
		return nil
	}
	return o.Scopes
}

func (o *OperatorMetadata) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *OperatorMetadata) GetDisplayValue() *string {
	if o == nil {
		return nil
	}
	return o.DisplayValue
}
