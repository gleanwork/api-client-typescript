// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type PeopleRequestIncludeField string

const (
	PeopleRequestIncludeFieldBadges                PeopleRequestIncludeField = "BADGES"
	PeopleRequestIncludeFieldBusyEvents            PeopleRequestIncludeField = "BUSY_EVENTS"
	PeopleRequestIncludeFieldDocumentActivity      PeopleRequestIncludeField = "DOCUMENT_ACTIVITY"
	PeopleRequestIncludeFieldInviteInfo            PeopleRequestIncludeField = "INVITE_INFO"
	PeopleRequestIncludeFieldPeopleDistance        PeopleRequestIncludeField = "PEOPLE_DISTANCE"
	PeopleRequestIncludeFieldPermissions           PeopleRequestIncludeField = "PERMISSIONS"
	PeopleRequestIncludeFieldPeopleDetails         PeopleRequestIncludeField = "PEOPLE_DETAILS"
	PeopleRequestIncludeFieldManagementDetails     PeopleRequestIncludeField = "MANAGEMENT_DETAILS"
	PeopleRequestIncludeFieldPeopleProfileSettings PeopleRequestIncludeField = "PEOPLE_PROFILE_SETTINGS"
	PeopleRequestIncludeFieldPeopleWithoutManager  PeopleRequestIncludeField = "PEOPLE_WITHOUT_MANAGER"
)

func (e PeopleRequestIncludeField) ToPointer() *PeopleRequestIncludeField {
	return &e
}
func (e *PeopleRequestIncludeField) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BADGES":
		fallthrough
	case "BUSY_EVENTS":
		fallthrough
	case "DOCUMENT_ACTIVITY":
		fallthrough
	case "INVITE_INFO":
		fallthrough
	case "PEOPLE_DISTANCE":
		fallthrough
	case "PERMISSIONS":
		fallthrough
	case "PEOPLE_DETAILS":
		fallthrough
	case "MANAGEMENT_DETAILS":
		fallthrough
	case "PEOPLE_PROFILE_SETTINGS":
		fallthrough
	case "PEOPLE_WITHOUT_MANAGER":
		*e = PeopleRequestIncludeField(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PeopleRequestIncludeField: %v", v)
	}
}

type IncludeType string

const (
	IncludeTypePeopleWithoutManager IncludeType = "PEOPLE_WITHOUT_MANAGER"
	IncludeTypeInvalidEntities      IncludeType = "INVALID_ENTITIES"
)

func (e IncludeType) ToPointer() *IncludeType {
	return &e
}
func (e *IncludeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PEOPLE_WITHOUT_MANAGER":
		fallthrough
	case "INVALID_ENTITIES":
		*e = IncludeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IncludeType: %v", v)
	}
}

type PeopleRequest struct {
	// The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
	TimezoneOffset *int64 `json:"timezoneOffset,omitempty"`
	// The Person IDs to retrieve. If no IDs are requested, the current user's details are returned.
	ObfuscatedIds []string `json:"obfuscatedIds,omitempty"`
	// The email IDs to retrieve. The result is the deduplicated union of emailIds and obfuscatedIds.
	EmailIds []string `json:"emailIds,omitempty"`
	// List of PersonMetadata fields to return (that aren't returned by default)
	IncludeFields []PeopleRequestIncludeField `json:"includeFields,omitempty"`
	// The types of people entities to include in the response in addition to those returned by default.
	IncludeTypes []IncludeType `json:"includeTypes,omitempty"`
	// A string denoting the search surface from which the endpoint is called.
	Source *string `json:"source,omitempty"`
}

func (o *PeopleRequest) GetTimezoneOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.TimezoneOffset
}

func (o *PeopleRequest) GetObfuscatedIds() []string {
	if o == nil {
		return nil
	}
	return o.ObfuscatedIds
}

func (o *PeopleRequest) GetEmailIds() []string {
	if o == nil {
		return nil
	}
	return o.EmailIds
}

func (o *PeopleRequest) GetIncludeFields() []PeopleRequestIncludeField {
	if o == nil {
		return nil
	}
	return o.IncludeFields
}

func (o *PeopleRequest) GetIncludeTypes() []IncludeType {
	if o == nil {
		return nil
	}
	return o.IncludeTypes
}

func (o *PeopleRequest) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}
