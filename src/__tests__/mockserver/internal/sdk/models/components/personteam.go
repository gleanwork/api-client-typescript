// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

// PersonTeamRelationship - The team member's relationship to the team. This defaults to MEMBER if not set.
type PersonTeamRelationship string

const (
	PersonTeamRelationshipMember         PersonTeamRelationship = "MEMBER"
	PersonTeamRelationshipManager        PersonTeamRelationship = "MANAGER"
	PersonTeamRelationshipLead           PersonTeamRelationship = "LEAD"
	PersonTeamRelationshipPointOfContact PersonTeamRelationship = "POINT_OF_CONTACT"
	PersonTeamRelationshipOther          PersonTeamRelationship = "OTHER"
)

func (e PersonTeamRelationship) ToPointer() *PersonTeamRelationship {
	return &e
}
func (e *PersonTeamRelationship) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MEMBER":
		fallthrough
	case "MANAGER":
		fallthrough
	case "LEAD":
		fallthrough
	case "POINT_OF_CONTACT":
		fallthrough
	case "OTHER":
		*e = PersonTeamRelationship(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PersonTeamRelationship: %v", v)
	}
}

// PersonTeam - Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
type PersonTeam struct {
	// Unique identifier
	ID *string `json:"id,omitempty"`
	// Team name
	Name *string `json:"name,omitempty"`
	// Link to a team page on the internet or your company's intranet
	ExternalLink *string `json:"externalLink,omitempty"`
	// The team member's relationship to the team. This defaults to MEMBER if not set.
	Relationship *PersonTeamRelationship `default:"MEMBER" json:"relationship"`
	// The team member's start date
	JoinDate *time.Time `json:"joinDate,omitempty"`
}

func (p PersonTeam) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PersonTeam) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PersonTeam) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PersonTeam) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PersonTeam) GetExternalLink() *string {
	if o == nil {
		return nil
	}
	return o.ExternalLink
}

func (o *PersonTeam) GetRelationship() *PersonTeamRelationship {
	if o == nil {
		return nil
	}
	return o.Relationship
}

func (o *PersonTeam) GetJoinDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.JoinDate
}
