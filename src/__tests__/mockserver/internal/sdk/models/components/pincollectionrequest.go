// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
)

// PinCollectionRequestAction - Whether to pin or unpin
type PinCollectionRequestAction string

const (
	PinCollectionRequestActionPin   PinCollectionRequestAction = "PIN"
	PinCollectionRequestActionUnpin PinCollectionRequestAction = "UNPIN"
)

func (e PinCollectionRequestAction) ToPointer() *PinCollectionRequestAction {
	return &e
}
func (e *PinCollectionRequestAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PIN":
		fallthrough
	case "UNPIN":
		*e = PinCollectionRequestAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PinCollectionRequestAction: %v", v)
	}
}

type PinCollectionRequest struct {
	// Whether to pin or unpin
	Action *PinCollectionRequestAction `default:"PIN" json:"action"`
	Data   *CollectionPinMetadata      `json:"data,omitempty"`
}

func (p PinCollectionRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PinCollectionRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PinCollectionRequest) GetAction() *PinCollectionRequestAction {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *PinCollectionRequest) GetData() *CollectionPinMetadata {
	if o == nil {
		return nil
	}
	return o.Data
}
