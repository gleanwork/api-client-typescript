// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type PinDocument struct {
	// The query strings for which the pinned result will show.
	Queries []string `json:"queries,omitempty"`
	// Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
	AudienceFilters []FacetFilter `json:"audienceFilters,omitempty"`
	// The opaque id of the pin.
	ID *string `json:"id,omitempty"`
	// The document which should be a pinned result.
	DocumentID  string     `json:"documentId"`
	Attribution *Person    `json:"attribution,omitempty"`
	UpdatedBy   *Person    `json:"updatedBy,omitempty"`
	CreateTime  *time.Time `json:"createTime,omitempty"`
	UpdateTime  *time.Time `json:"updateTime,omitempty"`
}

func (p PinDocument) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PinDocument) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PinDocument) GetQueries() []string {
	if o == nil {
		return nil
	}
	return o.Queries
}

func (o *PinDocument) GetAudienceFilters() []FacetFilter {
	if o == nil {
		return nil
	}
	return o.AudienceFilters
}

func (o *PinDocument) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PinDocument) GetDocumentID() string {
	if o == nil {
		return ""
	}
	return o.DocumentID
}

func (o *PinDocument) GetAttribution() *Person {
	if o == nil {
		return nil
	}
	return o.Attribution
}

func (o *PinDocument) GetUpdatedBy() *Person {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *PinDocument) GetCreateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreateTime
}

func (o *PinDocument) GetUpdateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdateTime
}
