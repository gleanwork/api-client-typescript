// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type QuerySuggestion struct {
	// A query term missing from the original query on which this suggestion is based.
	MissingTerm *string `json:"missingTerm,omitempty"`
	// The query being suggested (e.g. enforcing the missing term from the original query).
	Query              string              `json:"query"`
	SearchProviderInfo *SearchProviderInfo `json:"searchProviderInfo,omitempty"`
	// A user-facing description to display for the suggestion.
	Label *string `json:"label,omitempty"`
	// The datasource associated with the suggestion.
	Datasource     *string               `json:"datasource,omitempty"`
	RequestOptions *SearchRequestOptions `json:"requestOptions,omitempty"`
	// The bolded ranges within the query of the QuerySuggestion.
	Ranges       []TextRange                `json:"ranges,omitempty"`
	InputDetails *SearchRequestInputDetails `json:"inputDetails,omitempty"`
}

func (o *QuerySuggestion) GetMissingTerm() *string {
	if o == nil {
		return nil
	}
	return o.MissingTerm
}

func (o *QuerySuggestion) GetQuery() string {
	if o == nil {
		return ""
	}
	return o.Query
}

func (o *QuerySuggestion) GetSearchProviderInfo() *SearchProviderInfo {
	if o == nil {
		return nil
	}
	return o.SearchProviderInfo
}

func (o *QuerySuggestion) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *QuerySuggestion) GetDatasource() *string {
	if o == nil {
		return nil
	}
	return o.Datasource
}

func (o *QuerySuggestion) GetRequestOptions() *SearchRequestOptions {
	if o == nil {
		return nil
	}
	return o.RequestOptions
}

func (o *QuerySuggestion) GetRanges() []TextRange {
	if o == nil {
		return nil
	}
	return o.Ranges
}

func (o *QuerySuggestion) GetInputDetails() *SearchRequestInputDetails {
	if o == nil {
		return nil
	}
	return o.InputDetails
}
