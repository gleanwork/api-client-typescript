// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Scope string

const (
	ScopeAppCard                Scope = "APP_CARD"
	ScopeAutocompleteExactMatch Scope = "AUTOCOMPLETE_EXACT_MATCH"
	ScopeAutocompleteFuzzyMatch Scope = "AUTOCOMPLETE_FUZZY_MATCH"
	ScopeAutocompleteZeroQuery  Scope = "AUTOCOMPLETE_ZERO_QUERY"
	ScopeNewTabPage             Scope = "NEW_TAB_PAGE"
)

func (e Scope) ToPointer() *Scope {
	return &e
}
func (e *Scope) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_CARD":
		fallthrough
	case "AUTOCOMPLETE_EXACT_MATCH":
		fallthrough
	case "AUTOCOMPLETE_FUZZY_MATCH":
		fallthrough
	case "AUTOCOMPLETE_ZERO_QUERY":
		fallthrough
	case "NEW_TAB_PAGE":
		*e = Scope(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Scope: %v", v)
	}
}

// Quicklink - An action for a specific datasource that will show up in autocomplete and app card, e.g. "Create new issue" for jira.
type Quicklink struct {
	// Full action name. Used in autocomplete.
	Name *string `json:"name,omitempty"`
	// Shortened name. Used in app cards.
	ShortName *string `json:"shortName,omitempty"`
	// The URL of the action.
	URL *string `json:"url,omitempty"`
	// Defines how to render an icon
	IconConfig *IconConfig `json:"iconConfig,omitempty"`
	// Unique identifier of this quicklink
	ID *string `json:"id,omitempty"`
	// The scopes for which this quicklink is applicable
	Scopes []Scope `json:"scopes,omitempty"`
}

func (o *Quicklink) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Quicklink) GetShortName() *string {
	if o == nil {
		return nil
	}
	return o.ShortName
}

func (o *Quicklink) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *Quicklink) GetIconConfig() *IconConfig {
	if o == nil {
		return nil
	}
	return o.IconConfig
}

func (o *Quicklink) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Quicklink) GetScopes() []Scope {
	if o == nil {
		return nil
	}
	return o.Scopes
}
