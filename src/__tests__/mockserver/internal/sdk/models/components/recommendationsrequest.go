// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type RecommendationsRequest struct {
	// The ISO 8601 timestamp associated with the client request.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// A previously received trackingToken for a search associated with the same query. Useful for more requests and requests for other tabs.
	TrackingToken  *string      `json:"trackingToken,omitempty"`
	SessionInfo    *SessionInfo `json:"sessionInfo,omitempty"`
	SourceDocument *Document    `json:"sourceDocument,omitempty"`
	// Hint to the server about how many results to send back. Server may return less or more. Structured results and clustered results don't count towards pageSize.
	PageSize *int64 `json:"pageSize,omitempty"`
	// Hint to the server about how many characters long a snippet may be. Server may return less or more.
	MaxSnippetSize             *int64                         `json:"maxSnippetSize,omitempty"`
	RecommendationDocumentSpec *DocumentSpecUnion             `json:"recommendationDocumentSpec,omitempty"`
	RequestOptions             *RecommendationsRequestOptions `json:"requestOptions,omitempty"`
}

func (r RecommendationsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecommendationsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RecommendationsRequest) GetTimestamp() *time.Time {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

func (o *RecommendationsRequest) GetTrackingToken() *string {
	if o == nil {
		return nil
	}
	return o.TrackingToken
}

func (o *RecommendationsRequest) GetSessionInfo() *SessionInfo {
	if o == nil {
		return nil
	}
	return o.SessionInfo
}

func (o *RecommendationsRequest) GetSourceDocument() *Document {
	if o == nil {
		return nil
	}
	return o.SourceDocument
}

func (o *RecommendationsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *RecommendationsRequest) GetMaxSnippetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxSnippetSize
}

func (o *RecommendationsRequest) GetRecommendationDocumentSpec() *DocumentSpecUnion {
	if o == nil {
		return nil
	}
	return o.RecommendationDocumentSpec
}

func (o *RecommendationsRequest) GetRequestOptions() *RecommendationsRequestOptions {
	if o == nil {
		return nil
	}
	return o.RequestOptions
}
