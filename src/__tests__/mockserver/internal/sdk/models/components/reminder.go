// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Reminder struct {
	Assignee  Person  `json:"assignee"`
	Requestor *Person `json:"requestor,omitempty"`
	// Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
	RemindAt int64 `json:"remindAt"`
	// Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
	CreatedAt *int64 `json:"createdAt,omitempty"`
	// An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
	Reason *string `json:"reason,omitempty"`
}

func (o *Reminder) GetAssignee() Person {
	if o == nil {
		return Person{}
	}
	return o.Assignee
}

func (o *Reminder) GetRequestor() *Person {
	if o == nil {
		return nil
	}
	return o.Requestor
}

func (o *Reminder) GetRemindAt() int64 {
	if o == nil {
		return 0
	}
	return o.RemindAt
}

func (o *Reminder) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Reminder) GetReason() *string {
	if o == nil {
		return nil
	}
	return o.Reason
}
