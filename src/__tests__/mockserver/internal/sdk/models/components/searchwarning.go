// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// WarningType - The type of the warning.
type WarningType string

const (
	WarningTypeLongQuery              WarningType = "LONG_QUERY"
	WarningTypeQuotedPunctuation      WarningType = "QUOTED_PUNCTUATION"
	WarningTypePunctuationOnly        WarningType = "PUNCTUATION_ONLY"
	WarningTypeCopypastedQuotes       WarningType = "COPYPASTED_QUOTES"
	WarningTypeInvalidOperator        WarningType = "INVALID_OPERATOR"
	WarningTypeMaybeInvalidFacetQuery WarningType = "MAYBE_INVALID_FACET_QUERY"
)

func (e WarningType) ToPointer() *WarningType {
	return &e
}
func (e *WarningType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LONG_QUERY":
		fallthrough
	case "QUOTED_PUNCTUATION":
		fallthrough
	case "PUNCTUATION_ONLY":
		fallthrough
	case "COPYPASTED_QUOTES":
		fallthrough
	case "INVALID_OPERATOR":
		fallthrough
	case "MAYBE_INVALID_FACET_QUERY":
		*e = WarningType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WarningType: %v", v)
	}
}

type SearchWarning struct {
	// The type of the warning.
	WarningType WarningType `json:"warningType"`
	// The last term we considered in the user's long query.
	LastUsedTerm *string `json:"lastUsedTerm,omitempty"`
	// The query after ignoring/removing quotes.
	QuotesIgnoredQuery *string `json:"quotesIgnoredQuery,omitempty"`
	// A list of query terms that were ignored when generating search results, if any. For example, terms containing invalid filters such as "updated:invalid_date" will be ignored.
	IgnoredTerms []string `json:"ignoredTerms,omitempty"`
}

func (o *SearchWarning) GetWarningType() WarningType {
	if o == nil {
		return WarningType("")
	}
	return o.WarningType
}

func (o *SearchWarning) GetLastUsedTerm() *string {
	if o == nil {
		return nil
	}
	return o.LastUsedTerm
}

func (o *SearchWarning) GetQuotesIgnoredQuery() *string {
	if o == nil {
		return nil
	}
	return o.QuotesIgnoredQuery
}

func (o *SearchWarning) GetIgnoredTerms() []string {
	if o == nil {
		return nil
	}
	return o.IgnoredTerms
}
