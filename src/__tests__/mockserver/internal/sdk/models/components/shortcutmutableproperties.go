// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ShortcutMutableProperties struct {
	// Link text following go/ prefix as entered by the user.
	InputAlias *string `json:"inputAlias,omitempty"`
	// Destination URL for the shortcut.
	DestinationURL *string `json:"destinationUrl,omitempty"`
	// Glean Document ID for the URL, if known.
	DestinationDocumentID *string `json:"destinationDocumentId,omitempty"`
	// A short, plain text blurb to help people understand the intent of the shortcut.
	Description *string `json:"description,omitempty"`
	// Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
	Unlisted *bool `json:"unlisted,omitempty"`
	// For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
	URLTemplate *string `json:"urlTemplate,omitempty"`
	// A list of user roles added for the Shortcut.
	AddedRoles []UserRoleSpecification `json:"addedRoles,omitempty"`
	// A list of user roles removed for the Shortcut.
	RemovedRoles []UserRoleSpecification `json:"removedRoles,omitempty"`
}

func (o *ShortcutMutableProperties) GetInputAlias() *string {
	if o == nil {
		return nil
	}
	return o.InputAlias
}

func (o *ShortcutMutableProperties) GetDestinationURL() *string {
	if o == nil {
		return nil
	}
	return o.DestinationURL
}

func (o *ShortcutMutableProperties) GetDestinationDocumentID() *string {
	if o == nil {
		return nil
	}
	return o.DestinationDocumentID
}

func (o *ShortcutMutableProperties) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ShortcutMutableProperties) GetUnlisted() *bool {
	if o == nil {
		return nil
	}
	return o.Unlisted
}

func (o *ShortcutMutableProperties) GetURLTemplate() *string {
	if o == nil {
		return nil
	}
	return o.URLTemplate
}

func (o *ShortcutMutableProperties) GetAddedRoles() []UserRoleSpecification {
	if o == nil {
		return nil
	}
	return o.AddedRoles
}

func (o *ShortcutMutableProperties) GetRemovedRoles() []UserRoleSpecification {
	if o == nil {
		return nil
	}
	return o.RemovedRoles
}
