// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type OrderBy string

const (
	OrderByAsc  OrderBy = "ASC"
	OrderByDesc OrderBy = "DESC"
)

func (e OrderBy) ToPointer() *OrderBy {
	return &e
}
func (e *OrderBy) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = OrderBy(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderBy: %v", v)
	}
}

type SortOptions struct {
	OrderBy *OrderBy `json:"orderBy,omitempty"`
	SortBy  *string  `json:"sortBy,omitempty"`
}

func (o *SortOptions) GetOrderBy() *OrderBy {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *SortOptions) GetSortBy() *string {
	if o == nil {
		return nil
	}
	return o.SortBy
}
