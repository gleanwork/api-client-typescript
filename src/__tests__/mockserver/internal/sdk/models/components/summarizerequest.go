// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// SummarizeRequest - Summary of the document
type SummarizeRequest struct {
	// The ISO 8601 timestamp associated with the client request.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// Optional query that the summary should be about
	Query *string `json:"query,omitempty"`
	// Optional length of summary output. If not given, defaults to 500 chars.
	PreferredSummaryLength *int64 `json:"preferredSummaryLength,omitempty"`
	// Specifications of documents to summarize
	DocumentSpecs []DocumentSpecUnion `json:"documentSpecs"`
	// An opaque token that represents this particular result. To be used for /feedback reporting.
	TrackingToken *string `json:"trackingToken,omitempty"`
}

func (s SummarizeRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SummarizeRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SummarizeRequest) GetTimestamp() *time.Time {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

func (o *SummarizeRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *SummarizeRequest) GetPreferredSummaryLength() *int64 {
	if o == nil {
		return nil
	}
	return o.PreferredSummaryLength
}

func (o *SummarizeRequest) GetDocumentSpecs() []DocumentSpecUnion {
	if o == nil {
		return []DocumentSpecUnion{}
	}
	return o.DocumentSpecs
}

func (o *SummarizeRequest) GetTrackingToken() *string {
	if o == nil {
		return nil
	}
	return o.TrackingToken
}
