// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/types"
	"mockserver/internal/sdk/utils"
)

// TeamMember - Information about a team's member
type TeamMember struct {
	// The member's email
	Email string `json:"email"`
	// The member's relationship to the team, an enum of `MEMBER`, `MANAGER`, `LEAD`, `POINT_OF_CONTACT`, `OTHER`
	Relationship *string `default:"MEMBER" json:"relationship"`
	// The member's start date
	JoinDate *types.Date `json:"join_date,omitempty"`
}

func (t TeamMember) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TeamMember) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TeamMember) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *TeamMember) GetRelationship() *string {
	if o == nil {
		return nil
	}
	return o.Relationship
}

func (o *TeamMember) GetJoinDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.JoinDate
}
