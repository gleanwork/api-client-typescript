// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type UgcType string

const (
	UgcTypeAnnouncementsType   UgcType = "ANNOUNCEMENTS_TYPE"
	UgcTypeAnswersType         UgcType = "ANSWERS_TYPE"
	UgcTypeCollectionsType     UgcType = "COLLECTIONS_TYPE"
	UgcTypeShortcutsType       UgcType = "SHORTCUTS_TYPE"
	UgcTypeWorkflowsType       UgcType = "WORKFLOWS_TYPE"
	UgcTypePromptTemplatesType UgcType = "PROMPT_TEMPLATES_TYPE"
)

func (e UgcType) ToPointer() *UgcType {
	return &e
}
func (e *UgcType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANNOUNCEMENTS_TYPE":
		fallthrough
	case "ANSWERS_TYPE":
		fallthrough
	case "COLLECTIONS_TYPE":
		fallthrough
	case "SHORTCUTS_TYPE":
		fallthrough
	case "WORKFLOWS_TYPE":
		fallthrough
	case "PROMPT_TEMPLATES_TYPE":
		*e = UgcType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UgcType: %v", v)
	}
}
