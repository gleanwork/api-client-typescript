// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type UpdateAnswerLikesRequestAction string

const (
	UpdateAnswerLikesRequestActionLike   UpdateAnswerLikesRequestAction = "LIKE"
	UpdateAnswerLikesRequestActionUnlike UpdateAnswerLikesRequestAction = "UNLIKE"
)

func (e UpdateAnswerLikesRequestAction) ToPointer() *UpdateAnswerLikesRequestAction {
	return &e
}
func (e *UpdateAnswerLikesRequestAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LIKE":
		fallthrough
	case "UNLIKE":
		*e = UpdateAnswerLikesRequestAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnswerLikesRequestAction: %v", v)
	}
}

type UpdateAnswerLikesRequest struct {
	// The opaque id of the answer to like.
	AnswerID int64 `json:"answerId"`
	// Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID is unavailable. If both are available, using the Answer ID is preferred.
	AnswerDocID *string                        `json:"answerDocId,omitempty"`
	Action      UpdateAnswerLikesRequestAction `json:"action"`
}

func (o *UpdateAnswerLikesRequest) GetAnswerID() int64 {
	if o == nil {
		return 0
	}
	return o.AnswerID
}

func (o *UpdateAnswerLikesRequest) GetAnswerDocID() *string {
	if o == nil {
		return nil
	}
	return o.AnswerDocID
}

func (o *UpdateAnswerLikesRequest) GetAction() UpdateAnswerLikesRequestAction {
	if o == nil {
		return UpdateAnswerLikesRequestAction("")
	}
	return o.Action
}
