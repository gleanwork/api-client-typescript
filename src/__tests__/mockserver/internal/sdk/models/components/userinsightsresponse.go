// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type UserInsightsResponse struct {
	// Unix timestamp of the last activity processed to make the response (in seconds since epoch UTC).
	LastLogTimestamp *int64 `json:"lastLogTimestamp,omitempty"`
	// Insights for all active users with respect to set of actions.
	ActivityInsights []UserActivityInsight `json:"activityInsights,omitempty"`
	// Insights for all in inactive users with respect to set of actions and time period. Activity count will be set to 0.
	InactiveInsights []UserActivityInsight `json:"inactiveInsights,omitempty"`
	// Total number of teammates that have logged in to the product, that are still valid teammates.
	TotalTeammates *int64 `json:"totalTeammates,omitempty"`
	// Total number of active users in the requested period.
	TotalActiveUsers *int64 `json:"totalActiveUsers,omitempty"`
	// list of departments applicable for users tab.
	Departments []string `json:"departments,omitempty"`
}

func (o *UserInsightsResponse) GetLastLogTimestamp() *int64 {
	if o == nil {
		return nil
	}
	return o.LastLogTimestamp
}

func (o *UserInsightsResponse) GetActivityInsights() []UserActivityInsight {
	if o == nil {
		return nil
	}
	return o.ActivityInsights
}

func (o *UserInsightsResponse) GetInactiveInsights() []UserActivityInsight {
	if o == nil {
		return nil
	}
	return o.InactiveInsights
}

func (o *UserInsightsResponse) GetTotalTeammates() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalTeammates
}

func (o *UserInsightsResponse) GetTotalActiveUsers() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalActiveUsers
}

func (o *UserInsightsResponse) GetDepartments() []string {
	if o == nil {
		return nil
	}
	return o.Departments
}
