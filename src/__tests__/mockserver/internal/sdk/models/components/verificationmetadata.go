// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type VerificationMetadata struct {
	LastVerifier *Person `json:"lastVerifier,omitempty"`
	// The unix timestamp of the verification (in seconds since epoch UTC).
	LastVerificationTs *int64 `json:"lastVerificationTs,omitempty"`
	// The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
	ExpirationTs *int64    `json:"expirationTs,omitempty"`
	Document     *Document `json:"document,omitempty"`
	// Info about all outstanding verification reminders for the document if exists.
	Reminders    []Reminder `json:"reminders,omitempty"`
	LastReminder *Reminder  `json:"lastReminder,omitempty"`
	// Number of visitors to the document during included time periods.
	VisitorCount []CountInfo `json:"visitorCount,omitempty"`
	// List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
	CandidateVerifiers []Person `json:"candidateVerifiers,omitempty"`
}

func (o *VerificationMetadata) GetLastVerifier() *Person {
	if o == nil {
		return nil
	}
	return o.LastVerifier
}

func (o *VerificationMetadata) GetLastVerificationTs() *int64 {
	if o == nil {
		return nil
	}
	return o.LastVerificationTs
}

func (o *VerificationMetadata) GetExpirationTs() *int64 {
	if o == nil {
		return nil
	}
	return o.ExpirationTs
}

func (o *VerificationMetadata) GetDocument() *Document {
	if o == nil {
		return nil
	}
	return o.Document
}

func (o *VerificationMetadata) GetReminders() []Reminder {
	if o == nil {
		return nil
	}
	return o.Reminders
}

func (o *VerificationMetadata) GetLastReminder() *Reminder {
	if o == nil {
		return nil
	}
	return o.LastReminder
}

func (o *VerificationMetadata) GetVisitorCount() []CountInfo {
	if o == nil {
		return nil
	}
	return o.VisitorCount
}

func (o *VerificationMetadata) GetCandidateVerifiers() []Person {
	if o == nil {
		return nil
	}
	return o.CandidateVerifiers
}
