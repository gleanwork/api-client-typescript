// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// VerifyRequestAction - The verification action requested.
type VerifyRequestAction string

const (
	VerifyRequestActionVerify    VerifyRequestAction = "VERIFY"
	VerifyRequestActionDeprecate VerifyRequestAction = "DEPRECATE"
	VerifyRequestActionUnverify  VerifyRequestAction = "UNVERIFY"
)

func (e VerifyRequestAction) ToPointer() *VerifyRequestAction {
	return &e
}
func (e *VerifyRequestAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VERIFY":
		fallthrough
	case "DEPRECATE":
		fallthrough
	case "UNVERIFY":
		*e = VerifyRequestAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerifyRequestAction: %v", v)
	}
}

type VerifyRequest struct {
	// The document which is verified.
	DocumentID string `json:"documentId"`
	// The verification action requested.
	Action *VerifyRequestAction `json:"action,omitempty"`
}

func (o *VerifyRequest) GetDocumentID() string {
	if o == nil {
		return ""
	}
	return o.DocumentID
}

func (o *VerifyRequest) GetAction() *VerifyRequestAction {
	if o == nil {
		return nil
	}
	return o.Action
}
