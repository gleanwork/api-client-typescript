// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

// Role - DEPRECATED - use permissions instead. Viewer's role on the specific document.
//
// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
type Role string

const (
	RoleAnswerModerator Role = "ANSWER_MODERATOR"
	RoleOwner           Role = "OWNER"
	RoleViewer          Role = "VIEWER"
)

func (e Role) ToPointer() *Role {
	return &e
}
func (e *Role) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANSWER_MODERATOR":
		fallthrough
	case "OWNER":
		fallthrough
	case "VIEWER":
		*e = Role(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Role: %v", v)
	}
}

type ViewerInfo struct {
	// DEPRECATED - use permissions instead. Viewer's role on the specific document.
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	Role           *Role      `json:"role,omitempty"`
	LastViewedTime *time.Time `json:"lastViewedTime,omitempty"`
}

func (v ViewerInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *ViewerInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ViewerInfo) GetRole() *Role {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *ViewerInfo) GetLastViewedTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastViewedTime
}
