// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// WorkflowFeedbackInfoSource - Where the feedback of the workflow originated from
type WorkflowFeedbackInfoSource string

const (
	WorkflowFeedbackInfoSourceZeroState WorkflowFeedbackInfoSource = "ZERO_STATE"
	WorkflowFeedbackInfoSourceLibrary   WorkflowFeedbackInfoSource = "LIBRARY"
	WorkflowFeedbackInfoSourceHomepage  WorkflowFeedbackInfoSource = "HOMEPAGE"
)

func (e WorkflowFeedbackInfoSource) ToPointer() *WorkflowFeedbackInfoSource {
	return &e
}
func (e *WorkflowFeedbackInfoSource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ZERO_STATE":
		fallthrough
	case "LIBRARY":
		fallthrough
	case "HOMEPAGE":
		*e = WorkflowFeedbackInfoSource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowFeedbackInfoSource: %v", v)
	}
}

type WorkflowFeedbackInfo struct {
	// Where the feedback of the workflow originated from
	Source *WorkflowFeedbackInfoSource `json:"source,omitempty"`
}

func (o *WorkflowFeedbackInfo) GetSource() *WorkflowFeedbackInfoSource {
	if o == nil {
		return nil
	}
	return o.Source
}
