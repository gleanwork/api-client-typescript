// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetannouncementRequest struct {
	// Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens).
	XGleanActAs *string `header:"style=simple,explode=false,name=X-Glean-ActAs"`
	// Auth type being used to access the endpoint (should be non-empty only for global tokens).
	XGleanAuthType *string `header:"style=simple,explode=false,name=X-Glean-Auth-Type"`
	// GetAnnouncement request
	GetAnnouncementRequest components.GetAnnouncementRequest `request:"mediaType=application/json"`
}

func (o *GetannouncementRequest) GetXGleanActAs() *string {
	if o == nil {
		return nil
	}
	return o.XGleanActAs
}

func (o *GetannouncementRequest) GetXGleanAuthType() *string {
	if o == nil {
		return nil
	}
	return o.XGleanAuthType
}

func (o *GetannouncementRequest) GetGetAnnouncementRequest() components.GetAnnouncementRequest {
	if o == nil {
		return components.GetAnnouncementRequest{}
	}
	return o.GetAnnouncementRequest
}

type GetannouncementResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	GetAnnouncementResponse *components.GetAnnouncementResponse
}

func (o *GetannouncementResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetannouncementResponse) GetGetAnnouncementResponse() *components.GetAnnouncementResponse {
	if o == nil {
		return nil
	}
	return o.GetAnnouncementResponse
}
