// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetanswerRequest struct {
	// Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens).
	XGleanActAs *string `header:"style=simple,explode=false,name=X-Glean-ActAs"`
	// Auth type being used to access the endpoint (should be non-empty only for global tokens).
	XGleanAuthType *string `header:"style=simple,explode=false,name=X-Glean-Auth-Type"`
	// GetAnswer request
	GetAnswerRequest components.GetAnswerRequest `request:"mediaType=application/json"`
}

func (o *GetanswerRequest) GetXGleanActAs() *string {
	if o == nil {
		return nil
	}
	return o.XGleanActAs
}

func (o *GetanswerRequest) GetXGleanAuthType() *string {
	if o == nil {
		return nil
	}
	return o.XGleanAuthType
}

func (o *GetanswerRequest) GetGetAnswerRequest() components.GetAnswerRequest {
	if o == nil {
		return components.GetAnswerRequest{}
	}
	return o.GetAnswerRequest
}

type GetanswerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	GetAnswerResponse *components.GetAnswerResponse
}

func (o *GetanswerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetanswerResponse) GetGetAnswerResponse() *components.GetAnswerResponse {
	if o == nil {
		return nil
	}
	return o.GetAnswerResponse
}
