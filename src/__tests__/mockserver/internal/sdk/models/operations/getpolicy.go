// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetpolicyRequest struct {
	// The id of the policy to fetch.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The version of the policy to fetch. Each time a policy is updated, the older version is still stored. If this is left empty, the latest policy is fetched.
	Version *int64 `queryParam:"style=form,explode=true,name=version"`
}

func (o *GetpolicyRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetpolicyRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type GetpolicyResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	GetDlpReportResponse *components.GetDlpReportResponse
}

func (o *GetpolicyResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetpolicyResponse) GetGetDlpReportResponse() *components.GetDlpReportResponse {
	if o == nil {
		return nil
	}
	return o.GetDlpReportResponse
}
