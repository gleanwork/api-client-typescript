// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListannouncementsRequest struct {
	// Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens).
	XGleanActAs *string `header:"style=simple,explode=false,name=X-Glean-ActAs"`
	// Auth type being used to access the endpoint (should be non-empty only for global tokens).
	XGleanAuthType *string `header:"style=simple,explode=false,name=X-Glean-Auth-Type"`
	// Includes request params for querying announcements.
	ListAnnouncementsRequest components.ListAnnouncementsRequest `request:"mediaType=application/json"`
}

func (o *ListannouncementsRequest) GetXGleanActAs() *string {
	if o == nil {
		return nil
	}
	return o.XGleanActAs
}

func (o *ListannouncementsRequest) GetXGleanAuthType() *string {
	if o == nil {
		return nil
	}
	return o.XGleanAuthType
}

func (o *ListannouncementsRequest) GetListAnnouncementsRequest() components.ListAnnouncementsRequest {
	if o == nil {
		return components.ListAnnouncementsRequest{}
	}
	return o.ListAnnouncementsRequest
}

type ListannouncementsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListAnnouncementsResponse *components.ListAnnouncementsResponse
}

func (o *ListannouncementsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListannouncementsResponse) GetListAnnouncementsResponse() *components.ListAnnouncementsResponse {
	if o == nil {
		return nil
	}
	return o.ListAnnouncementsResponse
}
