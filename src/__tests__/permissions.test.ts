/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { test } from "vitest";
import { Glean } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Permissions Post /Api/index/v1 /Updatepermissions", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/api/index/v1/updatepermissions",
  );

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.updatePermissions({
    datasource: "<value>",
    permissions: {},
  });
});

test("Permissions Post /Api/index/v1 /Indexuser", async () => {
  const testHttpClient = createTestHTTPClient("post_/api/index/v1/indexuser");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.indexUser({
    datasource: "<value>",
    user: {
      email: "Elroy38@gmail.com",
      name: "<value>",
    },
  });
});

test("Permissions Post /Api/index/v1 /Bulkindexusers", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/api/index/v1/bulkindexusers",
  );

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.bulkIndexUsers({
    uploadId: "<id>",
    datasource: "<value>",
    users: [
      {
        email: "Nola85@hotmail.com",
        name: "<value>",
      },
      {
        email: "Francisca44@hotmail.com",
        name: "<value>",
      },
      {
        email: "Georgiana_Fadel-Boyle@yahoo.com",
        name: "<value>",
      },
    ],
  });
});

test("Permissions Post /Api/index/v1 /Indexgroup", async () => {
  const testHttpClient = createTestHTTPClient("post_/api/index/v1/indexgroup");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.indexGroup({
    datasource: "<value>",
    group: {
      name: "<value>",
    },
  });
});

test("Permissions Post /Api/index/v1 /Bulkindexgroups", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/api/index/v1/bulkindexgroups",
  );

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.bulkIndexGroups({
    uploadId: "<id>",
    datasource: "<value>",
    groups: [
      {
        name: "<value>",
      },
      {
        name: "<value>",
      },
    ],
  });
});

test("Permissions Post /Api/index/v1 /Indexmembership", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/api/index/v1/indexmembership",
  );

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.indexMembership({
    datasource: "<value>",
    membership: {
      groupName: "<value>",
    },
  });
});

test("Permissions Post /Api/index/v1 /Bulkindexmemberships", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/api/index/v1/bulkindexmemberships",
  );

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.bulkIndexMemberships({
    uploadId: "<id>",
    datasource: "<value>",
    memberships: [
      {},
      {},
      {},
    ],
  });
});

test("Permissions Post /Api/index/v1 /Processallmemberships", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/api/index/v1/processallmemberships",
  );

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.processMemberships();
});

test("Permissions Post /Api/index/v1 /Deleteuser", async () => {
  const testHttpClient = createTestHTTPClient("post_/api/index/v1/deleteuser");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.deleteUser({
    datasource: "<value>",
    email: "Estrella.Robel56@gmail.com",
  });
});

test("Permissions Post /Api/index/v1 /Deletegroup", async () => {
  const testHttpClient = createTestHTTPClient("post_/api/index/v1/deletegroup");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.deleteGroup({
    datasource: "<value>",
    groupName: "<value>",
  });
});

test("Permissions Post /Api/index/v1 /Deletemembership", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/api/index/v1/deletemembership",
  );

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.deleteMembership({
    datasource: "<value>",
    membership: {
      groupName: "<value>",
    },
  });
});

test("Permissions Post /Api/index/v1 /Betausers", async () => {
  const testHttpClient = createTestHTTPClient("post_/api/index/v1/betausers");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  await glean.indexing.permissions.authorizeBetaUsers({
    datasource: "<value>",
    emails: [
      "Margaret94@gmail.com",
      "Jerel_Wilkinson39@yahoo.com",
    ],
  });
});
