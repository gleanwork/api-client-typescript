/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Glean } from "../index.js";
import { RFCDate } from "../types/index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Search Adminsearch", async () => {
  const testHttpClient = createTestHTTPClient("adminsearch");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.search.admin({
    searchRequest: {
      trackingToken: "trackingToken",
      pageSize: 10,
      query: "vacation policy",
      requestOptions: {
        facetFilters: [
          {
            fieldName: "type",
            values: [
              {
                value: "article",
                relationType: "EQUALS",
              },
              {
                value: "document",
                relationType: "EQUALS",
              },
            ],
          },
          {
            fieldName: "department",
            values: [],
          },
        ],
        facetBucketSize: 254944,
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    trackingToken: "trackingToken",
    results: [
      {
        title: "title",
        url: "https://www.example.com/",
        snippets: [],
      },
      {
        title: "title",
        url: "https://www.example.com/",
      },
    ],
    errorInfo: {
      errorMessages: [
        {
          source: "gmail",
          errorMessage: "invalid token",
        },
        {
          source: "slack",
          errorMessage: "expired token",
        },
      ],
    },
    requestID:
      "5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100",
    facetResults: [
      {
        sourceName: "sourceName",
        operatorName: "operatorName",
        buckets: [
          {
            count: 1,
            percentage: 5,
            value: {
              stringValue: "stringValue",
              integerValue: 5,
            },
          },
          {
            count: 1,
            percentage: 5,
            value: {
              stringValue: "stringValue",
              integerValue: 5,
            },
          },
        ],
      },
      {
        sourceName: "sourceName",
        operatorName: "operatorName",
        buckets: [],
      },
    ],
    rewrittenFacetFilters: [
      {
        fieldName: "fieldName",
        values: [
          {},
          {},
        ],
      },
      {
        fieldName: "fieldName",
        values: [],
      },
    ],
    hasMoreResults: true,
  });
});

test("Search Autocomplete", async () => {
  const testHttpClient = createTestHTTPClient("autocomplete");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.search.autocomplete({
    autocompleteRequest: {
      trackingToken: "trackingToken",
      query: "San Fra",
      datasource: "GDRIVE",
      resultSize: 10,
      authTokens: [
        {
          accessToken: "123abc",
          datasource: "gmail",
          scope: "email profile https://www.googleapis.com/auth/gmail.readonly",
          tokenType: "Bearer",
          authUser: "1",
        },
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    trackingToken: "trackingToken",
    results: [
      {
        result: "sample result",
        resultType: "DOCUMENT",
        score: 4.56,
        url: "https://www.example.com/",
        trackingToken: "abcd",
      },
    ],
    backendTimeMillis: 1100,
  });
});

test("Search Feed", async () => {
  const testHttpClient = createTestHTTPClient("feed");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.search.getFeed({
    feedRequest: {},
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    serverTimestamp: 152670,
    results: [
      {
        category: "ZERO_STATE_WORKFLOW_FAVORITES",
        primaryEntry: {
          title: "<value>",
          createdBy: {
            name: "George Clooney",
            obfuscatedId: "abc123",
            relatedDocuments: [],
            metadata: {
              type: "FULL_TIME",
              title: "Actor",
              department: "Movies",
              email: "george@example.com",
              location: "Hollywood, CA",
              phone: "6505551234",
              photoUrl: "https://example.com/george.jpg",
              startDate: new RFCDate("2000-01-23"),
              datasourceProfile: [
                {
                  datasource: "github",
                  handle: "<value>",
                },
              ],
              querySuggestions: {
                suggestions: [],
              },
              inviteInfo: {
                invites: [],
              },
              customFields: [],
              badges: [
                {
                  key: "deployment_name_new_hire",
                  displayName: "New hire",
                  iconConfig: {
                    color: "#343CED",
                    key: "person_icon",
                    iconType: "GLYPH",
                    name: "user",
                  },
                },
              ],
            },
          },
          document: {
            metadata: {
              datasource: "datasource",
              objectType: "Feature Request",
              container: "container",
              parentId: "JIRA_EN-1337",
              mimeType: "mimeType",
              documentId: "documentId",
              createTime: new Date("2000-01-23T04:56:07.000Z"),
              updateTime: new Date("2000-01-23T04:56:07.000Z"),
              author: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              owner: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              mentionedPeople: [],
              components: [
                "Backend",
                "Networking",
              ],
              status: "[\"Done\"]",
              pins: [],
              assignedTo: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              updatedBy: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              collections: [],
              interactions: {
                reacts: [],
                shares: [],
              },
              verification: {
                state: "UNVERIFIED",
                metadata: {
                  lastVerifier: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  reminders: [],
                  lastReminder: {
                    assignee: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                    requestor: {
                      name: "George Clooney",
                      obfuscatedId: "abc123",
                    },
                    remindAt: 129663,
                  },
                  candidateVerifiers: [],
                },
              },
              customData: {
                "someCustomField": {},
              },
              contactPerson: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
            },
          },
          event: {
            id: "<id>",
            url: "https://bleak-vibration.biz/",
            attendees: {
              people: [],
            },
            generatedAttachments: [
              {
                documents: [
                  {},
                ],
                person: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                customer: {
                  id: "<id>",
                  company: {
                    name: "<value>",
                    location: "New York City",
                    industry: "Finances",
                    about:
                      "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                  },
                  poc: [],
                  notes: "CIO is interested in trying out the product.",
                },
                externalLinks: [
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                ],
                content: [
                  {
                    displayHeader: "Action Items",
                  },
                ],
              },
              {
                documents: [
                  {},
                ],
                externalLinks: [
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                ],
                content: [
                  {
                    displayHeader: "Action Items",
                  },
                ],
              },
            ],
          },
          announcement: {
            body: {
              text:
                "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
              structuredList: [],
            },
            audienceFilters: [
              {
                fieldName: "type",
                values: [
                  {
                    value: "Spreadsheet",
                    relationType: "EQUALS",
                  },
                  {
                    value: "Presentation",
                    relationType: "EQUALS",
                  },
                ],
              },
            ],
            draftId: 342,
            sourceDocument: {},
          },
          collection: {
            name: "<value>",
            description: "because almighty an",
            addedRoles: [],
            removedRoles: [],
            audienceFilters: [],
            id: 822820,
            creator: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            items: [],
            roles: [],
          },
          collectionItem: {
            collectionId: 906024,
            itemType: "TEXT",
          },
          promptTemplate: {
            promptTemplate: {
              template: "<value>",
              addedRoles: [],
              removedRoles: [],
              lastUpdatedBy: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              roles: [],
            },
          },
          workflow: {
            workflow: {},
          },
          activities: [
            {
              actor: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
            },
            {},
            {},
          ],
        },
        secondaryEntries: [
          {
            title: "<value>",
            event: {
              id: "<id>",
              url: "https://bleak-vibration.biz/",
              generatedAttachments: [
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
              ],
            },
            announcement: {
              audienceFilters: [],
              draftId: 342,
            },
            promptTemplate: {
              promptTemplate: {
                template: "<value>",
                addedRoles: [],
                removedRoles: [],
                roles: [],
              },
            },
            workflow: {
              workflow: {},
            },
            activities: [],
          },
          {
            title: "<value>",
            event: {
              id: "<id>",
              url: "https://bleak-vibration.biz/",
              generatedAttachments: [
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
              ],
            },
            announcement: {
              audienceFilters: [],
              draftId: 342,
            },
            promptTemplate: {
              promptTemplate: {
                template: "<value>",
                addedRoles: [],
                removedRoles: [],
                roles: [],
              },
            },
            workflow: {
              workflow: {},
            },
            activities: [],
          },
        ],
      },
      {
        category: "ZERO_STATE_WORKFLOW_FAVORITES",
        primaryEntry: {
          title: "<value>",
          event: {
            id: "<id>",
            url: "https://bleak-vibration.biz/",
            generatedAttachments: [
              {
                documents: [
                  {},
                ],
                externalLinks: [
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                ],
                content: [
                  {
                    displayHeader: "Action Items",
                  },
                ],
              },
              {
                documents: [
                  {},
                ],
                externalLinks: [
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                  {
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                ],
                content: [
                  {
                    displayHeader: "Action Items",
                  },
                ],
              },
            ],
          },
          announcement: {
            audienceFilters: [
              {
                fieldName: "type",
                values: [
                  {
                    value: "Spreadsheet",
                    relationType: "EQUALS",
                  },
                  {
                    value: "Presentation",
                    relationType: "EQUALS",
                  },
                ],
              },
            ],
            draftId: 342,
          },
          promptTemplate: {
            promptTemplate: {
              template: "<value>",
              addedRoles: [],
              removedRoles: [],
              roles: [],
            },
          },
          workflow: {
            workflow: {},
          },
          activities: [
            {},
            {},
            {},
          ],
        },
        secondaryEntries: [
          {
            title: "<value>",
            event: {
              id: "<id>",
              url: "https://bleak-vibration.biz/",
              generatedAttachments: [
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
              ],
            },
            announcement: {
              audienceFilters: [],
              draftId: 342,
            },
            promptTemplate: {
              promptTemplate: {
                template: "<value>",
                addedRoles: [],
                removedRoles: [],
                roles: [],
              },
            },
            workflow: {
              workflow: {},
            },
            activities: [],
          },
          {
            title: "<value>",
            event: {
              id: "<id>",
              url: "https://bleak-vibration.biz/",
              generatedAttachments: [
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
                {
                  documents: [
                    {},
                  ],
                  externalLinks: [
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                    {
                      iconConfig: {
                        color: "#343CED",
                        key: "person_icon",
                        iconType: "GLYPH",
                        name: "user",
                      },
                    },
                  ],
                  content: [
                    {
                      displayHeader: "Action Items",
                    },
                  ],
                },
              ],
            },
            announcement: {
              audienceFilters: [],
              draftId: 342,
            },
            promptTemplate: {
              promptTemplate: {
                template: "<value>",
                addedRoles: [],
                removedRoles: [],
                roles: [],
              },
            },
            workflow: {
              workflow: {},
            },
            activities: [],
          },
        ],
      },
    ],
    facetResults: {
      "key": [
        {
          sourceName: "container_name",
          operatorName: "SelectMultiple",
          buckets: [
            {
              count: 1,
              datasource: "jira",
              percentage: 5,
              value: {
                stringValue: "engineering",
                integerValue: 5,
                displayLabel: "engineering",
                iconConfig: {
                  color: "#343CED",
                  key: "person_icon",
                  iconType: "GLYPH",
                  name: "user",
                },
              },
            },
          ],
          hasMoreBuckets: false,
          groupName: "Service Cloud",
        },
        {
          sourceName: "container_name",
          operatorName: "SelectMultiple",
          buckets: [
            {
              count: 1,
              datasource: "jira",
              percentage: 5,
              value: {
                stringValue: "engineering",
                integerValue: 5,
                displayLabel: "engineering",
                iconConfig: {
                  color: "#343CED",
                  key: "person_icon",
                  iconType: "GLYPH",
                  name: "user",
                },
              },
            },
          ],
          hasMoreBuckets: false,
          groupName: "Service Cloud",
        },
      ],
    },
  });
});

test("Search Peoplesuggest", async () => {
  const testHttpClient = createTestHTTPClient("peoplesuggest");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.search.suggestPeople({
    peopleSuggestRequest: {
      categories: [
        "INVITE_NONUSERS",
        "INVITE_NONUSERS",
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    suggestions: [
      {
        category: "INVITE_INACTIVE_PROMO",
        people: [
          {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        ],
      },
      {
        category: "INVITE_INACTIVE_PROMO",
        people: [
          {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        ],
      },
      {
        category: "INVITE_INACTIVE_PROMO",
        people: [
          {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        ],
      },
    ],
  });
});

test("Search Peoplesuggestadmin", async () => {
  const testHttpClient = createTestHTTPClient("peoplesuggestadmin");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.search.suggestPeopleAdmin({
    peopleSuggestRequest: {
      categories: [
        "INVITE_NONUSERS",
        "INVITE_NONUSERS",
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    suggestions: [
      {
        category: "INVITE_INACTIVE_PROMO",
        people: [
          {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        ],
      },
      {
        category: "INVITE_INACTIVE_PROMO",
        people: [
          {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        ],
      },
      {
        category: "INVITE_INACTIVE_PROMO",
        people: [
          {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        ],
      },
    ],
  });
});

test("Search Recommendations", async () => {
  const testHttpClient = createTestHTTPClient("recommendations");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.search.recommendations({
    recommendationsRequest: {
      sourceDocument: {
        metadata: {
          datasource: "datasource",
          objectType: "Feature Request",
          container: "container",
          parentId: "JIRA_EN-1337",
          mimeType: "mimeType",
          documentId: "documentId",
          createTime: new Date("2000-01-23T04:56:07.000Z"),
          updateTime: new Date("2000-01-23T04:56:07.000Z"),
          author: {
            name: "George Clooney",
            obfuscatedId: "abc123",
            relatedDocuments: [],
            metadata: {
              type: "FULL_TIME",
              title: "Actor",
              department: "Movies",
              email: "george@example.com",
              location: "Hollywood, CA",
              managementChain: [],
              phone: "6505551234",
              photoUrl: "https://example.com/george.jpg",
              reports: [],
              startDate: new RFCDate("2000-01-23"),
              datasourceProfile: [],
              querySuggestions: {
                suggestions: [],
              },
              inviteInfo: {
                invites: [],
              },
              customFields: [],
              badges: [],
            },
          },
          owner: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          mentionedPeople: [],
          components: [
            "Backend",
            "Networking",
          ],
          status: "[\"Done\"]",
          pins: [],
          assignedTo: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          updatedBy: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
          collections: [],
          interactions: {
            reacts: [],
            shares: [],
          },
          verification: {
            state: "UNVERIFIED",
            metadata: {
              lastVerifier: {
                name: "George Clooney",
                obfuscatedId: "abc123",
              },
              reminders: [],
              lastReminder: {
                assignee: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                requestor: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                remindAt: 129663,
              },
              candidateVerifiers: [],
            },
          },
          customData: {
            "someCustomField": {},
          },
          contactPerson: {
            name: "George Clooney",
            obfuscatedId: "abc123",
          },
        },
      },
      pageSize: 100,
      maxSnippetSize: 400,
      requestOptions: {
        facetFilterSets: [
          {
            filters: [
              {
                fieldName: "type",
                values: [],
              },
            ],
          },
          {
            filters: [
              {
                fieldName: "type",
                values: [],
              },
            ],
          },
        ],
        context: {},
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    results: [
      {
        title: "title",
        url: "https://example.com/foo/bar",
        nativeAppUrl: "slack://foo/bar",
        snippets: [],
      },
    ],
    structuredResults: [
      {
        document: {
          metadata: {
            datasource: "datasource",
            objectType: "Feature Request",
            container: "container",
            parentId: "JIRA_EN-1337",
            mimeType: "mimeType",
            documentId: "documentId",
            createTime: new Date("2000-01-23T04:56:07.000Z"),
            updateTime: new Date("2000-01-23T04:56:07.000Z"),
            author: {
              name: "George Clooney",
              obfuscatedId: "abc123",
              relatedDocuments: [],
              metadata: {
                type: "FULL_TIME",
                title: "Actor",
                department: "Movies",
                email: "george@example.com",
                location: "Hollywood, CA",
                phone: "6505551234",
                photoUrl: "https://example.com/george.jpg",
                startDate: new RFCDate("2000-01-23"),
                datasourceProfile: [
                  {
                    datasource: "github",
                    handle: "<value>",
                  },
                ],
                querySuggestions: {
                  suggestions: [],
                },
                inviteInfo: {
                  invites: [],
                },
                customFields: [],
                badges: [
                  {
                    key: "deployment_name_new_hire",
                    displayName: "New hire",
                    iconConfig: {
                      color: "#343CED",
                      key: "person_icon",
                      iconType: "GLYPH",
                      name: "user",
                    },
                  },
                ],
              },
            },
            owner: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            mentionedPeople: [],
            components: [
              "Backend",
              "Networking",
            ],
            status: "[\"Done\"]",
            pins: [],
            assignedTo: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            updatedBy: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
            collections: [],
            interactions: {
              reacts: [],
              shares: [],
            },
            verification: {
              state: "UNVERIFIED",
              metadata: {
                lastVerifier: {
                  name: "George Clooney",
                  obfuscatedId: "abc123",
                },
                reminders: [],
                lastReminder: {
                  assignee: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  requestor: {
                    name: "George Clooney",
                    obfuscatedId: "abc123",
                  },
                  remindAt: 129663,
                },
                candidateVerifiers: [],
              },
            },
            customData: {
              "someCustomField": {},
            },
            contactPerson: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
          },
        },
        person: {
          name: "George Clooney",
          obfuscatedId: "abc123",
        },
        customer: {
          id: "<id>",
          company: {
            name: "<value>",
            location: "New York City",
            industry: "Finances",
            about:
              "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
          },
          poc: [],
          notes: "CIO is interested in trying out the product.",
        },
        team: {
          id: "<id>",
          name: "<value>",
          members: [],
          datasourceProfiles: [
            {
              datasource: "github",
              handle: "<value>",
            },
            {
              datasource: "github",
              handle: "<value>",
            },
            {
              datasource: "github",
              handle: "<value>",
            },
          ],
          status: "PROCESSED",
          canBeDeleted: true,
        },
        customEntity: {
          roles: [],
        },
        answer: {
          id: 3,
          docId: "ANSWERS_answer_3",
          question: "Why is the sky blue?",
          bodyText:
            "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
          audienceFilters: [],
          addedRoles: [],
          removedRoles: [],
          combinedAnswerText: {
            text:
              "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
            structuredList: [],
          },
          likes: {
            likedBy: [],
            likedByUser: true,
            numLikes: 22508,
          },
          board: {
            name: "<value>",
            description: "over aha if unless fooey unbearably",
            audienceFilters: [],
            id: 342305,
            creator: {
              name: "George Clooney",
              obfuscatedId: "abc123",
            },
          },
          sourceDocument: {},
        },
        extractedQnA: {
          questionResult: {
            title: "title",
            url: "https://example.com/foo/bar",
            nativeAppUrl: "slack://foo/bar",
          },
        },
        meeting: {
          attendees: {
            people: [],
          },
        },
        collection: {
          name: "<value>",
          description: "because almighty an",
          audienceFilters: [],
          id: 822820,
          items: [],
        },
        answerBoard: {
          name: "<value>",
          description:
            "labourer row toward meanwhile instead mostly after along contravene filthy",
          audienceFilters: [
            {
              fieldName: "type",
              values: [],
            },
          ],
          id: 609947,
        },
        code: {
          repoName: "scio",
          fileName: "README.md",
          lines: [],
        },
        relatedQuestion: {
          ranges: [],
        },
      },
      {},
    ],
    generatedQnaResult: {
      ranges: [
        {
          startIndex: 86,
        },
        {
          startIndex: 86,
        },
        {
          startIndex: 86,
        },
      ],
    },
    backendTimeMillis: 1100,
  });
});

test("Search Search", async () => {
  const testHttpClient = createTestHTTPClient("search");

  const glean = new Glean({
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.search.execute({
    searchRequest: {
      trackingToken: "trackingToken",
      pageSize: 10,
      query: "vacation policy",
      requestOptions: {
        facetFilters: [
          {
            fieldName: "type",
            values: [
              {
                value: "article",
                relationType: "EQUALS",
              },
              {
                value: "document",
                relationType: "EQUALS",
              },
            ],
          },
          {
            fieldName: "department",
            values: [],
          },
        ],
        facetBucketSize: 246815,
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    trackingToken: "trackingToken",
    results: [
      {
        title: "title",
        url: "https://www.example.com/",
        snippets: [],
      },
      {
        title: "title",
        url: "https://www.example.com/",
      },
    ],
    errorInfo: {
      errorMessages: [
        {
          source: "gmail",
          errorMessage: "invalid token",
        },
        {
          source: "slack",
          errorMessage: "expired token",
        },
      ],
    },
    requestID:
      "5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100",
    facetResults: [
      {
        sourceName: "sourceName",
        operatorName: "operatorName",
        buckets: [
          {
            count: 1,
            percentage: 5,
            value: {
              stringValue: "stringValue",
              integerValue: 5,
            },
          },
          {
            count: 1,
            percentage: 5,
            value: {
              stringValue: "stringValue",
              integerValue: 5,
            },
          },
        ],
      },
      {
        sourceName: "sourceName",
        operatorName: "operatorName",
        buckets: [],
      },
    ],
    rewrittenFacetFilters: [
      {
        fieldName: "fieldName",
        values: [
          {},
          {},
        ],
      },
      {
        fieldName: "fieldName",
        values: [],
      },
    ],
    hasMoreResults: true,
  });
});
