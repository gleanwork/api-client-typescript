/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Glean } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Verification Addverificationreminder", async () => {
  const testHttpClient = createTestHTTPClient("addverificationreminder");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.verification.addReminder({
    documentId: "<id>",
  });
  expect(result).toBeDefined();
});

test("Verification Listverifications", async () => {
  const testHttpClient = createTestHTTPClient("listverifications");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.client.verification.list();
  expect(result).toBeDefined();
});

test("Verification Verify", async () => {
  const testHttpClient = createTestHTTPClient("verify");

  const glean = new Glean({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["GLEAN_BEARER_AUTH"] ?? "value",
  });

  const result = await glean.verification.verify({
    documentId: "<id>",
  });
  expect(result).toBeDefined();
});
