/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AgentMigrationStatus,
  AgentMigrationStatus$inboundSchema,
  AgentMigrationStatus$outboundSchema,
} from "./agentmigrationstatus.js";

export type AgentMigrationStatuses = {
  /**
   * The status of an agent migration
   */
  advancedPromptsMigrationStatus?: AgentMigrationStatus | undefined;
};

/** @internal */
export const AgentMigrationStatuses$inboundSchema: z.ZodType<
  AgentMigrationStatuses,
  z.ZodTypeDef,
  unknown
> = z.object({
  advancedPromptsMigrationStatus: AgentMigrationStatus$inboundSchema.optional(),
});

/** @internal */
export type AgentMigrationStatuses$Outbound = {
  advancedPromptsMigrationStatus?: string | undefined;
};

/** @internal */
export const AgentMigrationStatuses$outboundSchema: z.ZodType<
  AgentMigrationStatuses$Outbound,
  z.ZodTypeDef,
  AgentMigrationStatuses
> = z.object({
  advancedPromptsMigrationStatus: AgentMigrationStatus$outboundSchema
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AgentMigrationStatuses$ {
  /** @deprecated use `AgentMigrationStatuses$inboundSchema` instead. */
  export const inboundSchema = AgentMigrationStatuses$inboundSchema;
  /** @deprecated use `AgentMigrationStatuses$outboundSchema` instead. */
  export const outboundSchema = AgentMigrationStatuses$outboundSchema;
  /** @deprecated use `AgentMigrationStatuses$Outbound` instead. */
  export type Outbound = AgentMigrationStatuses$Outbound;
}

export function agentMigrationStatusesToJSON(
  agentMigrationStatuses: AgentMigrationStatuses,
): string {
  return JSON.stringify(
    AgentMigrationStatuses$outboundSchema.parse(agentMigrationStatuses),
  );
}

export function agentMigrationStatusesFromJSON(
  jsonString: string,
): SafeParseResult<AgentMigrationStatuses, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AgentMigrationStatuses$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AgentMigrationStatuses' from JSON`,
  );
}
