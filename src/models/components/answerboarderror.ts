/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const AnswerBoardErrorErrorCode = {
  NameExists: "NAME_EXISTS",
  NotFound: "NOT_FOUND",
  NoPermissions: "NO_PERMISSIONS",
} as const;
export type AnswerBoardErrorErrorCode = ClosedEnum<
  typeof AnswerBoardErrorErrorCode
>;

export type AnswerBoardError = {
  errorCode: AnswerBoardErrorErrorCode;
};

/** @internal */
export const AnswerBoardErrorErrorCode$inboundSchema: z.ZodNativeEnum<
  typeof AnswerBoardErrorErrorCode
> = z.nativeEnum(AnswerBoardErrorErrorCode);

/** @internal */
export const AnswerBoardErrorErrorCode$outboundSchema: z.ZodNativeEnum<
  typeof AnswerBoardErrorErrorCode
> = AnswerBoardErrorErrorCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnswerBoardErrorErrorCode$ {
  /** @deprecated use `AnswerBoardErrorErrorCode$inboundSchema` instead. */
  export const inboundSchema = AnswerBoardErrorErrorCode$inboundSchema;
  /** @deprecated use `AnswerBoardErrorErrorCode$outboundSchema` instead. */
  export const outboundSchema = AnswerBoardErrorErrorCode$outboundSchema;
}

/** @internal */
export const AnswerBoardError$inboundSchema: z.ZodType<
  AnswerBoardError,
  z.ZodTypeDef,
  unknown
> = z.object({
  errorCode: AnswerBoardErrorErrorCode$inboundSchema,
});

/** @internal */
export type AnswerBoardError$Outbound = {
  errorCode: string;
};

/** @internal */
export const AnswerBoardError$outboundSchema: z.ZodType<
  AnswerBoardError$Outbound,
  z.ZodTypeDef,
  AnswerBoardError
> = z.object({
  errorCode: AnswerBoardErrorErrorCode$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnswerBoardError$ {
  /** @deprecated use `AnswerBoardError$inboundSchema` instead. */
  export const inboundSchema = AnswerBoardError$inboundSchema;
  /** @deprecated use `AnswerBoardError$outboundSchema` instead. */
  export const outboundSchema = AnswerBoardError$outboundSchema;
  /** @deprecated use `AnswerBoardError$Outbound` instead. */
  export type Outbound = AnswerBoardError$Outbound;
}

export function answerBoardErrorToJSON(
  answerBoardError: AnswerBoardError,
): string {
  return JSON.stringify(
    AnswerBoardError$outboundSchema.parse(answerBoardError),
  );
}

export function answerBoardErrorFromJSON(
  jsonString: string,
): SafeParseResult<AnswerBoardError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AnswerBoardError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AnswerBoardError' from JSON`,
  );
}
