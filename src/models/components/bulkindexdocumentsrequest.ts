/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DocumentDefinition,
  DocumentDefinition$inboundSchema,
  DocumentDefinition$Outbound,
  DocumentDefinition$outboundSchema,
} from "./documentdefinition.js";

/**
 * Describes the request body of the /bulkindexdocuments API call
 */
export type BulkIndexDocumentsRequest = {
  /**
   * Unique id that must be used for this bulk upload instance
   */
  uploadId: string;
  /**
   * true if this is the first page of the upload. Defaults to false
   */
  isFirstPage?: boolean | undefined;
  /**
   * true if this is the last page of the upload. Defaults to false
   */
  isLastPage?: boolean | undefined;
  /**
   * Flag to discard previous upload attempts and start from scratch. Must be specified with isFirstPage=true
   */
  forceRestartUpload?: boolean | undefined;
  /**
   * Datasource of the documents
   */
  datasource: string;
  /**
   * Batch of documents for the datasource
   */
  documents: Array<DocumentDefinition>;
  /**
   * True if older documents need to be force deleted after the upload completes. Defaults to older documents being deleted asynchronously. This must only be set when `isLastPage = true`
   */
  disableStaleDocumentDeletionCheck?: boolean | undefined;
};

/** @internal */
export const BulkIndexDocumentsRequest$inboundSchema: z.ZodType<
  BulkIndexDocumentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uploadId: z.string(),
  isFirstPage: z.boolean().optional(),
  isLastPage: z.boolean().optional(),
  forceRestartUpload: z.boolean().optional(),
  datasource: z.string(),
  documents: z.array(DocumentDefinition$inboundSchema),
  disableStaleDocumentDeletionCheck: z.boolean().optional(),
});

/** @internal */
export type BulkIndexDocumentsRequest$Outbound = {
  uploadId: string;
  isFirstPage?: boolean | undefined;
  isLastPage?: boolean | undefined;
  forceRestartUpload?: boolean | undefined;
  datasource: string;
  documents: Array<DocumentDefinition$Outbound>;
  disableStaleDocumentDeletionCheck?: boolean | undefined;
};

/** @internal */
export const BulkIndexDocumentsRequest$outboundSchema: z.ZodType<
  BulkIndexDocumentsRequest$Outbound,
  z.ZodTypeDef,
  BulkIndexDocumentsRequest
> = z.object({
  uploadId: z.string(),
  isFirstPage: z.boolean().optional(),
  isLastPage: z.boolean().optional(),
  forceRestartUpload: z.boolean().optional(),
  datasource: z.string(),
  documents: z.array(DocumentDefinition$outboundSchema),
  disableStaleDocumentDeletionCheck: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkIndexDocumentsRequest$ {
  /** @deprecated use `BulkIndexDocumentsRequest$inboundSchema` instead. */
  export const inboundSchema = BulkIndexDocumentsRequest$inboundSchema;
  /** @deprecated use `BulkIndexDocumentsRequest$outboundSchema` instead. */
  export const outboundSchema = BulkIndexDocumentsRequest$outboundSchema;
  /** @deprecated use `BulkIndexDocumentsRequest$Outbound` instead. */
  export type Outbound = BulkIndexDocumentsRequest$Outbound;
}

export function bulkIndexDocumentsRequestToJSON(
  bulkIndexDocumentsRequest: BulkIndexDocumentsRequest,
): string {
  return JSON.stringify(
    BulkIndexDocumentsRequest$outboundSchema.parse(bulkIndexDocumentsRequest),
  );
}

export function bulkIndexDocumentsRequestFromJSON(
  jsonString: string,
): SafeParseResult<BulkIndexDocumentsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BulkIndexDocumentsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkIndexDocumentsRequest' from JSON`,
  );
}
