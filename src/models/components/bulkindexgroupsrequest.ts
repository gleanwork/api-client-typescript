/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DatasourceGroupDefinition,
  DatasourceGroupDefinition$inboundSchema,
  DatasourceGroupDefinition$Outbound,
  DatasourceGroupDefinition$outboundSchema,
} from "./datasourcegroupdefinition.js";

/**
 * Describes the request body for the /bulkindexgroups API call
 */
export type BulkIndexGroupsRequest = {
  /**
   * Unique id that must be used for this instance of datasource groups upload
   */
  uploadId: string;
  /**
   * true if this is the first page of the upload. Defaults to false
   */
  isFirstPage?: boolean | undefined;
  /**
   * true if this is the last page of the upload. Defaults to false
   */
  isLastPage?: boolean | undefined;
  /**
   * Flag to discard previous upload attempts and start from scratch. Must be specified with isFirstPage=true
   */
  forceRestartUpload?: boolean | undefined;
  /**
   * datasource of the groups
   */
  datasource: string;
  /**
   * batch of groups for the datasource
   */
  groups: Array<DatasourceGroupDefinition>;
  /**
   * True if older group data needs to be force deleted after the upload completes. Defaults to older data being deleted only if the percentage of data being deleted is less than a reasonable threshold. This must only be set when `isLastPage = true`
   */
  disableStaleDataDeletionCheck?: boolean | undefined;
};

/** @internal */
export const BulkIndexGroupsRequest$inboundSchema: z.ZodType<
  BulkIndexGroupsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uploadId: z.string(),
  isFirstPage: z.boolean().optional(),
  isLastPage: z.boolean().optional(),
  forceRestartUpload: z.boolean().optional(),
  datasource: z.string(),
  groups: z.array(DatasourceGroupDefinition$inboundSchema),
  disableStaleDataDeletionCheck: z.boolean().optional(),
});

/** @internal */
export type BulkIndexGroupsRequest$Outbound = {
  uploadId: string;
  isFirstPage?: boolean | undefined;
  isLastPage?: boolean | undefined;
  forceRestartUpload?: boolean | undefined;
  datasource: string;
  groups: Array<DatasourceGroupDefinition$Outbound>;
  disableStaleDataDeletionCheck?: boolean | undefined;
};

/** @internal */
export const BulkIndexGroupsRequest$outboundSchema: z.ZodType<
  BulkIndexGroupsRequest$Outbound,
  z.ZodTypeDef,
  BulkIndexGroupsRequest
> = z.object({
  uploadId: z.string(),
  isFirstPage: z.boolean().optional(),
  isLastPage: z.boolean().optional(),
  forceRestartUpload: z.boolean().optional(),
  datasource: z.string(),
  groups: z.array(DatasourceGroupDefinition$outboundSchema),
  disableStaleDataDeletionCheck: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkIndexGroupsRequest$ {
  /** @deprecated use `BulkIndexGroupsRequest$inboundSchema` instead. */
  export const inboundSchema = BulkIndexGroupsRequest$inboundSchema;
  /** @deprecated use `BulkIndexGroupsRequest$outboundSchema` instead. */
  export const outboundSchema = BulkIndexGroupsRequest$outboundSchema;
  /** @deprecated use `BulkIndexGroupsRequest$Outbound` instead. */
  export type Outbound = BulkIndexGroupsRequest$Outbound;
}

export function bulkIndexGroupsRequestToJSON(
  bulkIndexGroupsRequest: BulkIndexGroupsRequest,
): string {
  return JSON.stringify(
    BulkIndexGroupsRequest$outboundSchema.parse(bulkIndexGroupsRequest),
  );
}

export function bulkIndexGroupsRequestFromJSON(
  jsonString: string,
): SafeParseResult<BulkIndexGroupsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BulkIndexGroupsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkIndexGroupsRequest' from JSON`,
  );
}
