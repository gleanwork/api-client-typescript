/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DatasourceBulkMembershipDefinition,
  DatasourceBulkMembershipDefinition$inboundSchema,
  DatasourceBulkMembershipDefinition$Outbound,
  DatasourceBulkMembershipDefinition$outboundSchema,
} from "./datasourcebulkmembershipdefinition.js";

/**
 * Describes the request body for the /bulkindexmemberships API call
 */
export type BulkIndexMembershipsRequest = {
  /**
   * Unique id that must be used for this instance of datasource group memberships upload
   */
  uploadId: string;
  /**
   * true if this is the first page of the upload. Defaults to false
   */
  isFirstPage?: boolean | undefined;
  /**
   * true if this is the last page of the upload. Defaults to false
   */
  isLastPage?: boolean | undefined;
  /**
   * Flag to discard previous upload attempts and start from scratch. Must be specified with isFirstPage=true
   */
  forceRestartUpload?: boolean | undefined;
  /**
   * datasource of the memberships
   */
  datasource: string;
  /**
   * group who's memberships are specified
   */
  group?: string | undefined;
  /**
   * batch of memberships for the group
   */
  memberships: Array<DatasourceBulkMembershipDefinition>;
};

/** @internal */
export const BulkIndexMembershipsRequest$inboundSchema: z.ZodType<
  BulkIndexMembershipsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uploadId: z.string(),
  isFirstPage: z.boolean().optional(),
  isLastPage: z.boolean().optional(),
  forceRestartUpload: z.boolean().optional(),
  datasource: z.string(),
  group: z.string().optional(),
  memberships: z.array(DatasourceBulkMembershipDefinition$inboundSchema),
});

/** @internal */
export type BulkIndexMembershipsRequest$Outbound = {
  uploadId: string;
  isFirstPage?: boolean | undefined;
  isLastPage?: boolean | undefined;
  forceRestartUpload?: boolean | undefined;
  datasource: string;
  group?: string | undefined;
  memberships: Array<DatasourceBulkMembershipDefinition$Outbound>;
};

/** @internal */
export const BulkIndexMembershipsRequest$outboundSchema: z.ZodType<
  BulkIndexMembershipsRequest$Outbound,
  z.ZodTypeDef,
  BulkIndexMembershipsRequest
> = z.object({
  uploadId: z.string(),
  isFirstPage: z.boolean().optional(),
  isLastPage: z.boolean().optional(),
  forceRestartUpload: z.boolean().optional(),
  datasource: z.string(),
  group: z.string().optional(),
  memberships: z.array(DatasourceBulkMembershipDefinition$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkIndexMembershipsRequest$ {
  /** @deprecated use `BulkIndexMembershipsRequest$inboundSchema` instead. */
  export const inboundSchema = BulkIndexMembershipsRequest$inboundSchema;
  /** @deprecated use `BulkIndexMembershipsRequest$outboundSchema` instead. */
  export const outboundSchema = BulkIndexMembershipsRequest$outboundSchema;
  /** @deprecated use `BulkIndexMembershipsRequest$Outbound` instead. */
  export type Outbound = BulkIndexMembershipsRequest$Outbound;
}

export function bulkIndexMembershipsRequestToJSON(
  bulkIndexMembershipsRequest: BulkIndexMembershipsRequest,
): string {
  return JSON.stringify(
    BulkIndexMembershipsRequest$outboundSchema.parse(
      bulkIndexMembershipsRequest,
    ),
  );
}

export function bulkIndexMembershipsRequestFromJSON(
  jsonString: string,
): SafeParseResult<BulkIndexMembershipsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BulkIndexMembershipsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkIndexMembershipsRequest' from JSON`,
  );
}
