/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Describes the response body of the /checkdocumentaccess API call
 */
export type CheckDocumentAccessResponse = {
  /**
   * If true, user has access to document for search
   */
  hasAccess?: boolean | undefined;
};

/** @internal */
export const CheckDocumentAccessResponse$inboundSchema: z.ZodType<
  CheckDocumentAccessResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  hasAccess: z.boolean().optional(),
});

/** @internal */
export type CheckDocumentAccessResponse$Outbound = {
  hasAccess?: boolean | undefined;
};

/** @internal */
export const CheckDocumentAccessResponse$outboundSchema: z.ZodType<
  CheckDocumentAccessResponse$Outbound,
  z.ZodTypeDef,
  CheckDocumentAccessResponse
> = z.object({
  hasAccess: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckDocumentAccessResponse$ {
  /** @deprecated use `CheckDocumentAccessResponse$inboundSchema` instead. */
  export const inboundSchema = CheckDocumentAccessResponse$inboundSchema;
  /** @deprecated use `CheckDocumentAccessResponse$outboundSchema` instead. */
  export const outboundSchema = CheckDocumentAccessResponse$outboundSchema;
  /** @deprecated use `CheckDocumentAccessResponse$Outbound` instead. */
  export type Outbound = CheckDocumentAccessResponse$Outbound;
}

export function checkDocumentAccessResponseToJSON(
  checkDocumentAccessResponse: CheckDocumentAccessResponse,
): string {
  return JSON.stringify(
    CheckDocumentAccessResponse$outboundSchema.parse(
      checkDocumentAccessResponse,
    ),
  );
}

export function checkDocumentAccessResponseFromJSON(
  jsonString: string,
): SafeParseResult<CheckDocumentAccessResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CheckDocumentAccessResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CheckDocumentAccessResponse' from JSON`,
  );
}
