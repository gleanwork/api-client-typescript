/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ClusterTypeEnum,
  ClusterTypeEnum$inboundSchema,
  ClusterTypeEnum$outboundSchema,
} from "./clustertypeenum.js";
import {
  SearchResult,
  SearchResult$inboundSchema,
  SearchResult$Outbound,
  SearchResult$outboundSchema,
} from "./searchresult.js";

export type ClusterGroup = {
  /**
   * A list of results that should be displayed as associated with this result.
   */
  clusteredResults?: Array<SearchResult> | undefined;
  /**
   * The reason for inclusion of clusteredResults.
   */
  clusterType?: ClusterTypeEnum | undefined;
  /**
   * The default number of results to display before truncating and showing a "see more" link
   */
  visibleCountHint: number;
};

/** @internal */
export const ClusterGroup$inboundSchema: z.ZodType<
  ClusterGroup,
  z.ZodTypeDef,
  unknown
> = z.object({
  clusteredResults: z.array(z.lazy(() => SearchResult$inboundSchema))
    .optional(),
  clusterType: ClusterTypeEnum$inboundSchema.optional(),
  visibleCountHint: z.number().int(),
});

/** @internal */
export type ClusterGroup$Outbound = {
  clusteredResults?: Array<SearchResult$Outbound> | undefined;
  clusterType?: string | undefined;
  visibleCountHint: number;
};

/** @internal */
export const ClusterGroup$outboundSchema: z.ZodType<
  ClusterGroup$Outbound,
  z.ZodTypeDef,
  ClusterGroup
> = z.object({
  clusteredResults: z.array(z.lazy(() => SearchResult$outboundSchema))
    .optional(),
  clusterType: ClusterTypeEnum$outboundSchema.optional(),
  visibleCountHint: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClusterGroup$ {
  /** @deprecated use `ClusterGroup$inboundSchema` instead. */
  export const inboundSchema = ClusterGroup$inboundSchema;
  /** @deprecated use `ClusterGroup$outboundSchema` instead. */
  export const outboundSchema = ClusterGroup$outboundSchema;
  /** @deprecated use `ClusterGroup$Outbound` instead. */
  export type Outbound = ClusterGroup$Outbound;
}

export function clusterGroupToJSON(clusterGroup: ClusterGroup): string {
  return JSON.stringify(ClusterGroup$outboundSchema.parse(clusterGroup));
}

export function clusterGroupFromJSON(
  jsonString: string,
): SafeParseResult<ClusterGroup, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClusterGroup$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClusterGroup' from JSON`,
  );
}
