/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AnswerBoardError,
  AnswerBoardError$inboundSchema,
  AnswerBoardError$Outbound,
  AnswerBoardError$outboundSchema,
} from "./answerboarderror.js";
import {
  AnswerBoardResult,
  AnswerBoardResult$inboundSchema,
  AnswerBoardResult$Outbound,
  AnswerBoardResult$outboundSchema,
} from "./answerboardresult.js";

export type CreateAnswerBoardResponse = {
  boardResult?: AnswerBoardResult | undefined;
  error?: AnswerBoardError | undefined;
};

/** @internal */
export const CreateAnswerBoardResponse$inboundSchema: z.ZodType<
  CreateAnswerBoardResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  boardResult: AnswerBoardResult$inboundSchema.optional(),
  error: AnswerBoardError$inboundSchema.optional(),
});

/** @internal */
export type CreateAnswerBoardResponse$Outbound = {
  boardResult?: AnswerBoardResult$Outbound | undefined;
  error?: AnswerBoardError$Outbound | undefined;
};

/** @internal */
export const CreateAnswerBoardResponse$outboundSchema: z.ZodType<
  CreateAnswerBoardResponse$Outbound,
  z.ZodTypeDef,
  CreateAnswerBoardResponse
> = z.object({
  boardResult: AnswerBoardResult$outboundSchema.optional(),
  error: AnswerBoardError$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAnswerBoardResponse$ {
  /** @deprecated use `CreateAnswerBoardResponse$inboundSchema` instead. */
  export const inboundSchema = CreateAnswerBoardResponse$inboundSchema;
  /** @deprecated use `CreateAnswerBoardResponse$outboundSchema` instead. */
  export const outboundSchema = CreateAnswerBoardResponse$outboundSchema;
  /** @deprecated use `CreateAnswerBoardResponse$Outbound` instead. */
  export type Outbound = CreateAnswerBoardResponse$Outbound;
}

export function createAnswerBoardResponseToJSON(
  createAnswerBoardResponse: CreateAnswerBoardResponse,
): string {
  return JSON.stringify(
    CreateAnswerBoardResponse$outboundSchema.parse(createAnswerBoardResponse),
  );
}

export function createAnswerBoardResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateAnswerBoardResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAnswerBoardResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAnswerBoardResponse' from JSON`,
  );
}
