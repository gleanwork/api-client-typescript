/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DisplayableList,
  DisplayableList$inboundSchema,
  DisplayableList$Outbound,
  DisplayableList$outboundSchema,
} from "./displayablelist.js";

export type CreateDisplayableListsResponse = {
  items: Array<DisplayableList>;
};

/** @internal */
export const CreateDisplayableListsResponse$inboundSchema: z.ZodType<
  CreateDisplayableListsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(DisplayableList$inboundSchema),
});

/** @internal */
export type CreateDisplayableListsResponse$Outbound = {
  items: Array<DisplayableList$Outbound>;
};

/** @internal */
export const CreateDisplayableListsResponse$outboundSchema: z.ZodType<
  CreateDisplayableListsResponse$Outbound,
  z.ZodTypeDef,
  CreateDisplayableListsResponse
> = z.object({
  items: z.array(DisplayableList$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDisplayableListsResponse$ {
  /** @deprecated use `CreateDisplayableListsResponse$inboundSchema` instead. */
  export const inboundSchema = CreateDisplayableListsResponse$inboundSchema;
  /** @deprecated use `CreateDisplayableListsResponse$outboundSchema` instead. */
  export const outboundSchema = CreateDisplayableListsResponse$outboundSchema;
  /** @deprecated use `CreateDisplayableListsResponse$Outbound` instead. */
  export type Outbound = CreateDisplayableListsResponse$Outbound;
}

export function createDisplayableListsResponseToJSON(
  createDisplayableListsResponse: CreateDisplayableListsResponse,
): string {
  return JSON.stringify(
    CreateDisplayableListsResponse$outboundSchema.parse(
      createDisplayableListsResponse,
    ),
  );
}

export function createDisplayableListsResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateDisplayableListsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDisplayableListsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDisplayableListsResponse' from JSON`,
  );
}
