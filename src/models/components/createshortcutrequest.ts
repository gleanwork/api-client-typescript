/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ShortcutMutableProperties,
  ShortcutMutableProperties$inboundSchema,
  ShortcutMutableProperties$Outbound,
  ShortcutMutableProperties$outboundSchema,
} from "./shortcutmutableproperties.js";

export type CreateShortcutRequest = {
  data: ShortcutMutableProperties;
};

/** @internal */
export const CreateShortcutRequest$inboundSchema: z.ZodType<
  CreateShortcutRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: ShortcutMutableProperties$inboundSchema,
});

/** @internal */
export type CreateShortcutRequest$Outbound = {
  data: ShortcutMutableProperties$Outbound;
};

/** @internal */
export const CreateShortcutRequest$outboundSchema: z.ZodType<
  CreateShortcutRequest$Outbound,
  z.ZodTypeDef,
  CreateShortcutRequest
> = z.object({
  data: ShortcutMutableProperties$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateShortcutRequest$ {
  /** @deprecated use `CreateShortcutRequest$inboundSchema` instead. */
  export const inboundSchema = CreateShortcutRequest$inboundSchema;
  /** @deprecated use `CreateShortcutRequest$outboundSchema` instead. */
  export const outboundSchema = CreateShortcutRequest$outboundSchema;
  /** @deprecated use `CreateShortcutRequest$Outbound` instead. */
  export type Outbound = CreateShortcutRequest$Outbound;
}

export function createShortcutRequestToJSON(
  createShortcutRequest: CreateShortcutRequest,
): string {
  return JSON.stringify(
    CreateShortcutRequest$outboundSchema.parse(createShortcutRequest),
  );
}

export function createShortcutRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateShortcutRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateShortcutRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateShortcutRequest' from JSON`,
  );
}
