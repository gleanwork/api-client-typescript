/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomFieldValueHyperlink,
  CustomFieldValueHyperlink$inboundSchema,
  CustomFieldValueHyperlink$Outbound,
  CustomFieldValueHyperlink$outboundSchema,
} from "./customfieldvaluehyperlink.js";
import {
  CustomFieldValuePerson,
  CustomFieldValuePerson$inboundSchema,
  CustomFieldValuePerson$Outbound,
  CustomFieldValuePerson$outboundSchema,
} from "./customfieldvalueperson.js";
import {
  CustomFieldValueStr,
  CustomFieldValueStr$inboundSchema,
  CustomFieldValueStr$Outbound,
  CustomFieldValueStr$outboundSchema,
} from "./customfieldvaluestr.js";

export type CustomFieldValue =
  | CustomFieldValueStr
  | CustomFieldValuePerson
  | CustomFieldValueHyperlink;

/** @internal */
export const CustomFieldValue$inboundSchema: z.ZodType<
  CustomFieldValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  CustomFieldValueStr$inboundSchema,
  z.lazy(() => CustomFieldValuePerson$inboundSchema),
  CustomFieldValueHyperlink$inboundSchema,
]);

/** @internal */
export type CustomFieldValue$Outbound =
  | CustomFieldValueStr$Outbound
  | CustomFieldValuePerson$Outbound
  | CustomFieldValueHyperlink$Outbound;

/** @internal */
export const CustomFieldValue$outboundSchema: z.ZodType<
  CustomFieldValue$Outbound,
  z.ZodTypeDef,
  CustomFieldValue
> = z.union([
  CustomFieldValueStr$outboundSchema,
  z.lazy(() => CustomFieldValuePerson$outboundSchema),
  CustomFieldValueHyperlink$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldValue$ {
  /** @deprecated use `CustomFieldValue$inboundSchema` instead. */
  export const inboundSchema = CustomFieldValue$inboundSchema;
  /** @deprecated use `CustomFieldValue$outboundSchema` instead. */
  export const outboundSchema = CustomFieldValue$outboundSchema;
  /** @deprecated use `CustomFieldValue$Outbound` instead. */
  export type Outbound = CustomFieldValue$Outbound;
}

export function customFieldValueToJSON(
  customFieldValue: CustomFieldValue,
): string {
  return JSON.stringify(
    CustomFieldValue$outboundSchema.parse(customFieldValue),
  );
}

export function customFieldValueFromJSON(
  jsonString: string,
): SafeParseResult<CustomFieldValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomFieldValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomFieldValue' from JSON`,
  );
}
