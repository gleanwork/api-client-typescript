/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Person,
  Person$inboundSchema,
  Person$Outbound,
  Person$outboundSchema,
} from "./person.js";

export type CustomFieldValuePerson = {
  person?: Person | undefined;
};

/** @internal */
export const CustomFieldValuePerson$inboundSchema: z.ZodType<
  CustomFieldValuePerson,
  z.ZodTypeDef,
  unknown
> = z.object({
  person: z.lazy(() => Person$inboundSchema).optional(),
});

/** @internal */
export type CustomFieldValuePerson$Outbound = {
  person?: Person$Outbound | undefined;
};

/** @internal */
export const CustomFieldValuePerson$outboundSchema: z.ZodType<
  CustomFieldValuePerson$Outbound,
  z.ZodTypeDef,
  CustomFieldValuePerson
> = z.object({
  person: z.lazy(() => Person$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldValuePerson$ {
  /** @deprecated use `CustomFieldValuePerson$inboundSchema` instead. */
  export const inboundSchema = CustomFieldValuePerson$inboundSchema;
  /** @deprecated use `CustomFieldValuePerson$outboundSchema` instead. */
  export const outboundSchema = CustomFieldValuePerson$outboundSchema;
  /** @deprecated use `CustomFieldValuePerson$Outbound` instead. */
  export type Outbound = CustomFieldValuePerson$Outbound;
}

export function customFieldValuePersonToJSON(
  customFieldValuePerson: CustomFieldValuePerson,
): string {
  return JSON.stringify(
    CustomFieldValuePerson$outboundSchema.parse(customFieldValuePerson),
  );
}

export function customFieldValuePersonFromJSON(
  jsonString: string,
): SafeParseResult<CustomFieldValuePerson, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomFieldValuePerson$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomFieldValuePerson' from JSON`,
  );
}
