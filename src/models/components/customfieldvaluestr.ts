/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomFieldValueStr = {
  /**
   * Text field for string value.
   */
  strText?: string | undefined;
};

/** @internal */
export const CustomFieldValueStr$inboundSchema: z.ZodType<
  CustomFieldValueStr,
  z.ZodTypeDef,
  unknown
> = z.object({
  strText: z.string().optional(),
});

/** @internal */
export type CustomFieldValueStr$Outbound = {
  strText?: string | undefined;
};

/** @internal */
export const CustomFieldValueStr$outboundSchema: z.ZodType<
  CustomFieldValueStr$Outbound,
  z.ZodTypeDef,
  CustomFieldValueStr
> = z.object({
  strText: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldValueStr$ {
  /** @deprecated use `CustomFieldValueStr$inboundSchema` instead. */
  export const inboundSchema = CustomFieldValueStr$inboundSchema;
  /** @deprecated use `CustomFieldValueStr$outboundSchema` instead. */
  export const outboundSchema = CustomFieldValueStr$outboundSchema;
  /** @deprecated use `CustomFieldValueStr$Outbound` instead. */
  export type Outbound = CustomFieldValueStr$Outbound;
}

export function customFieldValueStrToJSON(
  customFieldValueStr: CustomFieldValueStr,
): string {
  return JSON.stringify(
    CustomFieldValueStr$outboundSchema.parse(customFieldValueStr),
  );
}

export function customFieldValueStrFromJSON(
  jsonString: string,
): SafeParseResult<CustomFieldValueStr, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomFieldValueStr$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomFieldValueStr' from JSON`,
  );
}
