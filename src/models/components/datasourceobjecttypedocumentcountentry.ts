/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DatasourceObjectTypeDocumentCountEntry = {
  /**
   * The object type of the document
   */
  objectType?: string | undefined;
  /**
   * The number of documents of the corresponding objectType
   */
  count?: number | undefined;
};

/** @internal */
export const DatasourceObjectTypeDocumentCountEntry$inboundSchema: z.ZodType<
  DatasourceObjectTypeDocumentCountEntry,
  z.ZodTypeDef,
  unknown
> = z.object({
  objectType: z.string().optional(),
  count: z.number().int().optional(),
});

/** @internal */
export type DatasourceObjectTypeDocumentCountEntry$Outbound = {
  objectType?: string | undefined;
  count?: number | undefined;
};

/** @internal */
export const DatasourceObjectTypeDocumentCountEntry$outboundSchema: z.ZodType<
  DatasourceObjectTypeDocumentCountEntry$Outbound,
  z.ZodTypeDef,
  DatasourceObjectTypeDocumentCountEntry
> = z.object({
  objectType: z.string().optional(),
  count: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DatasourceObjectTypeDocumentCountEntry$ {
  /** @deprecated use `DatasourceObjectTypeDocumentCountEntry$inboundSchema` instead. */
  export const inboundSchema =
    DatasourceObjectTypeDocumentCountEntry$inboundSchema;
  /** @deprecated use `DatasourceObjectTypeDocumentCountEntry$outboundSchema` instead. */
  export const outboundSchema =
    DatasourceObjectTypeDocumentCountEntry$outboundSchema;
  /** @deprecated use `DatasourceObjectTypeDocumentCountEntry$Outbound` instead. */
  export type Outbound = DatasourceObjectTypeDocumentCountEntry$Outbound;
}

export function datasourceObjectTypeDocumentCountEntryToJSON(
  datasourceObjectTypeDocumentCountEntry:
    DatasourceObjectTypeDocumentCountEntry,
): string {
  return JSON.stringify(
    DatasourceObjectTypeDocumentCountEntry$outboundSchema.parse(
      datasourceObjectTypeDocumentCountEntry,
    ),
  );
}

export function datasourceObjectTypeDocumentCountEntryFromJSON(
  jsonString: string,
): SafeParseResult<DatasourceObjectTypeDocumentCountEntry, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DatasourceObjectTypeDocumentCountEntry$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DatasourceObjectTypeDocumentCountEntry' from JSON`,
  );
}
