/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BulkUploadHistoryEvent,
  BulkUploadHistoryEvent$inboundSchema,
  BulkUploadHistoryEvent$Outbound,
  BulkUploadHistoryEvent$outboundSchema,
} from "./bulkuploadhistoryevent.js";

export type DebugDatasourceStatusIdentityResponseComponentCounts = {
  /**
   * The number of users/groups/memberships uploaded
   */
  uploaded?: number | undefined;
};

export type DebugDatasourceStatusIdentityResponseComponent = {
  /**
   * Information about active and recent successful uploads for the datasource
   */
  bulkUploadHistory?: Array<BulkUploadHistoryEvent> | undefined;
  counts?: DebugDatasourceStatusIdentityResponseComponentCounts | undefined;
};

/** @internal */
export const DebugDatasourceStatusIdentityResponseComponentCounts$inboundSchema:
  z.ZodType<
    DebugDatasourceStatusIdentityResponseComponentCounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    uploaded: z.number().int().optional(),
  });

/** @internal */
export type DebugDatasourceStatusIdentityResponseComponentCounts$Outbound = {
  uploaded?: number | undefined;
};

/** @internal */
export const DebugDatasourceStatusIdentityResponseComponentCounts$outboundSchema:
  z.ZodType<
    DebugDatasourceStatusIdentityResponseComponentCounts$Outbound,
    z.ZodTypeDef,
    DebugDatasourceStatusIdentityResponseComponentCounts
  > = z.object({
    uploaded: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DebugDatasourceStatusIdentityResponseComponentCounts$ {
  /** @deprecated use `DebugDatasourceStatusIdentityResponseComponentCounts$inboundSchema` instead. */
  export const inboundSchema =
    DebugDatasourceStatusIdentityResponseComponentCounts$inboundSchema;
  /** @deprecated use `DebugDatasourceStatusIdentityResponseComponentCounts$outboundSchema` instead. */
  export const outboundSchema =
    DebugDatasourceStatusIdentityResponseComponentCounts$outboundSchema;
  /** @deprecated use `DebugDatasourceStatusIdentityResponseComponentCounts$Outbound` instead. */
  export type Outbound =
    DebugDatasourceStatusIdentityResponseComponentCounts$Outbound;
}

export function debugDatasourceStatusIdentityResponseComponentCountsToJSON(
  debugDatasourceStatusIdentityResponseComponentCounts:
    DebugDatasourceStatusIdentityResponseComponentCounts,
): string {
  return JSON.stringify(
    DebugDatasourceStatusIdentityResponseComponentCounts$outboundSchema.parse(
      debugDatasourceStatusIdentityResponseComponentCounts,
    ),
  );
}

export function debugDatasourceStatusIdentityResponseComponentCountsFromJSON(
  jsonString: string,
): SafeParseResult<
  DebugDatasourceStatusIdentityResponseComponentCounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DebugDatasourceStatusIdentityResponseComponentCounts$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DebugDatasourceStatusIdentityResponseComponentCounts' from JSON`,
  );
}

/** @internal */
export const DebugDatasourceStatusIdentityResponseComponent$inboundSchema:
  z.ZodType<
    DebugDatasourceStatusIdentityResponseComponent,
    z.ZodTypeDef,
    unknown
  > = z.object({
    bulkUploadHistory: z.array(BulkUploadHistoryEvent$inboundSchema).optional(),
    counts: z.lazy(() =>
      DebugDatasourceStatusIdentityResponseComponentCounts$inboundSchema
    ).optional(),
  });

/** @internal */
export type DebugDatasourceStatusIdentityResponseComponent$Outbound = {
  bulkUploadHistory?: Array<BulkUploadHistoryEvent$Outbound> | undefined;
  counts?:
    | DebugDatasourceStatusIdentityResponseComponentCounts$Outbound
    | undefined;
};

/** @internal */
export const DebugDatasourceStatusIdentityResponseComponent$outboundSchema:
  z.ZodType<
    DebugDatasourceStatusIdentityResponseComponent$Outbound,
    z.ZodTypeDef,
    DebugDatasourceStatusIdentityResponseComponent
  > = z.object({
    bulkUploadHistory: z.array(BulkUploadHistoryEvent$outboundSchema)
      .optional(),
    counts: z.lazy(() =>
      DebugDatasourceStatusIdentityResponseComponentCounts$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DebugDatasourceStatusIdentityResponseComponent$ {
  /** @deprecated use `DebugDatasourceStatusIdentityResponseComponent$inboundSchema` instead. */
  export const inboundSchema =
    DebugDatasourceStatusIdentityResponseComponent$inboundSchema;
  /** @deprecated use `DebugDatasourceStatusIdentityResponseComponent$outboundSchema` instead. */
  export const outboundSchema =
    DebugDatasourceStatusIdentityResponseComponent$outboundSchema;
  /** @deprecated use `DebugDatasourceStatusIdentityResponseComponent$Outbound` instead. */
  export type Outbound =
    DebugDatasourceStatusIdentityResponseComponent$Outbound;
}

export function debugDatasourceStatusIdentityResponseComponentToJSON(
  debugDatasourceStatusIdentityResponseComponent:
    DebugDatasourceStatusIdentityResponseComponent,
): string {
  return JSON.stringify(
    DebugDatasourceStatusIdentityResponseComponent$outboundSchema.parse(
      debugDatasourceStatusIdentityResponseComponent,
    ),
  );
}

export function debugDatasourceStatusIdentityResponseComponentFromJSON(
  jsonString: string,
): SafeParseResult<
  DebugDatasourceStatusIdentityResponseComponent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DebugDatasourceStatusIdentityResponseComponent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DebugDatasourceStatusIdentityResponseComponent' from JSON`,
  );
}
