/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteAnnouncementRequest = {
  /**
   * The opaque id of the announcement to be deleted.
   */
  id: number;
};

/** @internal */
export const DeleteAnnouncementRequest$inboundSchema: z.ZodType<
  DeleteAnnouncementRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type DeleteAnnouncementRequest$Outbound = {
  id: number;
};

/** @internal */
export const DeleteAnnouncementRequest$outboundSchema: z.ZodType<
  DeleteAnnouncementRequest$Outbound,
  z.ZodTypeDef,
  DeleteAnnouncementRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAnnouncementRequest$ {
  /** @deprecated use `DeleteAnnouncementRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteAnnouncementRequest$inboundSchema;
  /** @deprecated use `DeleteAnnouncementRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteAnnouncementRequest$outboundSchema;
  /** @deprecated use `DeleteAnnouncementRequest$Outbound` instead. */
  export type Outbound = DeleteAnnouncementRequest$Outbound;
}

export function deleteAnnouncementRequestToJSON(
  deleteAnnouncementRequest: DeleteAnnouncementRequest,
): string {
  return JSON.stringify(
    DeleteAnnouncementRequest$outboundSchema.parse(deleteAnnouncementRequest),
  );
}

export function deleteAnnouncementRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteAnnouncementRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteAnnouncementRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteAnnouncementRequest' from JSON`,
  );
}
