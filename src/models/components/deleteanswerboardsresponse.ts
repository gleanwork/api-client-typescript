/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AnswerBoardError,
  AnswerBoardError$inboundSchema,
  AnswerBoardError$Outbound,
  AnswerBoardError$outboundSchema,
} from "./answerboarderror.js";

export type DeleteAnswerBoardsResponse = {
  error?: AnswerBoardError | undefined;
};

/** @internal */
export const DeleteAnswerBoardsResponse$inboundSchema: z.ZodType<
  DeleteAnswerBoardsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AnswerBoardError$inboundSchema.optional(),
});

/** @internal */
export type DeleteAnswerBoardsResponse$Outbound = {
  error?: AnswerBoardError$Outbound | undefined;
};

/** @internal */
export const DeleteAnswerBoardsResponse$outboundSchema: z.ZodType<
  DeleteAnswerBoardsResponse$Outbound,
  z.ZodTypeDef,
  DeleteAnswerBoardsResponse
> = z.object({
  error: AnswerBoardError$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAnswerBoardsResponse$ {
  /** @deprecated use `DeleteAnswerBoardsResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteAnswerBoardsResponse$inboundSchema;
  /** @deprecated use `DeleteAnswerBoardsResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteAnswerBoardsResponse$outboundSchema;
  /** @deprecated use `DeleteAnswerBoardsResponse$Outbound` instead. */
  export type Outbound = DeleteAnswerBoardsResponse$Outbound;
}

export function deleteAnswerBoardsResponseToJSON(
  deleteAnswerBoardsResponse: DeleteAnswerBoardsResponse,
): string {
  return JSON.stringify(
    DeleteAnswerBoardsResponse$outboundSchema.parse(deleteAnswerBoardsResponse),
  );
}

export function deleteAnswerBoardsResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteAnswerBoardsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteAnswerBoardsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteAnswerBoardsResponse' from JSON`,
  );
}
