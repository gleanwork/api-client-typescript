/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteQueryHistoryRequest = {
  /**
   * Queries to delete.
   */
  queries?: Array<string> | undefined;
};

/** @internal */
export const DeleteQueryHistoryRequest$inboundSchema: z.ZodType<
  DeleteQueryHistoryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  queries: z.array(z.string()).optional(),
});

/** @internal */
export type DeleteQueryHistoryRequest$Outbound = {
  queries?: Array<string> | undefined;
};

/** @internal */
export const DeleteQueryHistoryRequest$outboundSchema: z.ZodType<
  DeleteQueryHistoryRequest$Outbound,
  z.ZodTypeDef,
  DeleteQueryHistoryRequest
> = z.object({
  queries: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteQueryHistoryRequest$ {
  /** @deprecated use `DeleteQueryHistoryRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteQueryHistoryRequest$inboundSchema;
  /** @deprecated use `DeleteQueryHistoryRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteQueryHistoryRequest$outboundSchema;
  /** @deprecated use `DeleteQueryHistoryRequest$Outbound` instead. */
  export type Outbound = DeleteQueryHistoryRequest$Outbound;
}

export function deleteQueryHistoryRequestToJSON(
  deleteQueryHistoryRequest: DeleteQueryHistoryRequest,
): string {
  return JSON.stringify(
    DeleteQueryHistoryRequest$outboundSchema.parse(deleteQueryHistoryRequest),
  );
}

export function deleteQueryHistoryRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteQueryHistoryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteQueryHistoryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteQueryHistoryRequest' from JSON`,
  );
}
