/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * UI configurations for each item of the list
 */
export type DisplayableListItemUIConfig = {
  /**
   * show a "New" pill next to the item
   */
  showNewIndicator?: boolean | undefined;
};

/** @internal */
export const DisplayableListItemUIConfig$inboundSchema: z.ZodType<
  DisplayableListItemUIConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  showNewIndicator: z.boolean().optional(),
});

/** @internal */
export type DisplayableListItemUIConfig$Outbound = {
  showNewIndicator?: boolean | undefined;
};

/** @internal */
export const DisplayableListItemUIConfig$outboundSchema: z.ZodType<
  DisplayableListItemUIConfig$Outbound,
  z.ZodTypeDef,
  DisplayableListItemUIConfig
> = z.object({
  showNewIndicator: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DisplayableListItemUIConfig$ {
  /** @deprecated use `DisplayableListItemUIConfig$inboundSchema` instead. */
  export const inboundSchema = DisplayableListItemUIConfig$inboundSchema;
  /** @deprecated use `DisplayableListItemUIConfig$outboundSchema` instead. */
  export const outboundSchema = DisplayableListItemUIConfig$outboundSchema;
  /** @deprecated use `DisplayableListItemUIConfig$Outbound` instead. */
  export type Outbound = DisplayableListItemUIConfig$Outbound;
}

export function displayableListItemUIConfigToJSON(
  displayableListItemUIConfig: DisplayableListItemUIConfig,
): string {
  return JSON.stringify(
    DisplayableListItemUIConfig$outboundSchema.parse(
      displayableListItemUIConfig,
    ),
  );
}

export function displayableListItemUIConfigFromJSON(
  jsonString: string,
): SafeParseResult<DisplayableListItemUIConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DisplayableListItemUIConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DisplayableListItemUIConfig' from JSON`,
  );
}
