/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AnswerBoardError,
  AnswerBoardError$inboundSchema,
  AnswerBoardError$Outbound,
  AnswerBoardError$outboundSchema,
} from "./answerboarderror.js";
import {
  AnswerBoardResult,
  AnswerBoardResult$inboundSchema,
  AnswerBoardResult$Outbound,
  AnswerBoardResult$outboundSchema,
} from "./answerboardresult.js";

export type EditAnswerBoardResponse = {
  boardResult?: AnswerBoardResult | undefined;
  error?: AnswerBoardError | undefined;
};

/** @internal */
export const EditAnswerBoardResponse$inboundSchema: z.ZodType<
  EditAnswerBoardResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  boardResult: AnswerBoardResult$inboundSchema.optional(),
  error: AnswerBoardError$inboundSchema.optional(),
});

/** @internal */
export type EditAnswerBoardResponse$Outbound = {
  boardResult?: AnswerBoardResult$Outbound | undefined;
  error?: AnswerBoardError$Outbound | undefined;
};

/** @internal */
export const EditAnswerBoardResponse$outboundSchema: z.ZodType<
  EditAnswerBoardResponse$Outbound,
  z.ZodTypeDef,
  EditAnswerBoardResponse
> = z.object({
  boardResult: AnswerBoardResult$outboundSchema.optional(),
  error: AnswerBoardError$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EditAnswerBoardResponse$ {
  /** @deprecated use `EditAnswerBoardResponse$inboundSchema` instead. */
  export const inboundSchema = EditAnswerBoardResponse$inboundSchema;
  /** @deprecated use `EditAnswerBoardResponse$outboundSchema` instead. */
  export const outboundSchema = EditAnswerBoardResponse$outboundSchema;
  /** @deprecated use `EditAnswerBoardResponse$Outbound` instead. */
  export type Outbound = EditAnswerBoardResponse$Outbound;
}

export function editAnswerBoardResponseToJSON(
  editAnswerBoardResponse: EditAnswerBoardResponse,
): string {
  return JSON.stringify(
    EditAnswerBoardResponse$outboundSchema.parse(editAnswerBoardResponse),
  );
}

export function editAnswerBoardResponseFromJSON(
  jsonString: string,
): SafeParseResult<EditAnswerBoardResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EditAnswerBoardResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EditAnswerBoardResponse' from JSON`,
  );
}
