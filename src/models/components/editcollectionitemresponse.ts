/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Collection,
  Collection$inboundSchema,
  Collection$Outbound,
  Collection$outboundSchema,
} from "./collection.js";

export type EditCollectionItemResponse = {
  collection?: Collection | undefined;
};

/** @internal */
export const EditCollectionItemResponse$inboundSchema: z.ZodType<
  EditCollectionItemResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  collection: Collection$inboundSchema.optional(),
});

/** @internal */
export type EditCollectionItemResponse$Outbound = {
  collection?: Collection$Outbound | undefined;
};

/** @internal */
export const EditCollectionItemResponse$outboundSchema: z.ZodType<
  EditCollectionItemResponse$Outbound,
  z.ZodTypeDef,
  EditCollectionItemResponse
> = z.object({
  collection: Collection$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EditCollectionItemResponse$ {
  /** @deprecated use `EditCollectionItemResponse$inboundSchema` instead. */
  export const inboundSchema = EditCollectionItemResponse$inboundSchema;
  /** @deprecated use `EditCollectionItemResponse$outboundSchema` instead. */
  export const outboundSchema = EditCollectionItemResponse$outboundSchema;
  /** @deprecated use `EditCollectionItemResponse$Outbound` instead. */
  export type Outbound = EditCollectionItemResponse$Outbound;
}

export function editCollectionItemResponseToJSON(
  editCollectionItemResponse: EditCollectionItemResponse,
): string {
  return JSON.stringify(
    EditCollectionItemResponse$outboundSchema.parse(editCollectionItemResponse),
  );
}

export function editCollectionItemResponseFromJSON(
  jsonString: string,
): SafeParseResult<EditCollectionItemResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EditCollectionItemResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EditCollectionItemResponse' from JSON`,
  );
}
