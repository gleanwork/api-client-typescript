/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Document,
  Document$inboundSchema,
  Document$Outbound,
  Document$outboundSchema,
} from "./document.js";

export type EditDocumentCollectionsResponse = {
  document?: Document | undefined;
};

/** @internal */
export const EditDocumentCollectionsResponse$inboundSchema: z.ZodType<
  EditDocumentCollectionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  document: Document$inboundSchema.optional(),
});

/** @internal */
export type EditDocumentCollectionsResponse$Outbound = {
  document?: Document$Outbound | undefined;
};

/** @internal */
export const EditDocumentCollectionsResponse$outboundSchema: z.ZodType<
  EditDocumentCollectionsResponse$Outbound,
  z.ZodTypeDef,
  EditDocumentCollectionsResponse
> = z.object({
  document: Document$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EditDocumentCollectionsResponse$ {
  /** @deprecated use `EditDocumentCollectionsResponse$inboundSchema` instead. */
  export const inboundSchema = EditDocumentCollectionsResponse$inboundSchema;
  /** @deprecated use `EditDocumentCollectionsResponse$outboundSchema` instead. */
  export const outboundSchema = EditDocumentCollectionsResponse$outboundSchema;
  /** @deprecated use `EditDocumentCollectionsResponse$Outbound` instead. */
  export type Outbound = EditDocumentCollectionsResponse$Outbound;
}

export function editDocumentCollectionsResponseToJSON(
  editDocumentCollectionsResponse: EditDocumentCollectionsResponse,
): string {
  return JSON.stringify(
    EditDocumentCollectionsResponse$outboundSchema.parse(
      editDocumentCollectionsResponse,
    ),
  );
}

export function editDocumentCollectionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<EditDocumentCollectionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EditDocumentCollectionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EditDocumentCollectionsResponse' from JSON`,
  );
}
