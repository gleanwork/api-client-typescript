/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  WriteActionParameter,
  WriteActionParameter$inboundSchema,
  WriteActionParameter$Outbound,
  WriteActionParameter$outboundSchema,
} from "./writeactionparameter.js";

export type ExecuteActionToolRequest = {
  /**
   * Unique identifier for this actionRun execution event.
   */
  actionRunId?: string | undefined;
  /**
   * The name of the tool.
   */
  name: string;
  /**
   * Unique identifier of an action instance.
   */
  actionInstanceId?: string | undefined;
  /**
   * The parameters to be passed to the tool for action.
   */
  parameters?: { [k: string]: WriteActionParameter } | undefined;
};

/** @internal */
export const ExecuteActionToolRequest$inboundSchema: z.ZodType<
  ExecuteActionToolRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  actionRunId: z.string().optional(),
  name: z.string(),
  actionInstanceId: z.string().optional(),
  parameters: z.record(WriteActionParameter$inboundSchema).optional(),
});

/** @internal */
export type ExecuteActionToolRequest$Outbound = {
  actionRunId?: string | undefined;
  name: string;
  actionInstanceId?: string | undefined;
  parameters?: { [k: string]: WriteActionParameter$Outbound } | undefined;
};

/** @internal */
export const ExecuteActionToolRequest$outboundSchema: z.ZodType<
  ExecuteActionToolRequest$Outbound,
  z.ZodTypeDef,
  ExecuteActionToolRequest
> = z.object({
  actionRunId: z.string().optional(),
  name: z.string(),
  actionInstanceId: z.string().optional(),
  parameters: z.record(WriteActionParameter$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExecuteActionToolRequest$ {
  /** @deprecated use `ExecuteActionToolRequest$inboundSchema` instead. */
  export const inboundSchema = ExecuteActionToolRequest$inboundSchema;
  /** @deprecated use `ExecuteActionToolRequest$outboundSchema` instead. */
  export const outboundSchema = ExecuteActionToolRequest$outboundSchema;
  /** @deprecated use `ExecuteActionToolRequest$Outbound` instead. */
  export type Outbound = ExecuteActionToolRequest$Outbound;
}

export function executeActionToolRequestToJSON(
  executeActionToolRequest: ExecuteActionToolRequest,
): string {
  return JSON.stringify(
    ExecuteActionToolRequest$outboundSchema.parse(executeActionToolRequest),
  );
}

export function executeActionToolRequestFromJSON(
  jsonString: string,
): SafeParseResult<ExecuteActionToolRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExecuteActionToolRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExecuteActionToolRequest' from JSON`,
  );
}
