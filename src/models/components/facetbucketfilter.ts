/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FacetBucketFilter = {
  /**
   * The facet whose buckets should be filtered.
   */
  facet?: string | undefined;
  /**
   * The per-term prefix that facet buckets should be filtered on.
   */
  prefix?: string | undefined;
};

/** @internal */
export const FacetBucketFilter$inboundSchema: z.ZodType<
  FacetBucketFilter,
  z.ZodTypeDef,
  unknown
> = z.object({
  facet: z.string().optional(),
  prefix: z.string().optional(),
});

/** @internal */
export type FacetBucketFilter$Outbound = {
  facet?: string | undefined;
  prefix?: string | undefined;
};

/** @internal */
export const FacetBucketFilter$outboundSchema: z.ZodType<
  FacetBucketFilter$Outbound,
  z.ZodTypeDef,
  FacetBucketFilter
> = z.object({
  facet: z.string().optional(),
  prefix: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FacetBucketFilter$ {
  /** @deprecated use `FacetBucketFilter$inboundSchema` instead. */
  export const inboundSchema = FacetBucketFilter$inboundSchema;
  /** @deprecated use `FacetBucketFilter$outboundSchema` instead. */
  export const outboundSchema = FacetBucketFilter$outboundSchema;
  /** @deprecated use `FacetBucketFilter$Outbound` instead. */
  export type Outbound = FacetBucketFilter$Outbound;
}

export function facetBucketFilterToJSON(
  facetBucketFilter: FacetBucketFilter,
): string {
  return JSON.stringify(
    FacetBucketFilter$outboundSchema.parse(facetBucketFilter),
  );
}

export function facetBucketFilterFromJSON(
  jsonString: string,
): SafeParseResult<FacetBucketFilter, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FacetBucketFilter$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FacetBucketFilter' from JSON`,
  );
}
