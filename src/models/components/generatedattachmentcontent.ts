/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Content that has been generated or extrapolated from the documents present in the document field.
 */
export type GeneratedAttachmentContent = {
  /**
   * The header describing the generated content.
   */
  displayHeader?: string | undefined;
  /**
   * The content that has been generated.
   */
  text?: string | undefined;
};

/** @internal */
export const GeneratedAttachmentContent$inboundSchema: z.ZodType<
  GeneratedAttachmentContent,
  z.ZodTypeDef,
  unknown
> = z.object({
  displayHeader: z.string().optional(),
  text: z.string().optional(),
});

/** @internal */
export type GeneratedAttachmentContent$Outbound = {
  displayHeader?: string | undefined;
  text?: string | undefined;
};

/** @internal */
export const GeneratedAttachmentContent$outboundSchema: z.ZodType<
  GeneratedAttachmentContent$Outbound,
  z.ZodTypeDef,
  GeneratedAttachmentContent
> = z.object({
  displayHeader: z.string().optional(),
  text: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GeneratedAttachmentContent$ {
  /** @deprecated use `GeneratedAttachmentContent$inboundSchema` instead. */
  export const inboundSchema = GeneratedAttachmentContent$inboundSchema;
  /** @deprecated use `GeneratedAttachmentContent$outboundSchema` instead. */
  export const outboundSchema = GeneratedAttachmentContent$outboundSchema;
  /** @deprecated use `GeneratedAttachmentContent$Outbound` instead. */
  export type Outbound = GeneratedAttachmentContent$Outbound;
}

export function generatedAttachmentContentToJSON(
  generatedAttachmentContent: GeneratedAttachmentContent,
): string {
  return JSON.stringify(
    GeneratedAttachmentContent$outboundSchema.parse(generatedAttachmentContent),
  );
}

export function generatedAttachmentContentFromJSON(
  jsonString: string,
): SafeParseResult<GeneratedAttachmentContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GeneratedAttachmentContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GeneratedAttachmentContent' from JSON`,
  );
}
