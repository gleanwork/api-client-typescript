/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAgentInputsRequest = {
  /**
   * The id of the agent.
   */
  agentId?: string | undefined;
};

/** @internal */
export const GetAgentInputsRequest$inboundSchema: z.ZodType<
  GetAgentInputsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  agentId: z.string().optional(),
});

/** @internal */
export type GetAgentInputsRequest$Outbound = {
  agentId?: string | undefined;
};

/** @internal */
export const GetAgentInputsRequest$outboundSchema: z.ZodType<
  GetAgentInputsRequest$Outbound,
  z.ZodTypeDef,
  GetAgentInputsRequest
> = z.object({
  agentId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAgentInputsRequest$ {
  /** @deprecated use `GetAgentInputsRequest$inboundSchema` instead. */
  export const inboundSchema = GetAgentInputsRequest$inboundSchema;
  /** @deprecated use `GetAgentInputsRequest$outboundSchema` instead. */
  export const outboundSchema = GetAgentInputsRequest$outboundSchema;
  /** @deprecated use `GetAgentInputsRequest$Outbound` instead. */
  export type Outbound = GetAgentInputsRequest$Outbound;
}

export function getAgentInputsRequestToJSON(
  getAgentInputsRequest: GetAgentInputsRequest,
): string {
  return JSON.stringify(
    GetAgentInputsRequest$outboundSchema.parse(getAgentInputsRequest),
  );
}

export function getAgentInputsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAgentInputsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAgentInputsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAgentInputsRequest' from JSON`,
  );
}
