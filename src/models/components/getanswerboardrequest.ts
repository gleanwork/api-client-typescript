/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAnswerBoardRequest = {
  /**
   * The id of the Answer Board to be retrieved.
   */
  id: number;
};

/** @internal */
export const GetAnswerBoardRequest$inboundSchema: z.ZodType<
  GetAnswerBoardRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type GetAnswerBoardRequest$Outbound = {
  id: number;
};

/** @internal */
export const GetAnswerBoardRequest$outboundSchema: z.ZodType<
  GetAnswerBoardRequest$Outbound,
  z.ZodTypeDef,
  GetAnswerBoardRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAnswerBoardRequest$ {
  /** @deprecated use `GetAnswerBoardRequest$inboundSchema` instead. */
  export const inboundSchema = GetAnswerBoardRequest$inboundSchema;
  /** @deprecated use `GetAnswerBoardRequest$outboundSchema` instead. */
  export const outboundSchema = GetAnswerBoardRequest$outboundSchema;
  /** @deprecated use `GetAnswerBoardRequest$Outbound` instead. */
  export type Outbound = GetAnswerBoardRequest$Outbound;
}

export function getAnswerBoardRequestToJSON(
  getAnswerBoardRequest: GetAnswerBoardRequest,
): string {
  return JSON.stringify(
    GetAnswerBoardRequest$outboundSchema.parse(getAnswerBoardRequest),
  );
}

export function getAnswerBoardRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAnswerBoardRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAnswerBoardRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAnswerBoardRequest' from JSON`,
  );
}
