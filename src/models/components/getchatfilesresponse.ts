/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChatFile,
  ChatFile$inboundSchema,
  ChatFile$Outbound,
  ChatFile$outboundSchema,
} from "./chatfile.js";

export type GetChatFilesResponse = {
  /**
   * A map of file IDs to ChatFile structs.
   */
  files?: { [k: string]: ChatFile } | undefined;
};

/** @internal */
export const GetChatFilesResponse$inboundSchema: z.ZodType<
  GetChatFilesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  files: z.record(ChatFile$inboundSchema).optional(),
});

/** @internal */
export type GetChatFilesResponse$Outbound = {
  files?: { [k: string]: ChatFile$Outbound } | undefined;
};

/** @internal */
export const GetChatFilesResponse$outboundSchema: z.ZodType<
  GetChatFilesResponse$Outbound,
  z.ZodTypeDef,
  GetChatFilesResponse
> = z.object({
  files: z.record(ChatFile$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChatFilesResponse$ {
  /** @deprecated use `GetChatFilesResponse$inboundSchema` instead. */
  export const inboundSchema = GetChatFilesResponse$inboundSchema;
  /** @deprecated use `GetChatFilesResponse$outboundSchema` instead. */
  export const outboundSchema = GetChatFilesResponse$outboundSchema;
  /** @deprecated use `GetChatFilesResponse$Outbound` instead. */
  export type Outbound = GetChatFilesResponse$Outbound;
}

export function getChatFilesResponseToJSON(
  getChatFilesResponse: GetChatFilesResponse,
): string {
  return JSON.stringify(
    GetChatFilesResponse$outboundSchema.parse(getChatFilesResponse),
  );
}

export function getChatFilesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetChatFilesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetChatFilesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetChatFilesResponse' from JSON`,
  );
}
