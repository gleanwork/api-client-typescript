/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetDisplayableListsRequest = {
  ids: Array<number>;
};

/** @internal */
export const GetDisplayableListsRequest$inboundSchema: z.ZodType<
  GetDisplayableListsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ids: z.array(z.number().int()),
});

/** @internal */
export type GetDisplayableListsRequest$Outbound = {
  ids: Array<number>;
};

/** @internal */
export const GetDisplayableListsRequest$outboundSchema: z.ZodType<
  GetDisplayableListsRequest$Outbound,
  z.ZodTypeDef,
  GetDisplayableListsRequest
> = z.object({
  ids: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDisplayableListsRequest$ {
  /** @deprecated use `GetDisplayableListsRequest$inboundSchema` instead. */
  export const inboundSchema = GetDisplayableListsRequest$inboundSchema;
  /** @deprecated use `GetDisplayableListsRequest$outboundSchema` instead. */
  export const outboundSchema = GetDisplayableListsRequest$outboundSchema;
  /** @deprecated use `GetDisplayableListsRequest$Outbound` instead. */
  export type Outbound = GetDisplayableListsRequest$Outbound;
}

export function getDisplayableListsRequestToJSON(
  getDisplayableListsRequest: GetDisplayableListsRequest,
): string {
  return JSON.stringify(
    GetDisplayableListsRequest$outboundSchema.parse(getDisplayableListsRequest),
  );
}

export function getDisplayableListsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetDisplayableListsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetDisplayableListsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDisplayableListsRequest' from JSON`,
  );
}
