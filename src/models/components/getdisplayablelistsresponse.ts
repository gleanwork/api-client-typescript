/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DisplayableList,
  DisplayableList$inboundSchema,
  DisplayableList$Outbound,
  DisplayableList$outboundSchema,
} from "./displayablelist.js";

export type GetDisplayableListsResponse = {
  items: Array<DisplayableList>;
};

/** @internal */
export const GetDisplayableListsResponse$inboundSchema: z.ZodType<
  GetDisplayableListsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(DisplayableList$inboundSchema),
});

/** @internal */
export type GetDisplayableListsResponse$Outbound = {
  items: Array<DisplayableList$Outbound>;
};

/** @internal */
export const GetDisplayableListsResponse$outboundSchema: z.ZodType<
  GetDisplayableListsResponse$Outbound,
  z.ZodTypeDef,
  GetDisplayableListsResponse
> = z.object({
  items: z.array(DisplayableList$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDisplayableListsResponse$ {
  /** @deprecated use `GetDisplayableListsResponse$inboundSchema` instead. */
  export const inboundSchema = GetDisplayableListsResponse$inboundSchema;
  /** @deprecated use `GetDisplayableListsResponse$outboundSchema` instead. */
  export const outboundSchema = GetDisplayableListsResponse$outboundSchema;
  /** @deprecated use `GetDisplayableListsResponse$Outbound` instead. */
  export type Outbound = GetDisplayableListsResponse$Outbound;
}

export function getDisplayableListsResponseToJSON(
  getDisplayableListsResponse: GetDisplayableListsResponse,
): string {
  return JSON.stringify(
    GetDisplayableListsResponse$outboundSchema.parse(
      getDisplayableListsResponse,
    ),
  );
}

export function getDisplayableListsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetDisplayableListsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetDisplayableListsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDisplayableListsResponse' from JSON`,
  );
}
