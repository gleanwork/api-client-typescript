/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Document,
  Document$inboundSchema,
  Document$Outbound,
  Document$outboundSchema,
} from "./document.js";

export type GetDocumentsByFacetsResponse = {
  /**
   * The document details, ordered by score.
   */
  documents?: Array<Document> | undefined;
  /**
   * Whether more results are available. Use cursor to retrieve them.
   */
  hasMoreResults?: boolean | undefined;
  /**
   * Cursor that indicates the start of the next page of results. To be passed in "more" requests for this query.
   */
  cursor?: string | undefined;
};

/** @internal */
export const GetDocumentsByFacetsResponse$inboundSchema: z.ZodType<
  GetDocumentsByFacetsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  documents: z.array(Document$inboundSchema).optional(),
  hasMoreResults: z.boolean().optional(),
  cursor: z.string().optional(),
});

/** @internal */
export type GetDocumentsByFacetsResponse$Outbound = {
  documents?: Array<Document$Outbound> | undefined;
  hasMoreResults?: boolean | undefined;
  cursor?: string | undefined;
};

/** @internal */
export const GetDocumentsByFacetsResponse$outboundSchema: z.ZodType<
  GetDocumentsByFacetsResponse$Outbound,
  z.ZodTypeDef,
  GetDocumentsByFacetsResponse
> = z.object({
  documents: z.array(Document$outboundSchema).optional(),
  hasMoreResults: z.boolean().optional(),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDocumentsByFacetsResponse$ {
  /** @deprecated use `GetDocumentsByFacetsResponse$inboundSchema` instead. */
  export const inboundSchema = GetDocumentsByFacetsResponse$inboundSchema;
  /** @deprecated use `GetDocumentsByFacetsResponse$outboundSchema` instead. */
  export const outboundSchema = GetDocumentsByFacetsResponse$outboundSchema;
  /** @deprecated use `GetDocumentsByFacetsResponse$Outbound` instead. */
  export type Outbound = GetDocumentsByFacetsResponse$Outbound;
}

export function getDocumentsByFacetsResponseToJSON(
  getDocumentsByFacetsResponse: GetDocumentsByFacetsResponse,
): string {
  return JSON.stringify(
    GetDocumentsByFacetsResponse$outboundSchema.parse(
      getDocumentsByFacetsResponse,
    ),
  );
}

export function getDocumentsByFacetsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetDocumentsByFacetsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetDocumentsByFacetsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDocumentsByFacetsResponse' from JSON`,
  );
}
