/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DocumentVisibilityOverride,
  DocumentVisibilityOverride$inboundSchema,
  DocumentVisibilityOverride$Outbound,
  DocumentVisibilityOverride$outboundSchema,
} from "./documentvisibilityoverride.js";

export type GetDocumentVisibilityOverridesResponse = {
  visibilityOverrides?: Array<DocumentVisibilityOverride> | undefined;
};

/** @internal */
export const GetDocumentVisibilityOverridesResponse$inboundSchema: z.ZodType<
  GetDocumentVisibilityOverridesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  visibilityOverrides: z.array(DocumentVisibilityOverride$inboundSchema)
    .optional(),
});

/** @internal */
export type GetDocumentVisibilityOverridesResponse$Outbound = {
  visibilityOverrides?: Array<DocumentVisibilityOverride$Outbound> | undefined;
};

/** @internal */
export const GetDocumentVisibilityOverridesResponse$outboundSchema: z.ZodType<
  GetDocumentVisibilityOverridesResponse$Outbound,
  z.ZodTypeDef,
  GetDocumentVisibilityOverridesResponse
> = z.object({
  visibilityOverrides: z.array(DocumentVisibilityOverride$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDocumentVisibilityOverridesResponse$ {
  /** @deprecated use `GetDocumentVisibilityOverridesResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetDocumentVisibilityOverridesResponse$inboundSchema;
  /** @deprecated use `GetDocumentVisibilityOverridesResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetDocumentVisibilityOverridesResponse$outboundSchema;
  /** @deprecated use `GetDocumentVisibilityOverridesResponse$Outbound` instead. */
  export type Outbound = GetDocumentVisibilityOverridesResponse$Outbound;
}

export function getDocumentVisibilityOverridesResponseToJSON(
  getDocumentVisibilityOverridesResponse:
    GetDocumentVisibilityOverridesResponse,
): string {
  return JSON.stringify(
    GetDocumentVisibilityOverridesResponse$outboundSchema.parse(
      getDocumentVisibilityOverridesResponse,
    ),
  );
}

export function getDocumentVisibilityOverridesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetDocumentVisibilityOverridesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetDocumentVisibilityOverridesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDocumentVisibilityOverridesResponse' from JSON`,
  );
}
