/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Shortcut,
  Shortcut$inboundSchema,
  Shortcut$Outbound,
  Shortcut$outboundSchema,
} from "./shortcut.js";

export type GetSimilarShortcutsResponse = {
  /**
   * Shortcuts with similar aliases to the given. Includes shortcut with the exact alias if it exists.
   */
  shortcuts: Array<Shortcut>;
};

/** @internal */
export const GetSimilarShortcutsResponse$inboundSchema: z.ZodType<
  GetSimilarShortcutsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  shortcuts: z.array(Shortcut$inboundSchema),
});

/** @internal */
export type GetSimilarShortcutsResponse$Outbound = {
  shortcuts: Array<Shortcut$Outbound>;
};

/** @internal */
export const GetSimilarShortcutsResponse$outboundSchema: z.ZodType<
  GetSimilarShortcutsResponse$Outbound,
  z.ZodTypeDef,
  GetSimilarShortcutsResponse
> = z.object({
  shortcuts: z.array(Shortcut$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSimilarShortcutsResponse$ {
  /** @deprecated use `GetSimilarShortcutsResponse$inboundSchema` instead. */
  export const inboundSchema = GetSimilarShortcutsResponse$inboundSchema;
  /** @deprecated use `GetSimilarShortcutsResponse$outboundSchema` instead. */
  export const outboundSchema = GetSimilarShortcutsResponse$outboundSchema;
  /** @deprecated use `GetSimilarShortcutsResponse$Outbound` instead. */
  export type Outbound = GetSimilarShortcutsResponse$Outbound;
}

export function getSimilarShortcutsResponseToJSON(
  getSimilarShortcutsResponse: GetSimilarShortcutsResponse,
): string {
  return JSON.stringify(
    GetSimilarShortcutsResponse$outboundSchema.parse(
      getSimilarShortcutsResponse,
    ),
  );
}

export function getSimilarShortcutsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetSimilarShortcutsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSimilarShortcutsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSimilarShortcutsResponse' from JSON`,
  );
}
