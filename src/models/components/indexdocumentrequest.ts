/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DocumentDefinition,
  DocumentDefinition$inboundSchema,
  DocumentDefinition$Outbound,
  DocumentDefinition$outboundSchema,
} from "./documentdefinition.js";

/**
 * Describes the request body of the /indexdocument API call
 */
export type IndexDocumentRequest = {
  /**
   * Version number for document for optimistic concurrency control. If absent or 0 then no version checks are done.
   */
  version?: number | undefined;
  /**
   * Indexable document structure
   */
  document: DocumentDefinition;
};

/** @internal */
export const IndexDocumentRequest$inboundSchema: z.ZodType<
  IndexDocumentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  version: z.number().int().optional(),
  document: DocumentDefinition$inboundSchema,
});

/** @internal */
export type IndexDocumentRequest$Outbound = {
  version?: number | undefined;
  document: DocumentDefinition$Outbound;
};

/** @internal */
export const IndexDocumentRequest$outboundSchema: z.ZodType<
  IndexDocumentRequest$Outbound,
  z.ZodTypeDef,
  IndexDocumentRequest
> = z.object({
  version: z.number().int().optional(),
  document: DocumentDefinition$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IndexDocumentRequest$ {
  /** @deprecated use `IndexDocumentRequest$inboundSchema` instead. */
  export const inboundSchema = IndexDocumentRequest$inboundSchema;
  /** @deprecated use `IndexDocumentRequest$outboundSchema` instead. */
  export const outboundSchema = IndexDocumentRequest$outboundSchema;
  /** @deprecated use `IndexDocumentRequest$Outbound` instead. */
  export type Outbound = IndexDocumentRequest$Outbound;
}

export function indexDocumentRequestToJSON(
  indexDocumentRequest: IndexDocumentRequest,
): string {
  return JSON.stringify(
    IndexDocumentRequest$outboundSchema.parse(indexDocumentRequest),
  );
}

export function indexDocumentRequestFromJSON(
  jsonString: string,
): SafeParseResult<IndexDocumentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IndexDocumentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IndexDocumentRequest' from JSON`,
  );
}
