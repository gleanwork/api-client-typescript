/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AnswerBoardResult,
  AnswerBoardResult$inboundSchema,
  AnswerBoardResult$Outbound,
  AnswerBoardResult$outboundSchema,
} from "./answerboardresult.js";

export type ListAnswerBoardsResponse = {
  /**
   * List of all Answer Boards, no Answers are included.
   */
  boardResults: Array<AnswerBoardResult>;
};

/** @internal */
export const ListAnswerBoardsResponse$inboundSchema: z.ZodType<
  ListAnswerBoardsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  boardResults: z.array(AnswerBoardResult$inboundSchema),
});

/** @internal */
export type ListAnswerBoardsResponse$Outbound = {
  boardResults: Array<AnswerBoardResult$Outbound>;
};

/** @internal */
export const ListAnswerBoardsResponse$outboundSchema: z.ZodType<
  ListAnswerBoardsResponse$Outbound,
  z.ZodTypeDef,
  ListAnswerBoardsResponse
> = z.object({
  boardResults: z.array(AnswerBoardResult$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAnswerBoardsResponse$ {
  /** @deprecated use `ListAnswerBoardsResponse$inboundSchema` instead. */
  export const inboundSchema = ListAnswerBoardsResponse$inboundSchema;
  /** @deprecated use `ListAnswerBoardsResponse$outboundSchema` instead. */
  export const outboundSchema = ListAnswerBoardsResponse$outboundSchema;
  /** @deprecated use `ListAnswerBoardsResponse$Outbound` instead. */
  export type Outbound = ListAnswerBoardsResponse$Outbound;
}

export function listAnswerBoardsResponseToJSON(
  listAnswerBoardsResponse: ListAnswerBoardsResponse,
): string {
  return JSON.stringify(
    ListAnswerBoardsResponse$outboundSchema.parse(listAnswerBoardsResponse),
  );
}

export function listAnswerBoardsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListAnswerBoardsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAnswerBoardsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAnswerBoardsResponse' from JSON`,
  );
}
