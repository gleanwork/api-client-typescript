/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListAnswersRequest = {
  /**
   * The Answer Board Id to list answers on.
   */
  boardId?: number | undefined;
};

/** @internal */
export const ListAnswersRequest$inboundSchema: z.ZodType<
  ListAnswersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  boardId: z.number().int().optional(),
});

/** @internal */
export type ListAnswersRequest$Outbound = {
  boardId?: number | undefined;
};

/** @internal */
export const ListAnswersRequest$outboundSchema: z.ZodType<
  ListAnswersRequest$Outbound,
  z.ZodTypeDef,
  ListAnswersRequest
> = z.object({
  boardId: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAnswersRequest$ {
  /** @deprecated use `ListAnswersRequest$inboundSchema` instead. */
  export const inboundSchema = ListAnswersRequest$inboundSchema;
  /** @deprecated use `ListAnswersRequest$outboundSchema` instead. */
  export const outboundSchema = ListAnswersRequest$outboundSchema;
  /** @deprecated use `ListAnswersRequest$Outbound` instead. */
  export type Outbound = ListAnswersRequest$Outbound;
}

export function listAnswersRequestToJSON(
  listAnswersRequest: ListAnswersRequest,
): string {
  return JSON.stringify(
    ListAnswersRequest$outboundSchema.parse(listAnswersRequest),
  );
}

export function listAnswersRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListAnswersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAnswersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAnswersRequest' from JSON`,
  );
}
