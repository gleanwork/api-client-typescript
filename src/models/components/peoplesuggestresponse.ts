/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PersonSuggestionList,
  PersonSuggestionList$inboundSchema,
  PersonSuggestionList$Outbound,
  PersonSuggestionList$outboundSchema,
} from "./personsuggestionlist.js";

export type PeopleSuggestResponse = {
  /**
   * Information about people suggestions for asked categories.
   */
  suggestions?: Array<PersonSuggestionList> | undefined;
};

/** @internal */
export const PeopleSuggestResponse$inboundSchema: z.ZodType<
  PeopleSuggestResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  suggestions: z.array(PersonSuggestionList$inboundSchema).optional(),
});

/** @internal */
export type PeopleSuggestResponse$Outbound = {
  suggestions?: Array<PersonSuggestionList$Outbound> | undefined;
};

/** @internal */
export const PeopleSuggestResponse$outboundSchema: z.ZodType<
  PeopleSuggestResponse$Outbound,
  z.ZodTypeDef,
  PeopleSuggestResponse
> = z.object({
  suggestions: z.array(PersonSuggestionList$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PeopleSuggestResponse$ {
  /** @deprecated use `PeopleSuggestResponse$inboundSchema` instead. */
  export const inboundSchema = PeopleSuggestResponse$inboundSchema;
  /** @deprecated use `PeopleSuggestResponse$outboundSchema` instead. */
  export const outboundSchema = PeopleSuggestResponse$outboundSchema;
  /** @deprecated use `PeopleSuggestResponse$Outbound` instead. */
  export type Outbound = PeopleSuggestResponse$Outbound;
}

export function peopleSuggestResponseToJSON(
  peopleSuggestResponse: PeopleSuggestResponse,
): string {
  return JSON.stringify(
    PeopleSuggestResponse$outboundSchema.parse(peopleSuggestResponse),
  );
}

export function peopleSuggestResponseFromJSON(
  jsonString: string,
): SafeParseResult<PeopleSuggestResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PeopleSuggestResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PeopleSuggestResponse' from JSON`,
  );
}
