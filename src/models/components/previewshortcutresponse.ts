/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Shortcut,
  Shortcut$inboundSchema,
  Shortcut$Outbound,
  Shortcut$outboundSchema,
} from "./shortcut.js";
import {
  ShortcutError,
  ShortcutError$inboundSchema,
  ShortcutError$Outbound,
  ShortcutError$outboundSchema,
} from "./shortcuterror.js";

export type PreviewShortcutResponse = {
  shortcut?: Shortcut | undefined;
  /**
   * Exising shortcuts that have a similar destination URL.
   */
  existingUrlShortcuts?: Array<Shortcut> | undefined;
  error?: ShortcutError | undefined;
};

/** @internal */
export const PreviewShortcutResponse$inboundSchema: z.ZodType<
  PreviewShortcutResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  shortcut: Shortcut$inboundSchema.optional(),
  existingUrlShortcuts: z.array(Shortcut$inboundSchema).optional(),
  error: ShortcutError$inboundSchema.optional(),
});

/** @internal */
export type PreviewShortcutResponse$Outbound = {
  shortcut?: Shortcut$Outbound | undefined;
  existingUrlShortcuts?: Array<Shortcut$Outbound> | undefined;
  error?: ShortcutError$Outbound | undefined;
};

/** @internal */
export const PreviewShortcutResponse$outboundSchema: z.ZodType<
  PreviewShortcutResponse$Outbound,
  z.ZodTypeDef,
  PreviewShortcutResponse
> = z.object({
  shortcut: Shortcut$outboundSchema.optional(),
  existingUrlShortcuts: z.array(Shortcut$outboundSchema).optional(),
  error: ShortcutError$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreviewShortcutResponse$ {
  /** @deprecated use `PreviewShortcutResponse$inboundSchema` instead. */
  export const inboundSchema = PreviewShortcutResponse$inboundSchema;
  /** @deprecated use `PreviewShortcutResponse$outboundSchema` instead. */
  export const outboundSchema = PreviewShortcutResponse$outboundSchema;
  /** @deprecated use `PreviewShortcutResponse$Outbound` instead. */
  export type Outbound = PreviewShortcutResponse$Outbound;
}

export function previewShortcutResponseToJSON(
  previewShortcutResponse: PreviewShortcutResponse,
): string {
  return JSON.stringify(
    PreviewShortcutResponse$outboundSchema.parse(previewShortcutResponse),
  );
}

export function previewShortcutResponseFromJSON(
  jsonString: string,
): SafeParseResult<PreviewShortcutResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PreviewShortcutResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PreviewShortcutResponse' from JSON`,
  );
}
