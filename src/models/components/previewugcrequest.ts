/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DocumentSpecUnion,
  DocumentSpecUnion$inboundSchema,
  DocumentSpecUnion$Outbound,
  DocumentSpecUnion$outboundSchema,
} from "./documentspecunion.js";
import {
  UgcDraft,
  UgcDraft$inboundSchema,
  UgcDraft$Outbound,
  UgcDraft$outboundSchema,
} from "./ugcdraft.js";
import {
  UgcType,
  UgcType$inboundSchema,
  UgcType$outboundSchema,
} from "./ugctype.js";

export type PreviewUgcRequest = {
  draft?: UgcDraft | undefined;
  draftSpec?: DocumentSpecUnion | undefined;
  type?: UgcType | undefined;
};

/** @internal */
export const PreviewUgcRequest$inboundSchema: z.ZodType<
  PreviewUgcRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  draft: UgcDraft$inboundSchema.optional(),
  draftSpec: DocumentSpecUnion$inboundSchema.optional(),
  type: UgcType$inboundSchema.optional(),
});

/** @internal */
export type PreviewUgcRequest$Outbound = {
  draft?: UgcDraft$Outbound | undefined;
  draftSpec?: DocumentSpecUnion$Outbound | undefined;
  type?: string | undefined;
};

/** @internal */
export const PreviewUgcRequest$outboundSchema: z.ZodType<
  PreviewUgcRequest$Outbound,
  z.ZodTypeDef,
  PreviewUgcRequest
> = z.object({
  draft: UgcDraft$outboundSchema.optional(),
  draftSpec: DocumentSpecUnion$outboundSchema.optional(),
  type: UgcType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreviewUgcRequest$ {
  /** @deprecated use `PreviewUgcRequest$inboundSchema` instead. */
  export const inboundSchema = PreviewUgcRequest$inboundSchema;
  /** @deprecated use `PreviewUgcRequest$outboundSchema` instead. */
  export const outboundSchema = PreviewUgcRequest$outboundSchema;
  /** @deprecated use `PreviewUgcRequest$Outbound` instead. */
  export type Outbound = PreviewUgcRequest$Outbound;
}

export function previewUgcRequestToJSON(
  previewUgcRequest: PreviewUgcRequest,
): string {
  return JSON.stringify(
    PreviewUgcRequest$outboundSchema.parse(previewUgcRequest),
  );
}

export function previewUgcRequestFromJSON(
  jsonString: string,
): SafeParseResult<PreviewUgcRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PreviewUgcRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PreviewUgcRequest' from JSON`,
  );
}
