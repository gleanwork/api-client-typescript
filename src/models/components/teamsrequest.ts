/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const TeamsRequestIncludeField = {
  TeamsDetails: "TEAMS_DETAILS",
} as const;
export type TeamsRequestIncludeField = ClosedEnum<
  typeof TeamsRequestIncludeField
>;

export type TeamsRequest = {
  /**
   * The IDs of the teams to retrieve.
   */
  ids?: Array<string> | undefined;
  /**
   * List of teams fields to return that aren't returned by default
   */
  includeFields?: Array<TeamsRequestIncludeField> | undefined;
};

/** @internal */
export const TeamsRequestIncludeField$inboundSchema: z.ZodNativeEnum<
  typeof TeamsRequestIncludeField
> = z.nativeEnum(TeamsRequestIncludeField);

/** @internal */
export const TeamsRequestIncludeField$outboundSchema: z.ZodNativeEnum<
  typeof TeamsRequestIncludeField
> = TeamsRequestIncludeField$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TeamsRequestIncludeField$ {
  /** @deprecated use `TeamsRequestIncludeField$inboundSchema` instead. */
  export const inboundSchema = TeamsRequestIncludeField$inboundSchema;
  /** @deprecated use `TeamsRequestIncludeField$outboundSchema` instead. */
  export const outboundSchema = TeamsRequestIncludeField$outboundSchema;
}

/** @internal */
export const TeamsRequest$inboundSchema: z.ZodType<
  TeamsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ids: z.array(z.string()).optional(),
  includeFields: z.array(TeamsRequestIncludeField$inboundSchema).optional(),
});

/** @internal */
export type TeamsRequest$Outbound = {
  ids?: Array<string> | undefined;
  includeFields?: Array<string> | undefined;
};

/** @internal */
export const TeamsRequest$outboundSchema: z.ZodType<
  TeamsRequest$Outbound,
  z.ZodTypeDef,
  TeamsRequest
> = z.object({
  ids: z.array(z.string()).optional(),
  includeFields: z.array(TeamsRequestIncludeField$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TeamsRequest$ {
  /** @deprecated use `TeamsRequest$inboundSchema` instead. */
  export const inboundSchema = TeamsRequest$inboundSchema;
  /** @deprecated use `TeamsRequest$outboundSchema` instead. */
  export const outboundSchema = TeamsRequest$outboundSchema;
  /** @deprecated use `TeamsRequest$Outbound` instead. */
  export type Outbound = TeamsRequest$Outbound;
}

export function teamsRequestToJSON(teamsRequest: TeamsRequest): string {
  return JSON.stringify(TeamsRequest$outboundSchema.parse(teamsRequest));
}

export function teamsRequestFromJSON(
  jsonString: string,
): SafeParseResult<TeamsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TeamsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TeamsRequest' from JSON`,
  );
}
