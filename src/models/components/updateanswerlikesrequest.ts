/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const UpdateAnswerLikesRequestAction = {
  Like: "LIKE",
  Unlike: "UNLIKE",
} as const;
export type UpdateAnswerLikesRequestAction = ClosedEnum<
  typeof UpdateAnswerLikesRequestAction
>;

export type UpdateAnswerLikesRequest = {
  /**
   * The opaque id of the answer to like.
   */
  answerId: number;
  /**
   * Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID is unavailable. If both are available, using the Answer ID is preferred.
   */
  answerDocId?: string | undefined;
  action: UpdateAnswerLikesRequestAction;
};

/** @internal */
export const UpdateAnswerLikesRequestAction$inboundSchema: z.ZodNativeEnum<
  typeof UpdateAnswerLikesRequestAction
> = z.nativeEnum(UpdateAnswerLikesRequestAction);

/** @internal */
export const UpdateAnswerLikesRequestAction$outboundSchema: z.ZodNativeEnum<
  typeof UpdateAnswerLikesRequestAction
> = UpdateAnswerLikesRequestAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAnswerLikesRequestAction$ {
  /** @deprecated use `UpdateAnswerLikesRequestAction$inboundSchema` instead. */
  export const inboundSchema = UpdateAnswerLikesRequestAction$inboundSchema;
  /** @deprecated use `UpdateAnswerLikesRequestAction$outboundSchema` instead. */
  export const outboundSchema = UpdateAnswerLikesRequestAction$outboundSchema;
}

/** @internal */
export const UpdateAnswerLikesRequest$inboundSchema: z.ZodType<
  UpdateAnswerLikesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  answerId: z.number().int(),
  answerDocId: z.string().optional(),
  action: UpdateAnswerLikesRequestAction$inboundSchema,
});

/** @internal */
export type UpdateAnswerLikesRequest$Outbound = {
  answerId: number;
  answerDocId?: string | undefined;
  action: string;
};

/** @internal */
export const UpdateAnswerLikesRequest$outboundSchema: z.ZodType<
  UpdateAnswerLikesRequest$Outbound,
  z.ZodTypeDef,
  UpdateAnswerLikesRequest
> = z.object({
  answerId: z.number().int(),
  answerDocId: z.string().optional(),
  action: UpdateAnswerLikesRequestAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAnswerLikesRequest$ {
  /** @deprecated use `UpdateAnswerLikesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateAnswerLikesRequest$inboundSchema;
  /** @deprecated use `UpdateAnswerLikesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateAnswerLikesRequest$outboundSchema;
  /** @deprecated use `UpdateAnswerLikesRequest$Outbound` instead. */
  export type Outbound = UpdateAnswerLikesRequest$Outbound;
}

export function updateAnswerLikesRequestToJSON(
  updateAnswerLikesRequest: UpdateAnswerLikesRequest,
): string {
  return JSON.stringify(
    UpdateAnswerLikesRequest$outboundSchema.parse(updateAnswerLikesRequest),
  );
}

export function updateAnswerLikesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAnswerLikesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAnswerLikesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAnswerLikesRequest' from JSON`,
  );
}
