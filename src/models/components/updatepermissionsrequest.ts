/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DocumentPermissionsDefinition,
  DocumentPermissionsDefinition$inboundSchema,
  DocumentPermissionsDefinition$Outbound,
  DocumentPermissionsDefinition$outboundSchema,
} from "./documentpermissionsdefinition.js";

/**
 * Describes the request body of the /updatepermissions API call
 */
export type UpdatePermissionsRequest = {
  datasource: string;
  /**
   * The type of the document (Case, KnowledgeArticle for Salesforce for example). It cannot have spaces or _
   */
  objectType?: string | undefined;
  /**
   * The datasource specific id for the document. This field is case insensitive and should not be more than 200 characters in length.
   */
  id?: string | undefined;
  /**
   * The permalink for viewing the document. **Note: viewURL is a required field if id was not set when uploading the document.**'
   *
   * @remarks
   */
  viewURL?: string | undefined;
  /**
   * describes the access control details of the document
   */
  permissions: DocumentPermissionsDefinition;
};

/** @internal */
export const UpdatePermissionsRequest$inboundSchema: z.ZodType<
  UpdatePermissionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  datasource: z.string(),
  objectType: z.string().optional(),
  id: z.string().optional(),
  viewURL: z.string().optional(),
  permissions: DocumentPermissionsDefinition$inboundSchema,
});

/** @internal */
export type UpdatePermissionsRequest$Outbound = {
  datasource: string;
  objectType?: string | undefined;
  id?: string | undefined;
  viewURL?: string | undefined;
  permissions: DocumentPermissionsDefinition$Outbound;
};

/** @internal */
export const UpdatePermissionsRequest$outboundSchema: z.ZodType<
  UpdatePermissionsRequest$Outbound,
  z.ZodTypeDef,
  UpdatePermissionsRequest
> = z.object({
  datasource: z.string(),
  objectType: z.string().optional(),
  id: z.string().optional(),
  viewURL: z.string().optional(),
  permissions: DocumentPermissionsDefinition$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePermissionsRequest$ {
  /** @deprecated use `UpdatePermissionsRequest$inboundSchema` instead. */
  export const inboundSchema = UpdatePermissionsRequest$inboundSchema;
  /** @deprecated use `UpdatePermissionsRequest$outboundSchema` instead. */
  export const outboundSchema = UpdatePermissionsRequest$outboundSchema;
  /** @deprecated use `UpdatePermissionsRequest$Outbound` instead. */
  export type Outbound = UpdatePermissionsRequest$Outbound;
}

export function updatePermissionsRequestToJSON(
  updatePermissionsRequest: UpdatePermissionsRequest,
): string {
  return JSON.stringify(
    UpdatePermissionsRequest$outboundSchema.parse(updatePermissionsRequest),
  );
}

export function updatePermissionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePermissionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePermissionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePermissionsRequest' from JSON`,
  );
}
