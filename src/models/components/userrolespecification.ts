/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DocumentSpecUnion,
  DocumentSpecUnion$inboundSchema,
  DocumentSpecUnion$Outbound,
  DocumentSpecUnion$outboundSchema,
} from "./documentspecunion.js";
import {
  Group,
  Group$inboundSchema,
  Group$Outbound,
  Group$outboundSchema,
} from "./group.js";
import {
  Person,
  Person$inboundSchema,
  Person$Outbound,
  Person$outboundSchema,
} from "./person.js";
import {
  UserRole,
  UserRole$inboundSchema,
  UserRole$outboundSchema,
} from "./userrole.js";

export type UserRoleSpecification = {
  sourceDocumentSpec?: DocumentSpecUnion | undefined;
  person?: Person | undefined;
  group?: Group | undefined;
  /**
   * A user's role with respect to a specific document.
   */
  role: UserRole;
};

/** @internal */
export const UserRoleSpecification$inboundSchema: z.ZodType<
  UserRoleSpecification,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourceDocumentSpec: DocumentSpecUnion$inboundSchema.optional(),
  person: z.lazy(() => Person$inboundSchema).optional(),
  group: Group$inboundSchema.optional(),
  role: UserRole$inboundSchema,
});

/** @internal */
export type UserRoleSpecification$Outbound = {
  sourceDocumentSpec?: DocumentSpecUnion$Outbound | undefined;
  person?: Person$Outbound | undefined;
  group?: Group$Outbound | undefined;
  role: string;
};

/** @internal */
export const UserRoleSpecification$outboundSchema: z.ZodType<
  UserRoleSpecification$Outbound,
  z.ZodTypeDef,
  UserRoleSpecification
> = z.object({
  sourceDocumentSpec: DocumentSpecUnion$outboundSchema.optional(),
  person: z.lazy(() => Person$outboundSchema).optional(),
  group: Group$outboundSchema.optional(),
  role: UserRole$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserRoleSpecification$ {
  /** @deprecated use `UserRoleSpecification$inboundSchema` instead. */
  export const inboundSchema = UserRoleSpecification$inboundSchema;
  /** @deprecated use `UserRoleSpecification$outboundSchema` instead. */
  export const outboundSchema = UserRoleSpecification$outboundSchema;
  /** @deprecated use `UserRoleSpecification$Outbound` instead. */
  export type Outbound = UserRoleSpecification$Outbound;
}

export function userRoleSpecificationToJSON(
  userRoleSpecification: UserRoleSpecification,
): string {
  return JSON.stringify(
    UserRoleSpecification$outboundSchema.parse(userRoleSpecification),
  );
}

export function userRoleSpecificationFromJSON(
  jsonString: string,
): SafeParseResult<UserRoleSpecification, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserRoleSpecification$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserRoleSpecification' from JSON`,
  );
}
