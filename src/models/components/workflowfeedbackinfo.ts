/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Where the feedback of the workflow originated from
 */
export const WorkflowFeedbackInfoSource = {
  ZeroState: "ZERO_STATE",
  Library: "LIBRARY",
  Homepage: "HOMEPAGE",
} as const;
/**
 * Where the feedback of the workflow originated from
 */
export type WorkflowFeedbackInfoSource = ClosedEnum<
  typeof WorkflowFeedbackInfoSource
>;

export type WorkflowFeedbackInfo = {
  /**
   * Where the feedback of the workflow originated from
   */
  source?: WorkflowFeedbackInfoSource | undefined;
};

/** @internal */
export const WorkflowFeedbackInfoSource$inboundSchema: z.ZodNativeEnum<
  typeof WorkflowFeedbackInfoSource
> = z.nativeEnum(WorkflowFeedbackInfoSource);

/** @internal */
export const WorkflowFeedbackInfoSource$outboundSchema: z.ZodNativeEnum<
  typeof WorkflowFeedbackInfoSource
> = WorkflowFeedbackInfoSource$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkflowFeedbackInfoSource$ {
  /** @deprecated use `WorkflowFeedbackInfoSource$inboundSchema` instead. */
  export const inboundSchema = WorkflowFeedbackInfoSource$inboundSchema;
  /** @deprecated use `WorkflowFeedbackInfoSource$outboundSchema` instead. */
  export const outboundSchema = WorkflowFeedbackInfoSource$outboundSchema;
}

/** @internal */
export const WorkflowFeedbackInfo$inboundSchema: z.ZodType<
  WorkflowFeedbackInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: WorkflowFeedbackInfoSource$inboundSchema.optional(),
});

/** @internal */
export type WorkflowFeedbackInfo$Outbound = {
  source?: string | undefined;
};

/** @internal */
export const WorkflowFeedbackInfo$outboundSchema: z.ZodType<
  WorkflowFeedbackInfo$Outbound,
  z.ZodTypeDef,
  WorkflowFeedbackInfo
> = z.object({
  source: WorkflowFeedbackInfoSource$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkflowFeedbackInfo$ {
  /** @deprecated use `WorkflowFeedbackInfo$inboundSchema` instead. */
  export const inboundSchema = WorkflowFeedbackInfo$inboundSchema;
  /** @deprecated use `WorkflowFeedbackInfo$outboundSchema` instead. */
  export const outboundSchema = WorkflowFeedbackInfo$outboundSchema;
  /** @deprecated use `WorkflowFeedbackInfo$Outbound` instead. */
  export type Outbound = WorkflowFeedbackInfo$Outbound;
}

export function workflowFeedbackInfoToJSON(
  workflowFeedbackInfo: WorkflowFeedbackInfo,
): string {
  return JSON.stringify(
    WorkflowFeedbackInfo$outboundSchema.parse(workflowFeedbackInfo),
  );
}

export function workflowFeedbackInfoFromJSON(
  jsonString: string,
): SafeParseResult<WorkflowFeedbackInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WorkflowFeedbackInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WorkflowFeedbackInfo' from JSON`,
  );
}
