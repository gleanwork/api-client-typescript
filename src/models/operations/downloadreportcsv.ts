/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DownloadreportcsvRequest = {
  /**
   * The id of the report to download violations for.
   */
  id: string;
};

/** @internal */
export const DownloadreportcsvRequest$inboundSchema: z.ZodType<
  DownloadreportcsvRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DownloadreportcsvRequest$Outbound = {
  id: string;
};

/** @internal */
export const DownloadreportcsvRequest$outboundSchema: z.ZodType<
  DownloadreportcsvRequest$Outbound,
  z.ZodTypeDef,
  DownloadreportcsvRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DownloadreportcsvRequest$ {
  /** @deprecated use `DownloadreportcsvRequest$inboundSchema` instead. */
  export const inboundSchema = DownloadreportcsvRequest$inboundSchema;
  /** @deprecated use `DownloadreportcsvRequest$outboundSchema` instead. */
  export const outboundSchema = DownloadreportcsvRequest$outboundSchema;
  /** @deprecated use `DownloadreportcsvRequest$Outbound` instead. */
  export type Outbound = DownloadreportcsvRequest$Outbound;
}

export function downloadreportcsvRequestToJSON(
  downloadreportcsvRequest: DownloadreportcsvRequest,
): string {
  return JSON.stringify(
    DownloadreportcsvRequest$outboundSchema.parse(downloadreportcsvRequest),
  );
}

export function downloadreportcsvRequestFromJSON(
  jsonString: string,
): SafeParseResult<DownloadreportcsvRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DownloadreportcsvRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DownloadreportcsvRequest' from JSON`,
  );
}
