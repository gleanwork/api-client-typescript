/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EditanswerboardRequest = {
  /**
   * Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens).
   */
  xGleanActAs?: string | undefined;
  /**
   * Auth type being used to access the endpoint (should be non-empty only for global tokens).
   */
  xGleanAuthType?: string | undefined;
  /**
   * Answer Board content plus any additional metadata for the request.
   */
  editAnswerBoardRequest: components.EditAnswerBoardRequest;
};

/** @internal */
export const EditanswerboardRequest$inboundSchema: z.ZodType<
  EditanswerboardRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "X-Glean-ActAs": z.string().optional(),
  "X-Glean-Auth-Type": z.string().optional(),
  EditAnswerBoardRequest: components.EditAnswerBoardRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "X-Glean-ActAs": "xGleanActAs",
    "X-Glean-Auth-Type": "xGleanAuthType",
    "EditAnswerBoardRequest": "editAnswerBoardRequest",
  });
});

/** @internal */
export type EditanswerboardRequest$Outbound = {
  "X-Glean-ActAs"?: string | undefined;
  "X-Glean-Auth-Type"?: string | undefined;
  EditAnswerBoardRequest: components.EditAnswerBoardRequest$Outbound;
};

/** @internal */
export const EditanswerboardRequest$outboundSchema: z.ZodType<
  EditanswerboardRequest$Outbound,
  z.ZodTypeDef,
  EditanswerboardRequest
> = z.object({
  xGleanActAs: z.string().optional(),
  xGleanAuthType: z.string().optional(),
  editAnswerBoardRequest: components.EditAnswerBoardRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xGleanActAs: "X-Glean-ActAs",
    xGleanAuthType: "X-Glean-Auth-Type",
    editAnswerBoardRequest: "EditAnswerBoardRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EditanswerboardRequest$ {
  /** @deprecated use `EditanswerboardRequest$inboundSchema` instead. */
  export const inboundSchema = EditanswerboardRequest$inboundSchema;
  /** @deprecated use `EditanswerboardRequest$outboundSchema` instead. */
  export const outboundSchema = EditanswerboardRequest$outboundSchema;
  /** @deprecated use `EditanswerboardRequest$Outbound` instead. */
  export type Outbound = EditanswerboardRequest$Outbound;
}

export function editanswerboardRequestToJSON(
  editanswerboardRequest: EditanswerboardRequest,
): string {
  return JSON.stringify(
    EditanswerboardRequest$outboundSchema.parse(editanswerboardRequest),
  );
}

export function editanswerboardRequestFromJSON(
  jsonString: string,
): SafeParseResult<EditanswerboardRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EditanswerboardRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EditanswerboardRequest' from JSON`,
  );
}
