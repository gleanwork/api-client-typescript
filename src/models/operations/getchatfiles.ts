/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetchatfilesRequest = {
  /**
   * The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
   */
  timezoneOffset?: number | undefined;
  getChatFilesRequest: components.GetChatFilesRequest;
};

/** @internal */
export const GetchatfilesRequest$inboundSchema: z.ZodType<
  GetchatfilesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  timezoneOffset: z.number().int().optional(),
  GetChatFilesRequest: components.GetChatFilesRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "GetChatFilesRequest": "getChatFilesRequest",
  });
});

/** @internal */
export type GetchatfilesRequest$Outbound = {
  timezoneOffset?: number | undefined;
  GetChatFilesRequest: components.GetChatFilesRequest$Outbound;
};

/** @internal */
export const GetchatfilesRequest$outboundSchema: z.ZodType<
  GetchatfilesRequest$Outbound,
  z.ZodTypeDef,
  GetchatfilesRequest
> = z.object({
  timezoneOffset: z.number().int().optional(),
  getChatFilesRequest: components.GetChatFilesRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    getChatFilesRequest: "GetChatFilesRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetchatfilesRequest$ {
  /** @deprecated use `GetchatfilesRequest$inboundSchema` instead. */
  export const inboundSchema = GetchatfilesRequest$inboundSchema;
  /** @deprecated use `GetchatfilesRequest$outboundSchema` instead. */
  export const outboundSchema = GetchatfilesRequest$outboundSchema;
  /** @deprecated use `GetchatfilesRequest$Outbound` instead. */
  export type Outbound = GetchatfilesRequest$Outbound;
}

export function getchatfilesRequestToJSON(
  getchatfilesRequest: GetchatfilesRequest,
): string {
  return JSON.stringify(
    GetchatfilesRequest$outboundSchema.parse(getchatfilesRequest),
  );
}

export function getchatfilesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetchatfilesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetchatfilesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetchatfilesRequest' from JSON`,
  );
}
