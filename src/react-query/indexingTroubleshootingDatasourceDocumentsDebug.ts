/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  MutationKey,
  useMutation,
  UseMutationResult,
} from "@tanstack/react-query";
import { GleanCore } from "../core.js";
import { indexingTroubleshootingDatasourceDocumentsDebug } from "../funcs/indexingTroubleshootingDatasourceDocumentsDebug.js";
import { combineSignals } from "../lib/primitives.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { useGleanContext } from "./_context.js";
import { MutationHookOptions } from "./_types.js";

export type IndexingTroubleshootingDatasourceDocumentsDebugMutationVariables = {
  debugDocumentsRequest: components.DebugDocumentsRequest;
  datasource: string;
  options?: RequestOptions;
};

export type IndexingTroubleshootingDatasourceDocumentsDebugMutationData =
  components.DebugDocumentsResponse;

/**
 * Beta: Get information of a batch of documents
 *
 * @remarks
 * Gives various information that would help in debugging related to a batch of documents. Currently in beta, might undergo breaking changes without prior notice.
 *
 * Tip: Refer to the [Troubleshooting tutorial](https://developers.glean.com/docs/indexing_api/indexing_api_troubleshooting/) for more information.
 */
export function useIndexingTroubleshootingDatasourceDocumentsDebugMutation(
  options?: MutationHookOptions<
    IndexingTroubleshootingDatasourceDocumentsDebugMutationData,
    Error,
    IndexingTroubleshootingDatasourceDocumentsDebugMutationVariables
  >,
): UseMutationResult<
  IndexingTroubleshootingDatasourceDocumentsDebugMutationData,
  Error,
  IndexingTroubleshootingDatasourceDocumentsDebugMutationVariables
> {
  const client = useGleanContext();
  return useMutation({
    ...buildIndexingTroubleshootingDatasourceDocumentsDebugMutation(
      client,
      options,
    ),
    ...options,
  });
}

export function mutationKeyIndexingTroubleshootingDatasourceDocumentsDebug(): MutationKey {
  return ["@gleanwork/api-client", "documents", "debug"];
}

export function buildIndexingTroubleshootingDatasourceDocumentsDebugMutation(
  client$: GleanCore,
  hookOptions?: RequestOptions,
): {
  mutationKey: MutationKey;
  mutationFn: (
    variables: IndexingTroubleshootingDatasourceDocumentsDebugMutationVariables,
  ) => Promise<IndexingTroubleshootingDatasourceDocumentsDebugMutationData>;
} {
  return {
    mutationKey: mutationKeyIndexingTroubleshootingDatasourceDocumentsDebug(),
    mutationFn:
      function indexingTroubleshootingDatasourceDocumentsDebugMutationFn({
        debugDocumentsRequest,
        datasource,
        options,
      }): Promise<IndexingTroubleshootingDatasourceDocumentsDebugMutationData> {
        const mergedOptions = {
          ...hookOptions,
          ...options,
          fetchOptions: {
            ...hookOptions?.fetchOptions,
            ...options?.fetchOptions,
            signal: combineSignals(
              hookOptions?.fetchOptions?.signal,
              options?.fetchOptions?.signal,
            ),
          },
        };
        return unwrapAsync(indexingTroubleshootingDatasourceDocumentsDebug(
          client$,
          debugDocumentsRequest,
          datasource,
          mergedOptions,
        ));
      },
  };
}
