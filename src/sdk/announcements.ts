/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientAnnouncementsCreate } from "../funcs/clientAnnouncementsCreate.js";
import { clientAnnouncementsDelete } from "../funcs/clientAnnouncementsDelete.js";
import { clientAnnouncementsUpdate } from "../funcs/clientAnnouncementsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Announcements extends ClientSDK {
  /**
   * Create Announcement
   *
   * @remarks
   * Create a textual announcement visible to some set of users based on department and location.
   */
  async create(
    request: operations.CreateannouncementRequest,
    options?: RequestOptions,
  ): Promise<components.Announcement> {
    return unwrapAsync(clientAnnouncementsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Announcement
   *
   * @remarks
   * Delete an existing user-generated announcement.
   */
  async delete(
    request: operations.DeleteannouncementRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(clientAnnouncementsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Announcement
   *
   * @remarks
   * Update a textual announcement visible to some set of users based on department and location.
   */
  async update(
    request: operations.UpdateannouncementRequest,
    options?: RequestOptions,
  ): Promise<components.Announcement> {
    return unwrapAsync(clientAnnouncementsUpdate(
      this,
      request,
      options,
    ));
  }
}
