/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientDocumentsRetrieve } from "../funcs/clientDocumentsRetrieve.js";
import { clientDocumentsRetrieveByFacets } from "../funcs/clientDocumentsRetrieveByFacets.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { DocumentsPermissions } from "./documentspermissions.js";

export class ClientDocuments extends ClientSDK {
  private _permissions?: DocumentsPermissions;
  get permissions(): DocumentsPermissions {
    return (this._permissions ??= new DocumentsPermissions(this._options));
  }

  /**
   * Read documents
   *
   * @remarks
   * Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) for the given list of Glean Document IDs or URLs specified in the request.
   */
  async retrieve(
    request?: components.GetDocumentsRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.GetDocumentsResponse> {
    return unwrapAsync(clientDocumentsRetrieve(
      this,
      request,
      options,
    ));
  }

  /**
   * Read documents by facets
   *
   * @remarks
   * Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) macthing the given facet conditions.
   */
  async retrieveByFacets(
    request?: components.GetDocumentsByFacetsRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.GetDocumentsByFacetsResponse> {
    return unwrapAsync(clientDocumentsRetrieveByFacets(
      this,
      request,
      options,
    ));
  }
}
