/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientDocumentsGet } from "../funcs/clientDocumentsGet.js";
import { clientDocumentsGetByFacets } from "../funcs/clientDocumentsGetByFacets.js";
import { clientDocumentsGetPermissions } from "../funcs/clientDocumentsGetPermissions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ClientDocuments extends ClientSDK {
  /**
   * Read document permissions
   *
   * @remarks
   * Read the emails of all users who have access to the given document.
   */
  async getPermissions(
    getDocPermissionsRequest: components.GetDocPermissionsRequest,
    xGleanActAs?: string | undefined,
    xGleanAuthType?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.GetDocPermissionsResponse> {
    return unwrapAsync(clientDocumentsGetPermissions(
      this,
      getDocPermissionsRequest,
      xGleanActAs,
      xGleanAuthType,
      options,
    ));
  }

  /**
   * Read documents
   *
   * @remarks
   * Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) for the given list of Glean Document IDs or URLs specified in the request.
   */
  async get(
    getDocumentsRequest?: components.GetDocumentsRequest | undefined,
    xGleanActAs?: string | undefined,
    xGleanAuthType?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.GetDocumentsResponse> {
    return unwrapAsync(clientDocumentsGet(
      this,
      getDocumentsRequest,
      xGleanActAs,
      xGleanAuthType,
      options,
    ));
  }

  /**
   * Read documents by facets
   *
   * @remarks
   * Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) macthing the given facet conditions.
   */
  async getByFacets(
    getDocumentsByFacetsRequest?:
      | components.GetDocumentsByFacetsRequest
      | undefined,
    xGleanActAs?: string | undefined,
    xGleanAuthType?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.GetDocumentsByFacetsResponse> {
    return unwrapAsync(clientDocumentsGetByFacets(
      this,
      getDocumentsByFacetsRequest,
      xGleanActAs,
      xGleanAuthType,
      options,
    ));
  }
}
