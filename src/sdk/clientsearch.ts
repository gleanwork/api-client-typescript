/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientSearchQuery } from "../funcs/clientSearchQuery.js";
import { clientSearchRecommendations } from "../funcs/clientSearchRecommendations.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Admin } from "./admin.js";
import { Feed } from "./feed.js";

export class ClientSearch extends ClientSDK {
  private _admin?: Admin;
  get admin(): Admin {
    return (this._admin ??= new Admin(this._options));
  }

  private _feed?: Feed;
  get feed(): Feed {
    return (this._feed ??= new Feed(this._options));
  }

  /**
   * Recommend documents
   *
   * @remarks
   * Retrieve recommended documents for the given URL or Glean Document ID.
   */
  async recommendations(
    request?: components.RecommendationsRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.ResultsResponse | undefined> {
    return unwrapAsync(clientSearchRecommendations(
      this,
      request,
      options,
    ));
  }

  /**
   * Search
   *
   * @remarks
   * Retrieve results from the index for the given query and filters.
   */
  async query(
    request?: components.SearchRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.SearchResponse> {
    return unwrapAsync(clientSearchQuery(
      this,
      request,
      options,
    ));
  }
}
