/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { indexingTroubleshootingDatasourceStatus } from "../funcs/indexingTroubleshootingDatasourceStatus.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { DatasourceDocuments } from "./datasourcedocuments.js";
import { Document } from "./document.js";
import { User } from "./user.js";

export class Datasource extends ClientSDK {
  private _document?: Document;
  get document(): Document {
    return (this._document ??= new Document(this._options));
  }

  private _documents?: DatasourceDocuments;
  get documents(): DatasourceDocuments {
    return (this._documents ??= new DatasourceDocuments(this._options));
  }

  private _user?: User;
  get user(): User {
    return (this._user ??= new User(this._options));
  }

  /**
   * Beta: Get datasource status
   *
   * @remarks
   * Gather information about the datasource's overall status. Currently in beta, might undergo breaking changes without prior notice.
   *
   * Tip: Refer to the [Troubleshooting tutorial](https://developers.glean.com/docs/indexing_api/indexing_api_troubleshooting/) for more information.
   */
  async status(
    datasource: string,
    options?: RequestOptions,
  ): Promise<components.DebugDatasourceStatusResponse> {
    return unwrapAsync(indexingTroubleshootingDatasourceStatus(
      this,
      datasource,
      options,
    ));
  }
}
