/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientDisplayableListsCreate } from "../funcs/clientDisplayableListsCreate.js";
import { clientDisplayableListsDelete } from "../funcs/clientDisplayableListsDelete.js";
import { clientDisplayableListsGet } from "../funcs/clientDisplayableListsGet.js";
import { clientDisplayableListsUpdate } from "../funcs/clientDisplayableListsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class DisplayableLists extends ClientSDK {
  /**
   * Create displayable lists
   *
   * @remarks
   * Create one or more lists that can be display on the home page.
   */
  async create(
    request: operations.CreatedisplayablelistsRequest,
    options?: RequestOptions,
  ): Promise<components.CreateDisplayableListsResponse> {
    return unwrapAsync(clientDisplayableListsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete displayable lists
   *
   * @remarks
   * Delete one or more displayable lists.
   */
  async delete(
    request: operations.DeletedisplayablelistsRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(clientDisplayableListsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Read displayable lists
   *
   * @remarks
   * Read the details of the displayable lists with the given IDs.
   */
  async get(
    request: operations.GetdisplayablelistsRequest,
    options?: RequestOptions,
  ): Promise<components.GetDisplayableListsResponse> {
    return unwrapAsync(clientDisplayableListsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update displayable lists
   *
   * @remarks
   * Update one or more displayable lists with all fields from request fields.
   */
  async update(
    request: operations.UpdatedisplayablelistsRequest,
    options?: RequestOptions,
  ): Promise<components.UpdateDisplayableListsResponse> {
    return unwrapAsync(clientDisplayableListsUpdate(
      this,
      request,
      options,
    ));
  }
}
