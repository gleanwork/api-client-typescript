/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientToolsList } from "../funcs/clientToolsList.js";
import { clientToolsRun } from "../funcs/clientToolsRun.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tools extends ClientSDK {
  /**
   * List available tools
   *
   * @remarks
   * Returns a filtered set of available tools based on optional tool name parameters. If no filters are provided, all available tools are returned.
   */
  async list(
    toolNames?: Array<string> | undefined,
    options?: RequestOptions,
  ): Promise<components.ToolsListResponse> {
    return unwrapAsync(clientToolsList(
      this,
      toolNames,
      options,
    ));
  }

  /**
   * Execute the specified tool
   *
   * @remarks
   * Execute the specified tool with provided parameters
   */
  async run(
    request: components.ToolsCallRequest,
    options?: RequestOptions,
  ): Promise<components.ToolsCallResponse> {
    return unwrapAsync(clientToolsRun(
      this,
      request,
      options,
    ));
  }
}
