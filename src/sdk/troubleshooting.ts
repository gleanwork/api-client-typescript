/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { indexingTroubleshootingCheckAccess } from "../funcs/indexingTroubleshootingCheckAccess.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Datasource } from "./datasource.js";
import { TroubleshootingDocuments } from "./troubleshootingdocuments.js";
import { Users } from "./users.js";

export class Troubleshooting extends ClientSDK {
  private _datasource?: Datasource;
  get datasource(): Datasource {
    return (this._datasource ??= new Datasource(this._options));
  }

  private _documents?: TroubleshootingDocuments;
  get documents(): TroubleshootingDocuments {
    return (this._documents ??= new TroubleshootingDocuments(this._options));
  }

  private _users?: Users;
  get users(): Users {
    return (this._users ??= new Users(this._options));
  }

  /**
   * Check document access
   *
   * @remarks
   * Check if a given user has access to access a document in a custom datasource
   *
   * Tip: Refer to the [Troubleshooting tutorial](https://developers.glean.com/docs/indexing_api/indexing_api_troubleshooting/) for more information.
   */
  async checkAccess(
    request: components.CheckDocumentAccessRequest,
    options?: RequestOptions,
  ): Promise<components.CheckDocumentAccessResponse> {
    return unwrapAsync(indexingTroubleshootingCheckAccess(
      this,
      request,
      options,
    ));
  }
}
