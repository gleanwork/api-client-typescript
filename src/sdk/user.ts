/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientUserAddCredential } from "../funcs/clientUserAddCredential.js";
import { clientUserDeleteQueryHistory } from "../funcs/clientUserDeleteQueryHistory.js";
import { clientUserGetPublicConfig } from "../funcs/clientUserGetPublicConfig.js";
import { clientUserInvite } from "../funcs/clientUserInvite.js";
import { clientUserRemoveCredential } from "../funcs/clientUserRemoveCredential.js";
import { clientUserSendSupportEmail } from "../funcs/clientUserSendSupportEmail.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class User extends ClientSDK {
  /**
   * Create credentials
   *
   * @remarks
   * API to save a user's credentials. Used for Confluence restricted pages and Tableau per-user auth, for example
   */
  async addCredential(
    request: operations.AddcredentialRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(clientUserAddCredential(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete query history
   *
   * @remarks
   * Remove one or more queries from a user's query history.
   */
  async deleteQueryHistory(
    request: operations.DeletequeryhistoryRequest,
    options?: RequestOptions,
  ): Promise<components.DeleteQueryHistoryResponse> {
    return unwrapAsync(clientUserDeleteQueryHistory(
      this,
      request,
      options,
    ));
  }

  /**
   * Send invitation
   *
   * @remarks
   * Invites people to Glean via email or Slack
   */
  async invite(
    request: operations.InviteRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(clientUserInvite(
      this,
      request,
      options,
    ));
  }

  /**
   * Read public client configuration
   *
   * @remarks
   * Read configuration information such as the company name, logo and etc that is public and is not considered as PII.
   */
  async getPublicConfig(
    request: operations.PublicconfigRequest,
    options?: RequestOptions,
  ): Promise<components.ClientConfig> {
    return unwrapAsync(clientUserGetPublicConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete credentials
   *
   * @remarks
   * Delete a user's credentials. Used for Confluence restricted pages and Tableau per-user auth, for example
   */
  async removeCredential(
    request: operations.RemovecredentialRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(clientUserRemoveCredential(
      this,
      request,
      options,
    ));
  }

  /**
   * Send support email
   *
   * @remarks
   * Sends a support email based on a template to the Glean support team.
   */
  async sendSupportEmail(
    request: operations.SupportEmailRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(clientUserSendSupportEmail(
      this,
      request,
      options,
    ));
  }
}
