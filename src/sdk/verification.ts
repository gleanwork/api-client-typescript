/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientVerificationAddReminder } from "../funcs/clientVerificationAddReminder.js";
import { clientVerificationList } from "../funcs/clientVerificationList.js";
import { clientVerificationVerify } from "../funcs/clientVerificationVerify.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Verification extends ClientSDK {
  /**
   * Create verification
   *
   * @remarks
   * Creates a verification reminder for the document. Users can create verification reminders from different product surfaces.
   */
  async addReminder(
    reminderRequest: components.ReminderRequest,
    xGleanActAs?: string | undefined,
    xGleanAuthType?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.Verification> {
    return unwrapAsync(clientVerificationAddReminder(
      this,
      reminderRequest,
      xGleanActAs,
      xGleanAuthType,
      options,
    ));
  }

  /**
   * List verifications
   *
   * @remarks
   * Returns the information to be rendered in verification dashboard. Includes information for each document owned by user regarding their verifications.
   */
  async list(
    xGleanActAs?: string | undefined,
    xGleanAuthType?: string | undefined,
    count?: number | undefined,
    options?: RequestOptions,
  ): Promise<components.VerificationFeed> {
    return unwrapAsync(clientVerificationList(
      this,
      xGleanActAs,
      xGleanAuthType,
      count,
      options,
    ));
  }

  /**
   * Update verification
   *
   * @remarks
   * Verify documents to keep the knowledge up to date within customer corpus.
   */
  async verify(
    verifyRequest: components.VerifyRequest,
    xGleanActAs?: string | undefined,
    xGleanAuthType?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.Verification> {
    return unwrapAsync(clientVerificationVerify(
      this,
      verifyRequest,
      xGleanActAs,
      xGleanAuthType,
      options,
    ));
  }
}
